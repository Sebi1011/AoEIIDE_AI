;ZebbaAI - Created by Zebba 2021 - 2023

;Version: 0.21.4
;last update: 16th March 2023

;ZebbaAI is a versatile, aggressive and eco orientated AI. The idea of the AI is to set the opponent under pressure 
;asap to keep any pressure from its base. In general, ZebbaAI tries to read the game as good as possible and adapt its
;behaviour based on the current situation. 

;This AI is still in development. Bugs and similar unintended behaviour are likely to happen are being tracked. However,
;some bugs are very situational and hard to fix. If you notice any strange behaviour I'd be more than happy if you'd let me know 

;have fun! :)

;Civs: Can play all civilizations
;Maps: besides standard maps like arabia, ZebbaAI can play nomad and other hybrid maps and custom maps. (Not optimized on water-maps though)
		;ZebbaAI can't play properly on island-like maps: It needs a map with land connection to the enemy
;Taunts in TGs: AI reacts to following taunts: 3 ("food please"), 4("wood please"), 5("gold please"), 6("stone please"), 38("give me your extra resources"), Flare-Location + 48("I'm being attacked, please help")
;Strategies: Drush, Archerrush, Scoutrush, Towerrush, FC into Unique Unit, FC into Gold Unit, Fast-Imp (only pockets in team-games)
;Difficulty: there are no levels of difficulty for ZebbaAI. Its current level is comparable to the hard DE AI. Before any match set the difficulty level to extreme to get the best results since the game nerfs AIs speed on lower difficulty levels

;recently added:
; - added more precise house-placement in dark-age, making the AI building houses outside of tc-range
; - improved house-placement-algorithm in dark-age and fixed several bugs connected with it
; - added code-foundation for boar hunting to shoot and weaken a hunted boar with tc
; - added algorithm to build walls around a tower once it has been placed
; - AI can now garrison sheep when playing gurjaras 
; - AI can now towerrush with donjons
; - added military-advantage factor for more precise decision making
; - slighty improved scouting
; - can now build mining-camps specifically on stone
; - fixed bug that occured when sheep spawned on the edge of the map, causing the scout to freeze
; - fixed various build-order bugs
; - added options to deal with towerrushes
; - added escrow-rules for bloodlines, upgrades for counter unit-lines and for buildings to make counter units
; - AI can now build outposts under certain circumstances
; - AI is building defensive towers more precisely to protect ressources
; - added a current military-evaluator to check, based on AIs current military advantage, if it should act more
; defensively or offensively
; - AI will now retreat from battles if army numbers are too low
; - significantly improved forage gathering
; - improved scouting-pattern for finding the enemy base in 1v1s
; - added elite-skirmisher, halberdier and chemistry to the targetable resource saving list
; - improved placements of defensive towers
; - fixed building forward tcs if military-advantage is too low
; - improved resource drop-off buildings in certain circumstances
; - added basic boar-hunting including tc-shooting
; - improved AIs resource saving system
; - fixed several boar-hunting issues in dark-age
; - AI will now stop military production in feudal if it has a large advantage 
; - greatly improved the archer-rush strategy
; - improved drush and usage of initial scout
; - fixed retreating of army

;ToDo: 

;what's up next:
; - fix training of counter units in feudal to prevent delayed castle-age time
; - test scoutrush (retreat scouts from spearmen) (testing)
; - find a solution for tc-boar-hunting when there are no villager under the tc (switch to old boar-hunting if
; not enough villagers under tc)
; - find a solution against villager harassments in dark-age (testing)
; - implement tc-garrison code for every tc (testing) (does not work)

; - remake towerrush due to several numbers of bugs
; - test towerrush
; - implement up-jump-rule rule to skip build-order rules after castle-age
; - add ability to garrison low-hp villagers being attacked in the next tc
; - implement and test sn-special-attack-type2
; - add "closest-player-next" and set it to focus-players for team-game pocket-players (bug-potential)
; - add market-price check before buying/selling resources
; - retreat with army in dark-age in drushes if villager number is to high (bug potential)
; - improve dark-age builder selection for building resource drop-off points
; - Eat only one sheep at a time (bug potential)
; - implement scouting-pattern for scouting own base (bug potential)
; - decrease d-villager-goal for mongols when scout/archer-rushing, in addition changes need to be made to 
; constructions of buildings connected to villager count (bug potential)
; - fix problem that causes boar luring villagers being retasked to build non-duc buildings (tested)


;improving drush:
; - use scout to block villagers for militias
; - retreat with army when villager numbers are too high
; - keep scout and militia closer together

;improving scoutrush:
; - use one scout to block villagers for other scouts
; - retreat with scouts when villager numbers are too high
; - build farms faster (tested)

;improving archerrush:
; - set up groups of archers to attack at multiple locations more precisely
; - retreat with single archer units when villager numbers are too high
; - keep initial scout near army when launching the 1st attack

;improving trush:
; - add villagers ability to fight back when tower is under attack
; - implement decision making for building fu-towers clock-wise or counter-clockwise
; - in trushes, keep builder villagers forward, even if no tower is being built (either build lumber/mining-camp nearby 
; or garrison in a tower manually)
; - improve timing of walling towers
; - use military to defend forward towers and towers under construction
; - prevent towers being built inside enemys tower range
; - prevent initial towers being built inside enemys tc-range
; - stop walling a tower-spot when tower has been destroyed
; - fix correct setting up of villager groups for towerrush

;improving fastcastle gu & uu
; - start walling base earlier
; - overall improve build order and eco management to minimize idle time and get to castle-age faster

;improving fastimp
; - start training army faster

;improving general behaviour
; - find rules to make a switch to main-gold-unit later/ at a more fitting time
; - improve defensive tower placement to select dangerous areas more precisely
; - improve retreating code from enemy castles, to also retreat from buildings not obtained by the focus-player
; - change fcgu builds to build stable/archery-range instead of a market
; - add a new strategy "defensive fast-feudal", 22-pop feudal, change to this strategy in fc builds if researching to castle-age 
; does not work due to enemy pressure
; - implement taunt "31" ("Attack an enemy now!") and taunt reaction to enable combined attacks in teamgames
; - Saving resources for upgrades/buildings (work in progress) (missing: Capped/Siege Ram/Elephant, Onager, Siege Engineers, UTs, Redemption)
; - optimization of prioritisation of upgrades (-work in progress)
; - improve behaviour of villagers defending from enemy scout rushes
; - evacuate base to new safe position in TG when old base is being destroyed (work in progress)
; - improve attack intelligence, such as grouping up units before attack/ retreating when enemy military-count is too high/
;/retreating single units from enemy-counter unit/ patrol-attacking, target areas with army more precisely/
; add ability to micro ranged-units
; - More accurate scouting
; - using scouting info for strategic decisions --> saving expected opponents strategy in a goal
; - improve rules of building outposts
; - more strategies(smush (needs deer pushing), defensive feudal & spear/skirm-rush are planned)
; - use sheep to scout
; - implement deer-pushing
; (- implement build-order for cuman 2 TC-Feudal play)
; - implement intelligent civ-evaluation to improve decision making and strategy choice in any civ-matchup
; - building markets at the edges of the map in TGs
; - improve walling: walling more precisely to forests and resources, use buildings as part of the wall
; - use first fishing ship to gather food instead of scouting on water (waiting for bug-fix)
; - build alternative lumber/mining-camp when another one is under attack
; - garrison villager in houses when being attacked as KHMER
; - as POLES, build farms at folwarks


;needs to be fixed:

; - fix several bugs related to tc-boar hunting
; - fix non-ranged-units behaviour to ignore ranged units standing inside their own tc/tower/castle range.
; causing the AI units trying to attack them, but retreating once they touch the tc-range
; - fix constant switching targets of military units
; - fix flare-sending enemy tcs at the start at nomad
; - fix flare-sending issue in team-games, causing the AI to send random flares once one teammate has found an enemy 
; fortification
; - fix sn-camp-max-distance issue; gold/stone/wood piles are not being found correctly
; - fix sending builders to regions on the map that are guarded by the enemy 
; - fix counting of enemy warships
; - fix auto-garrison in towers when enemy units are close (currently deactivated)



;region Defconsts ==================================================


(defconst object-data-index -1)
(defconst object-data-id 0)
(defconst object-data-type 1)
(defconst object-data-class 2)
(defconst object-data-category 3)
(defconst object-data-cmdid 4)
(defconst object-data-action 5)
(defconst object-data-order 6)
(defconst object-data-target 7)
(defconst object-data-point-x 8)
(defconst object-data-point-y 9)
(defconst object-data-hitpoints 10)
(defconst object-data-maxhp 11)
(defconst object-data-range 12)
(defconst object-data-speed 13)
(defconst object-data-dropsite 14)
(defconst object-data-resource 15)
(defconst object-data-carry 16)
(defconst object-data-garrisoned 17)
(defconst object-data-garrison-count 18)
(defconst object-data-status 19)
(defconst object-data-player 20)
(defconst object-data-attack-stance 21)
(defconst object-data-action-time 22)
(defconst object-data-target-id 23)
(defconst object-data-formation-id 24)
(defconst object-data-patrolling 25)
(defconst object-data-strike-armor 26)
(defconst object-data-pierce-armor 27)
(defconst object-data-base-attack 28)
(defconst object-data-locked 29)
(defconst object-data-garrison-id 30)
(defconst object-data-train-count 31)
(defconst object-data-tasks-count 32)		;increased for internal tasks performed on the object (may be more than 1 per event)
(defconst object-data-attacker-count 33)	;not increased for certain situations like hunting
(defconst object-data-attacker-id 34)		;not set for certain situations like hunting
(defconst object-data-under-attack 35)		;not set for certain situations like hunting
(defconst object-data-attack-timer 36)		;resets to 60s for each attack (buildings only)
(defconst object-data-point-z 37)
(defconst object-data-precise-x 38)			;point x100.0
(defconst object-data-precise-y 39)
(defconst object-data-precise-z 40)
(defconst object-data-researching 41)
(defconst object-data-tile-position 42)		;match with sn-target-point-adjustment
(defconst object-data-tile-inverse 43)
(defconst object-data-distance 44)			;based on target-point
(defconst object-data-precise-distance 45)
(defconst object-data-full-distance 46)
(defconst object-data-map-zone-id 47)
(defconst object-data-on-mainland 48)		;compares map-zone-id to home TC map-zone-id
(defconst object-data-idling 49)
(defconst object-data-move-x 50)
(defconst object-data-move-y 51)
(defconst object-data-precise-move-x 52)
(defconst object-data-precise-move-y 53)
(defconst object-data-reload-time 54)
(defconst object-data-next-attack 55)
(defconst object-data-train-site 56)
(defconst object-data-train-time 57)		;in seconds
(defconst object-data-blast-radius 58)		;radius x100.0
(defconst object-data-blast-level 59)
(defconst object-data-progress-type 60)
(defconst object-data-progress-value 61)
(defconst object-data-min-range 62)
(defconst object-data-target-time 63)		;in milliseconds (not for villagers)
(defconst object-data-heresy 64)		;checks amount-heresy
(defconst object-data-faith 65)			;checks amount-convert-resistance
(defconst object-data-redemption 66)		;checks amount-convert-building
(defconst object-data-atonement 67)		;checks amount-convert-priest
(defconst object-data-theocracy 68)		;checks amount-theocracy
(defconst object-data-spies 69)			;checks amount-spies
(defconst object-data-ballistics 70)
(defconst object-data-gather-type 71)		;food, wood, gold, stone, or -1 for none
(defconst object-data-language-id 72)		;can use to check villager types
(defconst object-data-group-flag 73)		;group id from 0 to 9 or -2 for none
(defconst object-data-hero-flags 74)		;combined hero status flags
(defconst object-data-hero 75)			;has actual hero flag set
(defconst object-data-auto-heal 76)		;will hero heal (non-berserk)
(defconst object-data-no-convert 77)		;cannot be converted
(defconst object-data-frame-delay 78)		;number of frames for projectile delay
(defconst object-data-attack-count 79)		;consecutive attack count
(defconst object-data-to-precise 80)		;precise distance to a precise target-point
(defconst object-data-base-type 81)		;object base type id
(defconst object-data-upgrade-type 82)		;object upgrade type id

;(defconst sn-special-attack-type2 107)

(defconst list-active 0)
(defconst list-inactive 1)

(defconst search-order-none 0)
(defconst search-order-asc 1)
(defconst search-order-desc 2)

(defconst status-pending 0)
(defconst status-ready 2)
(defconst status-resource 3)
(defconst status-down 4)
(defconst status-gather 5)

(defconst explored-no 0)
(defconst explored-yes 128)
(defconst explored-active 15)

(defconst YES 1)
(defconst NO 2)
(defconst search-order-desc 2)
(defconst text-enemy-located-here "%s ist hier.")
(defconst villager 83)
(defconst cmdid-military 4)
(defconst retreat-now-goal 20)
(defconst attack-now-goal 21)
(defconst reset 62)

(defconst action-default 0)
(defconst action-move 1)
(defconst action-patrol 2)
(defconst action-guard 3)
(defconst action-follow 4)
(defconst action-stop 5)
(defconst action-ground 6)
(defconst action-garrison 7)
(defconst action-delete 8)
(defconst action-unload 9)
(defconst action-train 10)
(defconst action-gather 11)
(defconst action-lock 12)
(defconst action-work 13)
(defconst action-ungarrison 14)
(defconst action-drop-relic 15)
(defconst action-pack 16)
(defconst action-unpack 17)
(defconst action-none 18)
(defconst action-attack-move 19)
(defconst action-transform 20)

(defconst scout-center 0)
(defconst scout-opposite 1)
(defconst scout-corner 2)
(defconst scout-enemy 3)
(defconst scout-border 4)
(defconst scout-mirror 5)
(defconst scout-flank 6)

(defconst object-data-player 20)
(defconst object-data-distance 44)

;timers 

(defconst retreating-timer 1)
(defconst split-stance-timer 2)
(defconst boar-luring-timer 5)
(defconst tc-boar-shooting-timer 6)
(defconst res-notification-timer 7)
(defconst age-up-notification-timer 8)
(defconst escrow-data-timer 9)
(defconst tribute-request-timer 10)
(defconst help-request-timer 11)
(defconst position-object 12)
(defconst archer-class-timer 13)
(defconst cavarcher-class-timer 14)
(defconst retreat-timer 15)
(defconst warboat-count 16)
(defconst helping-ally-timer 17)
(defconst resign-timer 18)
(defconst scouting-timer 19)
(defconst t-3-sec 20)
(defconst boar-timer 34)
(defconst increase-camp-size-timer 35)
(defconst reset-timer 38)


(defconst FDrop 14)
(defconst MinVillsToGarrison 3)    ;number of vills that must be near the TC in order to garrison
(defconst gl-tc-search-distance 7)    ;how far from the TC an enemy unit has to be to trigger the garrisoning
(defconst gl-garrison-count 10)    ;how many villagers should be put inside the TC
(defconst gl-set-tc-garrison 69)
(defconst gl-garrison-tc 71)
(defconst gl-garrison-tc-two 72)
(defconst TowerGarrisonGoal 75)
(defconst gl-garrison-tower 76)

;civs
(defconst italian 19)
(defconst indian 20)
(defconst incan 21)
(defconst magyar 22)
(defconst slavic 23)
(defconst portuguese 24)
(defconst ethiopian 25)
(defconst malian 26)
(defconst berbers 27)
(defconst khmer 28)
(defconst malay 29)
(defconst burmese 30)
(defconst vietnamese 31)
(defconst bulgarians 32)
(defconst tatars 33)
(defconst cumans 34)
(defconst lithuanians 35)
(defconst burgundians 36)
(defconst sicilians 37)
(defconst poles 38)
(defconst bohemians 39)
(defconst dravidians 40)
(defconst bengalis 41)
(defconst gurjaras 42)

;local and remote goals
(defconst gl-local-total 41)
(defconst gl-local-last 42)
(defconst gl-remote-total 43)
(defconst gl-remote-last 44)

(defconst random-number 33)
(defconst resource-amount 34)

(defconst villager-pop 46)
(defconst civilian-pop 47)
(defconst enemy-military-pop 48)
(defconst enemy-warship-pop 49)
(defconst enemy-infantry-goal 50)
(defconst our-military-pop 51)
(defconst strategy-goal 52)
(defconst sg-archerrush 53)
(defconst sg-scoutrush 54)
(defconst sg-towerrush 55)
(defconst sg-fastcastle-uu 56)
(defconst sg-drush 57)
(defconst sg-smush 58)
(defconst sg-fastcastle-gu 59)
(defconst sg-waterplay 60)
(defconst sg-boom-imp 61)
(defconst relic-count 63)
(defconst gold-mine 66)
(defconst drush-goal 67)
(defconst retreating-goal 70)
(defconst object-data-group-flag 73)
(defconst gl-drush-militia-count 80)
(defconst preferred-target-player 86)
(defconst gl-helping-ally 90)
(defconst gl-loop-counter 91)
(defconst gl-tc-loop-counter 92)
(defconst gl-castle-loop-counter 93)
(defconst gl-self-loop-counter 94)
(defconst gl-tower-loop-counter 95)
(defconst gl-temp-three 98)
(defconst gl-temp-two 99)
(defconst gl-temp 100)
(defconst gl-trush-init 101)
(defconst stone-mine 102)
(defconst gl-archery-class-units 103)
(defconst gl-cavalry-archer-units 104)
(defconst gl-gaia-sheep-found 105)
(defconst gl-attack-ram 106)
(defconst gl-temp1 107)
(defconst gl-wall-counter 110)
(defconst gl-wall-tower 111)
(defconst position-self 120)
(defconst gl-starting-tc-x 121)	; Main TC x coordinate
(defconst gl-starting-tc-y 122) ; Main TC y coordinate
(defconst enemy-point-x 123) 
(defconst enemy-point-y 124)
(defconst enemy-tower-point-x 125)
(defconst enemy-tower-point-y 126)  
(defconst split-rule-goal 128)
(defconst gl-tc-point-x 129)
(defconst gl-tc-point-y 130)
(defconst gl-temp-tower-x 131)
(defconst gl-temp-tower-y 132)
(defconst gl-self-point-x 133)
(defconst gl-self-point-y 134)
(defconst amnt-escrow-food 135)
(defconst amnt-escrow-wood 136)
(defconst amnt-escrow-gold 137)
(defconst amnt-escrow-stone 138)
(defconst meso-civ 140)
(defconst gl-food-saving 143)
(defconst gl-wood-saving 144)
(defconst gl-gold-saving 145)
(defconst gl-stone-saving 146)

(defconst gl-house 150)
(defconst vil-loom-hp 151)
(defconst gl-military-advantage 152)
(defconst gl-eco-advantage 153)
(defconst gl-strategic-position 154)
(defconst gl-main-unit 155)
(defconst gl-second-unit 156)
(defconst gl-raiding-unit 157)
(defconst gl-tower-id 160)
(defconst gl-wall-id 161)
(defconst gl-main-tc-id 162)
(defconst gl-temp-scout-id 163)
(defconst watch-tower-point-x 178)
(defconst watch-tower-point-y 179)
(defconst sn-nomad-style-start 180)
(defconst gl-water-on-map 181)
(defconst gl-number-scouts 190)
(defconst gl-scout-index 191)
(defconst gl-scout-spear-ratio 192)
(defconst gl-selfs 197)
(defconst gl-castles 198)
(defconst gl-tcs 199)
(defconst gl-loop-tower 200)
(defconst gl-towers 201)
(defconst gl-enemy-towers 201)
(defconst temp-goal-one 202)
(defconst temp-counter-goal 203)
(defconst gl-unit-x 206)
(defconst gl-unit-y 207)
(defconst object-point-x 208)
(defconst object-point-y 209)
(defconst enemy-castle-point-x 210)
(defconst enemy-castle-point-y 211)
(defconst crossing-castle-point-x 212)
(defconst crossing-castle-point-y 213)
(defconst sheep-point-x 214)
(defconst sheep-point-y 215)
(defconst shorefish-point-x 216)
(defconst shorefish-point-y 217)
(defconst nomad-tc-point-x 218)
(defconst nomad-tc-point-y 219)
(defconst gl-militia-x 220)
(defconst gl-militia-y 221)
(defconst enemy-units-point-x 222)
(defconst enemy-units-point-y 223)
(defconst gl-point-x 224)
(defconst gl-point-y 225)
(defconst gl-camp-x 226)
(defconst gl-camp-y 227)
(defconst gl-scout-x 228)
(defconst gl-scout-y 229)
(defconst gl-temp-x 230)
(defconst gl-temp-y 231)
(defconst gl-center-x 232)
(defconst gl-center-y 233)

(defconst d-villager-goal 235)
(defconst f-villager-goal 236)
(defconst c-villager-goal 237)

(defconst gl-scout-map 240)

(defconst gl-priority-goal 249)
(defconst ca-strategy 250)
(defconst gl-castleage-stableunit 251)
(defconst gl-castleage-rangeunit 252)
(defconst gl-castleage-eagles 253)
(defconst flare 274)
(defconst g-boar-id 280)
(defconst g-boar-status 281)
(defconst remaining-boar-food 282)
(defconst boar-food-amount 283)
(defconst gl-distance-temp 289)
(defconst gl-distance-temp-one 290)
(defconst gl-distance-temp-two 291)
(defconst gl-distance-temp-three 292)

(defconst civ-eco-s 300)
(defconst civ-archery-s 301)
(defconst civ-infantry-s 302)
(defconst civ-cavalry-s 303)
(defconst civ-siege-s 304)
(defconst civ-uu-s 305)

(defconst gl-darkage-safe 350)
(defconst gl-feudalage-safe 351)
(defconst gl-castleage-safe 352)
(defconst gl-feudalup-compare 353)
(defconst gl-castleup-compare 354)
(defconst gl-civ-uu-cost 355)
(defconst gl-ressaving-notification 356)
(defconst gl-camp-distance-setter 358)

(defconst amnt-archers 400)
(defconst amnt-skirmishers 401)
(defconst amnt-longbows 402)
(defconst amnt-chu-ko-nu 403)
(defconst amnt-plumes 404)
(defconst amnt-genoese-crossbowmen 405)
(defconst amnt-rattans 406)
(defconst amnt-cavarcher 407)
(defconst amnt-mangudai 408)
(defconst amnt-war-wagons 409)
(defconst amnt-camel-archers 410)
(defconst amnt-genitour 411)
(defconst amnt-kipchak 412)
(defconst amnt-elearcher 413)
(defconst amnt-ratha 414)

(defconst temporary-goal 500)

(defconst ri-first-crusade 756)
(defconst barracks-huskarl 759)
(defconst elite-barracks-huskarl 761)
(defconst archery-class 900)
(defconst monument-class 901)
(defconst trade-cog-class 902)
(defconst building-class 903)
(defconst villager-class 904)
(defconst deep-fish 905)
(defconst infantry-class 906)
(defconst forage-class 907)
(defconst stone-mine-class 908)
(defconst deer-class 909)
(defconst boar-class 910)
(defconst miscellaneous-class 911)
(defconst cavalry-unit-class 912)
(defconst siege-weapon-class 913)
(defconst terrain-class 914)
(defconst tree-class 915)
(defconst monastery-class 918)
(defconst trade-cart-class 919)
(defconst transport-ship-class 920)
(defconst fishing-ship-class 921)
(defconst warship-class 922)
(defconst cavalry-cannon-class 923)
(defconst wall-class 927)
(defconst flag-class 930)
(defconst gold-mine-class 932)
(defconst petard-class 935)
(defconst cavalry-archer-class 936)
(defconst relic-class 942)
(defconst monk-with-relic-class 943)
(defconst archery-cannon-class 944)
(defconst scout-cavalry-class 947)
(defconst packed-trebuchet-class 951)
(defconst tower-class 952)
(defconst unpacked-trebuchet-class 954)
(defconst scorpion-class 955)
(defconst livestock-class 958)
(defconst king-class 959)

(defconst monk-set 970)
(defconst trebuchet-set 971)
(defconst huskarl-set 972)
(defconst villager-shepherd 973)
(defconst villager-forager 974)
(defconst villager-farmer 975)
(defconst villager-hunter 976)
(defconst villager-fisherman 977)
(defconst villager-food 978)
(defconst villager-wood 979)
(defconst villager-stone 980)
(defconst villager-gold 981)
(defconst villager-builder 982)
(defconst villager-repairer 983)
(defconst villager-base 984)

(defconst camel-scout 1755)
(defconst ratha-train 1759)

;endregion

;region Strategic-Number Settings ==================================

(defrule
	(true)
=>
	(set-strategic-number sn-do-not-scale-for-difficulty-level 1)
	(set-strategic-number sn-cap-civilian-explorers 10)
	(set-strategic-number sn-total-number-explorers 11)
	(set-strategic-number sn-cap-civilian-builders 200)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-initial-exploration-required 0)
	(set-strategic-number sn-minimum-boar-hunt-group-size 0)
	(set-strategic-number sn-gate-type-for-wall 1)
	(set-strategic-number sn-garrison-rams 1)
	(set-strategic-number sn-building-targeting-mode 0)
	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-wall-targeting-mode 1)
	(set-goal civilian-pop 0)
	(set-goal villager-pop 0)
	(up-assign-builders c: town-center c: 6)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-nomad-style-start 0)	
	(set-strategic-number sn-number-forward-builders 6)
	(set-strategic-number sn-dock-training-filter 0)
	(set-strategic-number sn-percent-building-cancellation 35)
	(set-strategic-number sn-allow-serjeant-building 1)
	(set-difficulty-parameter ability-to-dodge-missiles 0)
	(set-difficulty-parameter ability-to-maintain-distance 0)		
	(disable-self)
)

(defrule
	(true)
=>
	(enable-wall-placement 1)
	(set-strategic-number sn-preferred-trade-distance 9999)
	(set-strategic-number sn-allow-civilian-defense 1)
	(set-strategic-number sn-allow-civilian-offense 2)
	(set-strategic-number sn-intelligent-gathering 1)
	(set-strategic-number sn-consecutive-idle-unit-limit 0)
	(set-strategic-number sn-group-form-distance 60)
	(set-strategic-number sn-gather-defense-units 1)
	(set-strategic-number sn-livestock-to-town-center 1)
	(set-strategic-number sn-allow-capturing-gaia-units 1)
	(set-strategic-number sn-dropsite-separation-distance 5)
	(set-strategic-number sn-camp-max-distance 16)
	(set-strategic-number sn-minimum-water-body-size-for-dock 100)
	(set-strategic-number sn-number-civilian-militia 9)
	(set-strategic-number sn-enable-training-queue 1)
	(set-strategic-number sn-enable-research-queue 0)
	(set-strategic-number sn-number-boat-explore-groups 0)
	(set-strategic-number sn-maximum-boat-explore-group-size 0)
	(set-strategic-number sn-minimum-boat-explore-group-size 0)
	(set-strategic-number sn-retask-gather-amount 0)
	(set-strategic-number sn-maximum-garrison-fill 0)
	(set-strategic-number sn-number-garrison-units 0)
	(set-strategic-number sn-coop-share-attacking 0)
	(set-strategic-number sn-local-targeting-mode 1)
	(set-strategic-number sn-placement-zone-size 1)
	(set-strategic-number sn-placement-fail-delta 1)
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-maximum-fish-boat-drop-distance 30)
	(set-strategic-number sn-maximum-food-drop-distance 20)
	(set-strategic-number sn-maximum-gold-drop-distance 20)
	(set-strategic-number sn-maximum-hunt-drop-distance 30)
	(set-strategic-number sn-maximum-stone-drop-distance 20)
	(set-strategic-number sn-scale-minimum-attack-group-size 0)
	(set-strategic-number sn-task-ungrouped-soldiers 0)
	(set-strategic-number sn-disable-villager-garrison 0)
	(set-strategic-number sn-enable-offensive-priority 1)
	(set-strategic-number sn-ignore-tower-elevation 1)
	(set-strategic-number sn-zero-priority-distance 255)
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-enable-patrol-attack 1)
	;(set-strategic-number sn-number-attack-groups 500)
	;(set-strategic-number sn-minimum-attack-group-size 1)
	;(set-strategic-number sn-maximum-attack-group-size 1)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-attack-group-gather-spacing 7)
	(set-strategic-number sn-filter-under-attack 1)
	(set-strategic-number sn-disable-builder-assistance 1)
	(set-strategic-number sn-disable-defend-groups 1)
	(disable-self)
)

;region UNIT AND BUILDING PRIORITIZATIONS ============================

(defrule
	(true)
=>
	(set-goal gl-priority-goal -1)
	(disable-self)
)

(defrule
	(town-under-attack)
	(up-compare-sn sn-disable-defend-groups != 0)
=>
	(set-strategic-number sn-disable-defend-groups 0)
)

(defrule
	(not (town-under-attack))
	(up-compare-sn sn-disable-defend-groups != 1)
=>
	(set-strategic-number sn-disable-defend-groups 1)
)

;drush

(defrule
	(goal gl-priority-goal 1)
=>
	(up-jump-rule 3)
)

(defrule
	(goal strategy-goal sg-drush)
	(current-age == dark-age)
	(up-compare-goal gl-priority-goal != 1)
=>
	(set-goal gl-priority-goal 1)
)

(defrule
	(goal gl-priority-goal 1)
=>
	(up-set-offense-priority c: town-center c: 2)
	(up-set-offense-priority c: house c: 5)
	(up-set-offense-priority c: mill c: 5)
	(up-set-offense-priority c: lumber-camp c: 5)
	(up-set-offense-priority c: mining-camp c: 5)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 3)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: 1)
	(up-set-offense-priority c: krepost c: 1)
	(up-set-offense-priority c: watch-tower c: 3)
	(up-set-offense-priority c: donjon c: 3)
	(up-set-offense-priority c: bombard-tower c: 1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 1)
	(up-set-offense-priority c: dock c: 5)
	(up-set-offense-priority c: barracks c: 5)
	(up-set-offense-priority c: stable c: 5)
	(up-set-offense-priority c: archery-range c: 5)
	(up-set-offense-priority c: siege-workshop c: 5)
	(up-set-offense-priority c: monastery c: 1)
)

(defrule
	(goal gl-priority-goal 1)
=>
	(up-set-offense-priority c: villager c: 7)
	(up-set-offense-priority c: militia c: 11)
	(up-set-offense-priority c: man-at-arms c: 11)
	(up-set-offense-priority c: spearman c: 9)
	(up-set-offense-priority c: eagle-warrior c: 9)
    (up-set-offense-priority c: archer c: 8)
	(up-set-offense-priority c: skirmisher c: 8)
	(up-set-offense-priority c: scout-cavalry c: 9)
	(up-set-offense-priority c: camel-scout c: 9)
    (up-set-offense-priority c: knight c: 1)
	(up-set-offense-priority c: camel c: 2)
	(up-set-offense-priority c: battle-elephant c: 1)
	(up-set-offense-priority c: cavalry-archer c: 1)
	(up-set-offense-priority c: monastery-class c: 1)
	(up-set-offense-priority c: monk-with-relic-class c: 1)
	(up-set-offense-priority c: feudal-battering-ram c: 10)
	(up-set-offense-priority c: battering-ram c: 10)
	(up-set-offense-priority c: armored-elephant c: 1)
	(up-set-offense-priority c: mangonel c: 1)
	(up-set-offense-priority c: scorpion c: 1)
	(up-set-offense-priority c: bombard-cannon c: 1)	
	(up-set-offense-priority c: fishing-ship c: 10)
)

;archerrush

(defrule
	(goal gl-priority-goal 2)
=>
	(up-jump-rule 3)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(up-compare-goal gl-priority-goal != 2)
=>
	(set-goal gl-priority-goal 2)
)

(defrule
	(goal gl-priority-goal 2)
=>
	(up-set-offense-priority c: town-center c: 1)
	(up-set-offense-priority c: house c: 2)
	(up-set-offense-priority c: mill c: 5)
	(up-set-offense-priority c: lumber-camp c: 5)
	(up-set-offense-priority c: mining-camp c: 5)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 1)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: 1)
	(up-set-offense-priority c: krepost c: 1)
	(up-set-offense-priority c: watch-tower c: 3)
	(up-set-offense-priority c: donjon c: 3)
	(up-set-offense-priority c: bombard-tower c: 1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 1)
	(up-set-offense-priority c: dock c: 5)
	(up-set-offense-priority c: barracks c: 5)
	(up-set-offense-priority c: stable c: 5)
	(up-set-offense-priority c: archery-range c: 5)
	(up-set-offense-priority c: siege-workshop c: 5)
	(up-set-offense-priority c: monastery c: 1)
)

(defrule
	(goal gl-priority-goal 2)
=>
	(up-set-offense-priority c: villager c: 6)
	(up-set-offense-priority c: militia c: 8)
	(up-set-offense-priority c: man-at-arms c: 8)
	(up-set-offense-priority c: spearman c: 10)
	(up-set-offense-priority c: eagle-warrior c: 8)
    (up-set-offense-priority c: archer c: 7)
	(up-set-offense-priority c: skirmisher c: 6)
	(up-set-offense-priority c: scout-cavalry c: 9)
	(up-set-offense-priority c: camel-scout c: 9)
    (up-set-offense-priority c: knight c: 1)
	(up-set-offense-priority c: camel c: 3)
	(up-set-offense-priority c: battle-elephant c: 1)
	(up-set-offense-priority c: cavalry-archer c: 4)
	(up-set-offense-priority c: monastery-class c: 8)
	(up-set-offense-priority c: monk-with-relic-class c: 8)
	(up-set-offense-priority c: feudal-battering-ram c: 10)
	(up-set-offense-priority c: battering-ram c: 10)
	(up-set-offense-priority c: armored-elephant c: 1)
	(up-set-offense-priority c: mangonel c: 1)
	(up-set-offense-priority c: scorpion c: 1)
	(up-set-offense-priority c: bombard-cannon c: 6)	
	(up-set-offense-priority c: fishing-ship c: 10)
)

;scoutrush

(defrule
	(goal gl-priority-goal 3)
=>
	(up-jump-rule 3)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(up-compare-goal gl-priority-goal != 3)
=>
	(set-goal gl-priority-goal 3)
)

(defrule
	(goal gl-priority-goal 3)
=>
	(up-set-offense-priority c: town-center c: 1)
	(up-set-offense-priority c: house c: 5)
	(up-set-offense-priority c: mill c: 5)
	(up-set-offense-priority c: lumber-camp c: 5)
	(up-set-offense-priority c: mining-camp c: 5)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 5)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: 1)
	(up-set-offense-priority c: krepost c: 1)
	(up-set-offense-priority c: watch-tower c: 5)
	(up-set-offense-priority c: donjon c: 5)
	(up-set-offense-priority c: bombard-tower c: 1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 1)
	(up-set-offense-priority c: dock c: 5)
	(up-set-offense-priority c: barracks c: 4)
	(up-set-offense-priority c: stable c: 5)
	(up-set-offense-priority c: archery-range c: 5)
	(up-set-offense-priority c: siege-workshop c: 5)
	(up-set-offense-priority c: monastery c: 5)
)

(defrule
	(goal gl-priority-goal 3)
=>
	(up-set-offense-priority c: villager c: 7)
	(up-set-offense-priority c: militia-line c: 8)
	(up-set-offense-priority c: man-at-arms c: 8)
	(up-set-offense-priority c: spearman c: 6)
	(up-set-offense-priority c: eagle-warrior c: 9)
    (up-set-offense-priority c: archer c: 10)
	(up-set-offense-priority c: skirmisher c: 5)
	(up-set-offense-priority c: scout-cavalry c: 9)
	(up-set-offense-priority c: camel-scout c: 9)
    (up-set-offense-priority c: knight c: 2)
	(up-set-offense-priority c: camel c: 1)
	(up-set-offense-priority c: battle-elephant c: 1)
	(up-set-offense-priority c: cavalry-archer c: 3)
	(up-set-offense-priority c: monastery-class c: 11)
	(up-set-offense-priority c: monk-with-relic-class c: 11)
	(up-set-offense-priority c: feudal-battering-ram c: 10)
	(up-set-offense-priority c: battering-ram c: 10)
	(up-set-offense-priority c: armored-elephant c: 7)
	(up-set-offense-priority c: mangonel c: 7)
	(up-set-offense-priority c: scorpion c: 7)
	(up-set-offense-priority c: bombard-cannon c: 7)	
	(up-set-offense-priority c: fishing-ship c: 10)
)

;trush

(defrule
	(goal gl-priority-goal 4)
=>
	(up-jump-rule 3)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(up-compare-goal gl-priority-goal != 4)
=>
	(set-goal gl-priority-goal 4)
)

(defrule
	(goal gl-priority-goal 4)
=>
	(up-set-offense-priority c: town-center c: 2)
	(up-set-offense-priority c: house c: 5)
	(up-set-offense-priority c: mill c: 5)
	(up-set-offense-priority c: lumber-camp c: 5)
	(up-set-offense-priority c: mining-camp c: 5)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 3)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: 1)
	(up-set-offense-priority c: krepost c: 1)
	(up-set-offense-priority c: watch-tower c: 6)
	(up-set-offense-priority c: donjon c: 6)
	(up-set-offense-priority c: bombard-tower c: 1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 1)
	(up-set-offense-priority c: dock c: 5)
	(up-set-offense-priority c: barracks c: 5)
	(up-set-offense-priority c: stable c: 5)
	(up-set-offense-priority c: archery-range c: 5)
	(up-set-offense-priority c: siege-workshop c: 5)
	(up-set-offense-priority c: monastery c: 1)
)

(defrule
	(goal gl-priority-goal 4)
=>
	(up-set-offense-priority c: villager c: 8)
	(up-set-offense-priority c: militia c: 9)
	(up-set-offense-priority c: man-at-arms c: 9)
	(up-set-offense-priority c: spearman c: 8)
	(up-set-offense-priority c: eagle-warrior c: 8)
    (up-set-offense-priority c: archer c: 4)
	(up-set-offense-priority c: skirmisher c: 3)
	(up-set-offense-priority c: scout-cavalry c: 8)
	(up-set-offense-priority c: camel-scout c: 8)
    (up-set-offense-priority c: knight c: 1)
	(up-set-offense-priority c: camel c: 2)
	(up-set-offense-priority c: battle-elephant c: 1)
	(up-set-offense-priority c: cavalry-archer c: 1)
	(up-set-offense-priority c: monastery-class c: 5)
	(up-set-offense-priority c: monk-with-relic-class c: 5)
	(up-set-offense-priority c: feudal-battering-ram c: 10)
	(up-set-offense-priority c: battering-ram c: 10)
	(up-set-offense-priority c: armored-elephant c: 10)
	(up-set-offense-priority c: mangonel c: 7)
	(up-set-offense-priority c: scorpion c: 1)
	(up-set-offense-priority c: bombard-cannon c: 1)	
	(up-set-offense-priority c: fishing-ship c: 10)
)

; (defrule
	; (current-age >= castle-age)
; =>
	; (set-strategic-number sn-enable-offensive-priority 0)
	; (disable-self)
; )

; (defrule
	; (current-age >= castle-age)
; =>
	; (up-jump-rule 12)
; )

;fcgu

;eagles

(defrule
	(goal gl-priority-goal 5)
=>
	(up-jump-rule 3)
)

(defrule
	(goal ca-strategy gl-castleage-eagles)
	(current-age >= castle-age)
	(up-compare-goal gl-priority-goal != 5)
=>
	(set-goal gl-priority-goal 5)
)

(defrule
	(goal gl-priority-goal 5)
=>
	(up-set-offense-priority c: town-center c: 4)
	(up-set-offense-priority c: house c: 4)
	(up-set-offense-priority c: mill c: 6)
	(up-set-offense-priority c: lumber-camp c: 6)
	(up-set-offense-priority c: mining-camp c: 6)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 3)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: -1)
	(up-set-offense-priority c: krepost c: -1)
	(up-set-offense-priority c: watch-tower c: 4)
	(up-set-offense-priority c: donjon c: 4)
	(up-set-offense-priority c: bombard-tower c: -1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 3)
	(up-set-offense-priority c: dock c: 4)
	(up-set-offense-priority c: barracks c: 4)
	(up-set-offense-priority c: stable c: 4)
	(up-set-offense-priority c: archery-range c: 4)
	(up-set-offense-priority c: siege-workshop c: 4)
	(up-set-offense-priority c: monastery c: 5)
)

(defrule
	(goal gl-priority-goal 5)
=>
	(up-set-offense-priority c: villager c: 6)
	(up-set-offense-priority c: long-swordsman c: 7)
	(up-set-offense-priority c: spearman c: 8)
	(up-set-offense-priority c: pikeman c: 8)
	(up-set-offense-priority c: eagle-warrior c: 9)
	(up-set-offense-priority c: heavy-eagle-warrior c: 9)
    (up-set-offense-priority c: archer c: 10)
    (up-set-offense-priority c: crossbowman c: 10)
	(up-set-offense-priority c: skirmisher c: 5)
	(up-set-offense-priority c: elite-skirmisher c: 5)
	(up-set-offense-priority c: scout-cavalry c: 9)
	(up-set-offense-priority c: light-cavalry c: 9)
    (up-set-offense-priority c: knight c: 10)
	(up-set-offense-priority c: cavalier c: 10)
	(up-set-offense-priority c: camel c: 9)
	(up-set-offense-priority c: battle-elephant c: 2)
	(up-set-offense-priority c: cavalry-archer c: 9)
	(up-set-offense-priority c: monastery-class c: 11)
	(up-set-offense-priority c: monk-with-relic-class c: 11)
	(up-set-offense-priority c: feudal-battering-ram c: 10)
	(up-set-offense-priority c: battering-ram c: 10)
	(up-set-offense-priority c: capped-ram c: 10)
	(up-set-offense-priority c: armored-elephant c: 9)
	(up-set-offense-priority c: mangonel c: 9)
	(up-set-offense-priority c: scorpion c: 8)
	(up-set-offense-priority c: bombard-cannon c: 9)	
)

;stableunit

(defrule
	(goal gl-priority-goal 6)
=>
	(up-jump-rule 3)
)

(defrule
	(goal ca-strategy gl-castleage-stableunit)
	(current-age >= castle-age)
	(up-compare-goal gl-priority-goal != 6)
=>
	(set-goal gl-priority-goal 6)
)

(defrule
	(goal gl-priority-goal 6)
=>
	(up-set-offense-priority c: town-center c: 4)
	(up-set-offense-priority c: house c: 4)
	(up-set-offense-priority c: mill c: 6)
	(up-set-offense-priority c: lumber-camp c: 6)
	(up-set-offense-priority c: mining-camp c: 6)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 3)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: -1)
	(up-set-offense-priority c: krepost c: -1)
	(up-set-offense-priority c: watch-tower c: 4)
	(up-set-offense-priority c: donjon c: 4)
	(up-set-offense-priority c: bombard-tower c: -1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 3)
	(up-set-offense-priority c: dock c: 4)
	(up-set-offense-priority c: barracks c: 4)
	(up-set-offense-priority c: stable c: 4)
	(up-set-offense-priority c: archery-range c: 4)
	(up-set-offense-priority c: siege-workshop c: 4)
	(up-set-offense-priority c: monastery c: 4)
)

(defrule
	(goal gl-priority-goal 6)
=>
	(up-set-offense-priority c: villager c: 6)
	(up-set-offense-priority c: long-swordsman c: 7)
	(up-set-offense-priority c: spearman c: 8)
	(up-set-offense-priority c: pikeman c: 8)
	(up-set-offense-priority c: eagle-warrior c: 11)
	(up-set-offense-priority c: heavy-eagle-warrior c: 11)
    (up-set-offense-priority c: archer c: 10)
	(up-set-offense-priority c: crossbowman c: 10)
	(up-set-offense-priority c: skirmisher c: 7)
	(up-set-offense-priority c: elite-skirmisher c: 7)
	(up-set-offense-priority c: scout-cavalry c: 6)
	(up-set-offense-priority c: light-cavalry c: 6)
    (up-set-offense-priority c: knight c: 10)
	(up-set-offense-priority c: cavalier c: 10)
	(up-set-offense-priority c: camel c: 8)
	(up-set-offense-priority c: battle-elephant c: 4)
	(up-set-offense-priority c: cavalry-archer c: 5)
	(up-set-offense-priority c: monastery-class c: 11)
	(up-set-offense-priority c: monk-with-relic-class c: 11)
	(up-set-offense-priority c: feudal-battering-ram c: 10)
	(up-set-offense-priority c: battering-ram c: 10)
	(up-set-offense-priority c: capped-ram c: 10)
	(up-set-offense-priority c: armored-elephant c: 9)
	(up-set-offense-priority c: mangonel c: 10)
	(up-set-offense-priority c: scorpion c: 9)
	(up-set-offense-priority c: bombard-cannon c: 9)	
)

;rangeunit

(defrule
	(goal gl-priority-goal 7)
=>
	(up-jump-rule 3)
)

(defrule
	(goal ca-strategy gl-castleage-rangeunit)
	(current-age >= castle-age)
	(up-compare-goal gl-priority-goal != 7)
=>
	(set-goal gl-priority-goal 7)
)

(defrule
	(goal gl-priority-goal 7)
=>
	(up-set-offense-priority c: town-center c: 4)
	(up-set-offense-priority c: house c: 4)
	(up-set-offense-priority c: mill c: 4)
	(up-set-offense-priority c: lumber-camp c: 4)
	(up-set-offense-priority c: mining-camp c: 4)
	(up-set-offense-priority c: blacksmith c: 1)
	(up-set-offense-priority c: market c: 3)
	(up-set-offense-priority c: university c: 1)
	(up-set-offense-priority c: castle c: -1)
	(up-set-offense-priority c: krepost c: -1)
	(up-set-offense-priority c: watch-tower c: 4)
	(up-set-offense-priority c: donjon c: 4)
	(up-set-offense-priority c: bombard-tower c: -1)
	(up-set-offense-priority c: caravanserai c: 1)
	(up-set-offense-priority c: feitoria c: 3)
	(up-set-offense-priority c: dock c: 4)
	(up-set-offense-priority c: barracks c: 4)
	(up-set-offense-priority c: stable c: 4)
	(up-set-offense-priority c: archery-range c: 4)
	(up-set-offense-priority c: siege-workshop c: 4)
	(up-set-offense-priority c: monastery c: 4)
)

(defrule
	(goal gl-priority-goal 7)
=>
	(up-set-offense-priority c: villager c: 6)
	(up-set-offense-priority c: long-swordsman c: 11)
	(up-set-offense-priority c: spearman c: 6)
	(up-set-offense-priority c: pikeman c: 6)
	(up-set-offense-priority c: eagle-warrior c: 9)
	(up-set-offense-priority c: heavy-eagle-warrior c: 9)
    (up-set-offense-priority c: archer c: 8)
	(up-set-offense-priority c: crossbowman c: 8)
	(up-set-offense-priority c: skirmisher c: 7)
	(up-set-offense-priority c: elite-skirmisher c: 7)
	(up-set-offense-priority c: scout-cavalry c: 8)
	(up-set-offense-priority c: light-cavalry c: 8)
    (up-set-offense-priority c: knight c: 10)
	(up-set-offense-priority c: cavalier c: 10)
	(up-set-offense-priority c: camel c: 9)
	(up-set-offense-priority c: battle-elephant c: 3)
	(up-set-offense-priority c: cavalry-archer c: 8)
	(up-set-offense-priority c: monastery-class c: 11)
	(up-set-offense-priority c: monk-with-relic-class c: 11)
	(up-set-offense-priority c: feudal-battering-ram c: 1)
	(up-set-offense-priority c: battering-ram c: 1)
	(up-set-offense-priority c: capped-ram c: 1)
	(up-set-offense-priority c: armored-elephant c: 1)
	(up-set-offense-priority c: mangonel c: 9)
	(up-set-offense-priority c: scorpion c: 9)
	(up-set-offense-priority c: bombard-cannon c: 9)	
)



(defrule
	(true)
=>
	(up-set-defense-priority c: town-center c: 500)
	(up-set-defense-priority c: castle c: 500)
	(up-set-defense-priority c: watch-tower c: 500)
	(up-set-defense-priority c: house c: 5)
	(up-set-defense-priority c: bombard-tower c: 500)
	(up-set-defense-priority c: lumber-camp c: 10000)
	(up-set-defense-priority c: mining-camp c: 11000)
	(up-set-defense-priority c: barracks c: 7000)
	(up-set-defense-priority c: mill c: 500)
	(up-set-defense-priority c: stable c: 7000)
	(up-set-defense-priority c: archery-range c: 7000)
	(up-set-defense-priority c: monastery c: 7000)
	(up-set-defense-priority c: siege-workshop c: 7000)
	(disable-self)
)
;endregion

(defrule
    (game-time > 5)
	(not (goal strategy-goal sg-towerrush))
=>
    (set-strategic-number sn-food-dropsite-distance 16)
    (set-strategic-number sn-wood-dropsite-distance 9)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(disable-self)
)

(defrule
	(game-time > 5)
	(goal strategy-goal sg-towerrush)
=>
    (set-strategic-number sn-food-dropsite-distance 16)
    (set-strategic-number sn-wood-dropsite-distance 9)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(set-strategic-number sn-percent-building-cancellation -1)
	(disable-self)
)

(defrule
	(game-time > 5)
	(not (goal strategy-goal sg-towerrush))
	(up-compare-sn sn-percent-building-cancellation < 1)
=>
	(set-strategic-number sn-percent-building-cancellation 35)
)

(defrule
	(current-age >= castle-age)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-percent-building-cancellation 35)
	(up-assign-builders c: watch-tower c: 3)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance 15)
	(disable-self)
)

(defrule
	(players-building-count any-enemy < 1)
=>
	(set-strategic-number sn-placement-to-center 1)
)

(defrule
	(players-building-count any-enemy >= 1)
=>
	(set-strategic-number sn-placement-to-center 0)
)

(defrule
		(unit-type-count-total battering-ram-line < 1)
=>
		(set-strategic-number sn-disable-tower-priority 1)
)

(defrule
		(unit-type-count-total battering-ram-line >= 1)
=>
		(set-strategic-number sn-disable-tower-priority 0)
)

(defrule
		(unit-type-count-total armored-elephant-line < 1)
=>
		(set-strategic-number sn-disable-tower-priority 1)
)

(defrule
		(unit-type-count-total armored-elephant-line >= 1)
=>
		(set-strategic-number sn-disable-tower-priority 0)
)

(defrule
	(up-compare-goal gl-military-advantage <= -15)
=>
	(set-strategic-number sn-percent-building-cancellation 85)
)

(defrule
	(up-compare-goal gl-military-advantage > -10)
	(not (goal strategy-goal sg-towerrush))
	(up-compare-sn sn-percent-building-cancellation != 35)
=>
	(set-strategic-number sn-percent-building-cancellation 35)
)

(defrule
	(current-age == feudal-age)
	(up-compare-goal gl-military-advantage > -10)
	(goal strategy-goal sg-towerrush)
	(up-compare-sn sn-percent-building-cancellation != -1)
=>
	(set-strategic-number sn-percent-building-cancellation -1)
)

(defrule
    (not (civ-selected aztec))
    (not (civ-selected mayan))
    (not (civ-selected incan))
=>
	(set-goal meso-civ NO)
	(disable-self)
)

(defrule
    (or (civ-selected aztec)
    (or (civ-selected mayan)
    (civ-selected incan)))
=>    
	(set-goal meso-civ YES)
    (disable-self)
)

(defrule
	(current-age < castle-age)
=>
	(set-goal gl-garrison-count 10)
	(disable-self)
)

(defrule
	(not (civ-selected teutonic))
	(current-age >= castle-age)
=>
	(set-goal gl-garrison-count 15)
	(disable-self)
)

(defrule
	(civ-selected teutonic)
	(current-age >= castle-age)
=>
	(set-goal gl-garrison-count 25)
	(disable-self)
)

; (defrule
	; (game-time > 10)
; =>
	; (chat-to-allies "255")
; )

; (defrule
	; (taunt-detected any-ally 255)
; =>
	; (fe-break-point 1 == 1 -1)
	; (acknowledge-taunt any-computer 255)
; )

(defrule
	(true)
=>
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(set-goal gl-house 0)
	(set-goal boar-hunting 0)
	(set-goal g-boar-status 0)
	(set-goal gl-garrison-tc-two 0)
	(set-goal drush-goal 0)
	(set-goal vil-loom-hp 40)
	(set-goal gl-loop-counter 0)
	(enable-timer t-3-sec 3)
	(enable-timer tc-boar-shooting-timer 1)
	(set-goal temp-goal-one 0)
	(set-goal gl-wall-counter 0)
	(set-goal temp-counter-goal 0)
	(set-goal gl-wall-tower 0)
	(set-goal gl-trush-init 0)
	(set-goal gl-scout-map NO)
	(disable-self)
)

(defrule
	(true)
=>
	(set-goal gl-distance-temp 999)
	(set-goal gl-distance-temp-one 999)
	(set-goal gl-distance-temp-two 999)
	(set-goal gl-distance-temp-three 999)
	(set-goal gl-self-loop-counter 0)
	(set-goal gl-tc-loop-counter 0)
	(set-goal gl-tower-loop-counter 0)
	(set-goal gl-castle-loop-counter 0)
	(set-goal gl-scout-index 0)
	(set-goal attack-now-goal 1)
	(set-goal retreat-now-goal 0)
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-target-player-number 1)
	(disable-self)
)

#load-if-not-defined UP-NOMAD-STYLE
(defrule
		(unit-type-count livestock-class > 0)
=>
		(set-strategic-number sn-percent-civilian-explorers 0)
		(set-strategic-number sn-cap-civilian-explorers 0)
		(set-strategic-number sn-number-explore-groups 1)
		(set-strategic-number sn-total-number-explorers 1)
		;(chat-to-player my-player-number "Found livestock: stop exploring with villagers")
		(disable-self)
)
#end-if

(defrule
		(current-age == dark-age)
		(town-under-attack)
		(up-enemy-units-in-town > 0)
		(up-compare-sn sn-number-explore-groups != 0)
=>
		(set-strategic-number sn-number-explore-groups 0)
		(set-strategic-number sn-total-number-explorers 0)
		(disable-self)
)

(defrule
		(current-age == dark-age)
		(not (town-under-attack))
		(up-enemy-units-in-town < 1)
		(up-compare-sn sn-number-explore-groups != 1)
=>
		(set-strategic-number sn-number-explore-groups 1)
		(set-strategic-number sn-total-number-explorers 1)
		(disable-self)
)

;endregion 

;region Chats at match-start =============================
#load-if-defined UP-2-PLAYER-GAME

(defrule
	(game-time > 10)
=>
	(chat-to-all "ZebbaAI Version: 1.0.0")
	(disable-self)
)

; (defrule
	; (game-time > 10)
; =>
	; (chat-to-all "Hey there, looking forward to challenge you!")
	; (disable-self)
; )

; (defrule
	; (game-time > 15)
; =>
	; (chat-to-all "Get ready for an epic battle!")
	; (disable-self)
; )

#end-if
;endregion

;region Map-Size definer ===========================================
            #load-if-defined TINY-MAP
            (defconst HALF-MAP-SIZE 60)
            (defconst FULL-MAP-SIZE 120)
            #end-if
            #load-if-defined SMALL-MAP
            (defconst HALF-MAP-SIZE 72)
            (defconst FULL-MAP-SIZE 144)
            #end-if
            #load-if-defined MEDIUM-MAP
            (defconst HALF-MAP-SIZE 84)
            (defconst FULL-MAP-SIZE 168)
            #end-if
            #load-if-defined NORMAL-MAP
            (defconst HALF-MAP-SIZE 100)
            (defconst FULL-MAP-SIZE 200)
            #end-if
            #load-if-defined LARGE-MAP
            (defconst HALF-MAP-SIZE 110)
            (defconst FULL-MAP-SIZE 220)
            #end-if
            #load-if-defined GIANT-MAP
            (defconst HALF-MAP-SIZE 120)
            (defconst FULL-MAP-SIZE 240)
            #end-if
			#load-if-defined UP-SCENARIO-GAME
			(defconst HALF-MAP-SIZE 128)
            (defconst FULL-MAP-SIZE 256)
			#end-if
;endregion

;region Select scout type ==========================================
#load-if-defined AZTEC-CIV
    (defconst scout-type eagle-warrior-line)                  ;Eagle warrior line
#else
    #load-if-defined INCAN-CIV
        (defconst scout-type eagle-warrior-line)
    #else
        #load-if-defined MAYAN-CIV
            (defconst scout-type eagle-warrior-line)
        #else
			#load-if-defined GURJARAS-CIV
				(defconst scout-type camel-scout)
			#else
        		(defconst scout-type -286)          ;Scout cavalry line
			#end-if
        #end-if
    #end-if
#end-if
;endregion

;region Select tower type ==========================================
#load-if-defined SICILIANS-CIV
    (defconst tower-type 1665) ;donjon
#else
    (defconst tower-type 79) ;watch-tower
#end-if
;endregion

;region Check the opponent's player number & name ==================

(defrule
	(true)
=>
	(up-modify-sn sn-target-player-number c: 0)
	(up-modify-sn sn-focus-player-number c: 0)
	(disable-self)
)

(defrule
	(or (players-building-count any-enemy > 0)
	(players-unit-count any-enemy > 0))
=>
	(up-find-player enemy find-closest temporary-goal)
	(up-modify-sn sn-target-player-number g:= temporary-goal)
)

(defrule
	(players-building-count any-enemy > 0)
=>
	(chat-to-player this-any-enemy "21")
	(disable-self)
)

(defrule
	(or	(up-compare-goal preferred-target-player <= 0)
		(up-compare-goal preferred-target-player >= 9)
	)
=>
	(up-jump-rule 3)
)
	
(defrule
	(true)
=>
	(up-modify-goal temporary-goal s:= sn-target-player-number)
	(up-modify-sn sn-target-player-number g:= preferred-target-player)
)

(defrule
	(or (players-building-count any-enemy > 0)
	(players-unit-count any-enemy > 0))
	(player-in-game target-player)
	(not	(stance-toward target-player ally))
=>
	(up-jump-rule 1)
)

(defrule
	(true)
=>
	(up-modify-sn sn-target-player-number g:= temporary-goal)
)

(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
)

(defrule
	(true)
=>
	(up-store-player-name focus-player)
)

; (defrule
	; (current-age == dark-age)
; =>
	; (up-chat-data-to-all "Mein Gegner ist Spieler %d" s: sn-target-player-number)
	; (disable-self)
; )

; (defrule
	; (current-age == dark-age)
; =>
	; (up-chat-data-to-all "Mein Gegner ist %s" c: 7031232)
	; (disable-self)
; )

(defrule
	(current-age == feudal-age)
=>
	(up-chat-data-to-self "Mein Gegner ist Spieler %d" s: sn-target-player-number)
	(disable-self)
)

(defrule
	(current-age == feudal-age)
=>
	(up-chat-data-to-self "Mein Gegner ist %s" c: 7031232)
	(disable-self)
)

(defrule
	(current-age == castle-age)
=>
	(up-chat-data-to-self "Mein Gegner ist Spieler %d" s: sn-target-player-number)
	(disable-self)
)

(defrule
	(current-age == castle-age)
=>
	(up-chat-data-to-self "Mein Gegner ist %s" c: 7031232)
	(disable-self)
)

;endregion

;region Check enemy's military population ==========================

(defrule
	(true)
=>
	(set-goal enemy-military-pop 0)
	(set-goal our-military-pop 0)
	;(set-goal enemy-warship-pop 0)
	(disable-self)
)	

; (defrule ;does not work
	; (players-military-population any-enemy >= 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: warship-class c: 200)
	; (up-get-search-state gl-local-total)
	; (up-modify-goal enemy-warship-pop g:= gl-remote-total)
; )

(defrule
	(players-military-population any-enemy >= 0)
=>
	(up-get-player-fact this-any-enemy military-population 0 enemy-military-pop)
)	

(defrule
	(military-population >= 0)
=>
	(up-get-fact military-population 0 our-military-pop)
)

(defrule
	(civilian-population > 0)
=>
	(up-get-fact civilian-population 0 civilian-pop) 
)	



; (defrule
	; (unit-type-count villager > 0)
; =>
	; (up-get-fact population 0 villager-pop) 
; )

; (defrule
	; (true)
; =>
	; (up-get-fact civilization 0 my-civ) 
	; (up-chat-data-to-player my-player-number "My civ is %d" g: my-civ)
	; (disable-self)
; )

(defrule
	(timer-triggered t-3-sec)
=>
	;(up-chat-data-to-self "Our Military: %d" g: our-military-pop)
	;(up-chat-data-to-self "Enemy Military: %d" g: enemy-military-pop)
	(up-modify-goal gl-military-advantage g:= our-military-pop)
	(up-modify-goal gl-military-advantage g:- enemy-military-pop)
	;(up-chat-data-to-self "advantage: %d" g: gl-military-advantage)
)

(defrule
	(up-compare-goal gl-strategic-position != 0)
=>
	(set-goal gl-strategic-position 0)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(up-compare-goal gl-strategic-position != -1)
	(up-compare-goal gl-military-advantage <= -15)
	(military-population <= 15)
=>
	(set-goal gl-strategic-position -1)
	(chat-local-to-self "Switching to defensive behaviour")
	(chat-to-allies "I will stay more defensive now.")
	(up-modify-sn sn-camp-max-distance c:%* 88)
	(up-modify-sn sn-maximum-town-size c:%* 90)
	(up-chat-data-to-self "Town-Size: %d " s: sn-maximum-town-size)
)

(defrule
	(current-age >= castle-age)
	(up-compare-goal gl-strategic-position != 0)
	(up-compare-goal gl-military-advantage >= -5)
	(up-compare-goal gl-military-advantage <= 5)
	(military-population <= 15)
=>
	(set-goal gl-strategic-position 0)
	(chat-local-to-self "Switching to standard behaviour")
	(up-modify-sn sn-camp-max-distance c:%/ 88)
	(up-modify-sn sn-maximum-town-size c:%/ 90)
	(up-chat-data-to-self "Town-Size: %d " s: sn-maximum-town-size)
)

(defrule
	(current-age >= castle-age)
	(up-compare-goal gl-strategic-position != 1)
	(up-compare-goal gl-military-advantage >= 15)
	(military-population >= 15)
=>
	(set-goal gl-strategic-position 1)
	(chat-local-to-self "Switching to offensive behaviour")
	(chat-to-allies "I will try to play more aggressive now.")
)


;endregion

;region Check if map is a water-map ================================

; (defrule
	; (game-time > 20)
	; (cc-players-unit-type-count 0 deep-fish > 10)
; =>
	; (set-goal gl-water-on-map 1)
	; (chat-to-player my-player-number "Playing on a water-map")
	; (disable-self)
; )

(defrule
	(game-time > 20)
	(current-age < castle-age)
	(up-gaia-type-count c: ocean-fish-class > 0)
	(up-gaia-type-count c: shore-fish-class > 3)
=>
	(set-goal gl-water-on-map 1)
	(chat-to-player my-player-number "Playing on a water-map")
	(disable-self)
)

;endregion

;region Scouting the Map in 1v1 ====================================

#load-if-defined UP-2-PLAYER-GAME
#load-if-not-defined ARENA-MAP
#load-if-not-defined BLACK-FOREST

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(goal gl-scout-map YES)
=>
	(set-goal gl-scout-map NO)
)

(defrule
	(current-age >= feudal-age)
	(players-building-count focus-player > 0)
	(goal gl-scout-map YES)
=>
	(set-goal gl-scout-map NO)
)

; (defrule
	; (goal gl-scout-map YES)
	; (unit-type-count scout-type > 0)
; =>
	; (up-full-reset-search)
	; (up-find-local c: scout-type c: 1)
	; (up-set-target-object search-local c: 0)
	; (up-get-point position-object gl-scout-x)
; )

; ; (defrule
	; ; (goal gl-scout-map YES)
	; ; (unit-type-count scout-type > 0)
	; ; (up-point-distance gl-scout-x gl-center-x < 20)
; ; =>	
	; ; (up-lerp-tiles gl-scout-x gl-center-x c: -30)
	; ; (up-bound-point gl-scout-x gl-scout-x)
	; ; (up-full-reset-search)
	; ; (up-find-local c: scout-type c: 1)
	; ; (up-target-point gl-scout-x action-move -1 -1)
	; ; (chat-to-player my-player-number "Too close to center")
; ; )

; (defrule
	; (goal gl-scout-map YES)
	; (unit-type-count scout-type > 0)
; =>
	; (up-modify-goal gl-temp1 c:= FULL-MAP-SIZE)
	; (up-modify-goal gl-temp1 c:- 6)
	; ;(up-chat-data-to-self "gl-temp1: %d" g: gl-temp1)
	; (disable-self)
; )
	
; (defrule
	; (goal gl-scout-map YES)
	; (unit-type-count scout-type > 0)
	; (or	(up-compare-goal gl-scout-x c:< 6)
	; (or	(up-compare-goal gl-scout-y c:< 6)
	; (or	(up-compare-goal gl-scout-x g:> gl-temp1)
		; (up-compare-goal gl-scout-y g:> gl-temp1))))
; =>	
	; (up-lerp-tiles gl-scout-x gl-center-x c: 20)
	; (up-bound-point gl-scout-x gl-scout-x)
	; (up-full-reset-search)
	; (up-find-local c: scout-type c: 1)
	; (up-target-point gl-scout-x action-move -1 -1)
	; (chat-to-player my-player-number "Too close to edge of the map")
; )

#end-if
#end-if
#end-if

;endregion

;region Garrison sheep in mill as Gurjaras =========================

(defrule
	(not (civ-selected gurjaras))
=>
	(up-jump-rule 2)
)

(defrule
	(current-age == dark-age)
	(building-type-count mill > 0)
	(unit-type-count villager < 27)
=>
	(up-full-reset-search)
	(up-find-local c: livestock-class c: 8)
	(set-strategic-number sn-focus-player-number my-player-number)
	(up-find-remote c: mill c: 1)
)

(defrule
	(current-age == dark-age)
	(building-type-count mill > 0)
	(unit-type-count villager < 27)
	(up-set-target-object search-remote c: 0)
	(up-object-data object-data-garrison-count < 10)
=>
	(up-gather-inside c: mill c: 1)
	(up-target-objects 0 action-garrison -1 -1)
	;(chat-to-player my-player-number "Garrison sheeps in mill")
)
	

;endregion

;region Forager DUC ================================================

;if mill is placed on berries, task villagers to take from them

(defrule
	(current-age == dark-age)
	(or 
		(and (unit-type-count villager == 13)
		(unit-type-count villager-forager < 1))
	(or
		(and (unit-type-count villager == 14)
		(unit-type-count villager-forager < 2))
	(or 
		(and (unit-type-count villager == 15)
		(unit-type-count villager-forager < 3))
		(and (unit-type-count villager >= 16)
		(unit-type-count villager-forager < 4)))))	
	(building-type-count mill > 0)
	(up-gaia-type-count c: forage-class > 0)
=>
	(up-full-reset-search)
	(up-find-local c: 590 c: 240) ;female shepherd
	(up-find-local c: 240 c: 240) ;male shepherd
	;(up-remove-objects search-local object-data-class != villager-shepherd)
	(up-remove-objects search-local -1 > 0) ;find one shepherd
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Amount of shepherds: %d" g: gl-local-total)
)

(defrule
	(up-compare-goal gl-local-total == 1)
	(current-age == dark-age)
	(or 
		(and (unit-type-count villager == 13)
		(unit-type-count villager-forager < 1))
	(or
		(and (unit-type-count villager == 14)
		(unit-type-count villager-forager < 2))
	(or 
		(and (unit-type-count villager == 15)
		(unit-type-count villager-forager < 3))
		(and (unit-type-count villager >= 16)
		(unit-type-count villager-forager < 4)))))	
	(building-type-count mill > 0)
	(up-gaia-type-count c: forage-class > 0)
=>
	(up-filter-distance c: -1 c: 20)
	(up-find-remote c: forage-class c: 1) ;find a nearby berry bush
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Amount of berry-bushes: %d" g: gl-remote-total)
)

(defrule
	(up-compare-goal gl-remote-total == 1)
	(current-age == dark-age)
	(or 
		(and (unit-type-count villager == 13)
		(unit-type-count villager-forager < 1))
	(or
		(and (unit-type-count villager == 14)
		(unit-type-count villager-forager < 2))
	(or 
		(and (unit-type-count villager == 15)
		(unit-type-count villager-forager < 3))
		(and (unit-type-count villager >= 16)
		(unit-type-count villager-forager < 4)))))	
	(building-type-count mill > 0)
	(up-gaia-type-count c: forage-class > 0)
=>
	(up-filter-distance c: -1 c: 20)
	(up-find-remote c: forage-class c: 1)
	(up-get-search-state gl-local-total)
	(up-target-objects 0 action-default -1 -1)
	(chat-local-to-self "Microing villager to berries")
)

;prevent overgathering of berries if farms are available

;task foragers to farms

(defrule ;find foragers
	(idle-farm-count > 0)
	(unit-type-count villager-forager > 4)
=>
	(up-full-reset-search)
	; (up-get-point position-self gl-self-x) ; finds home TC
	; (up-set-target-point gl-self-x)
	(up-find-local c: 354 c: 240) ;female forager
	(up-find-local c: 120 c: 240) ;male forager
	(up-remove-objects search-local object-data-index > 3)
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Amount of foragers: %d" g: gl-local-total)
)

(defrule; find idle farms
	(up-compare-goal gl-local-total <= 4)
	(up-compare-goal gl-local-total > 0)
	(idle-farm-count > 0)
	(unit-type-count villager-forager > 4)
=>
	(up-modify-sn sn-focus-player-number c:= my-player-number)
	;(up-filter-distance c: -1 c: 40) ; only finds farms within 40 tiles of home TC, you may want to remove this
	(up-find-remote c: farm c: 40)
	(up-remove-objects search-remote 32 > 0) ;remove all farms with someone assigned to them
	(up-clean-search search-remote 44 1) ; sort free farms closest to home TC
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Amount of idle farms: %d" g: gl-remote-total)
)

(defrule
	(up-compare-goal gl-local-total <= 4)
	(up-compare-goal gl-local-total > 0)
	(up-compare-goal gl-remote-total > 0); is there a free farm?
	;(up-compare-goal gl-remote-total g:>= gl-local-total) ;are there more or equal free farms than foragers?
	(idle-farm-count > 0)
	(unit-type-count villager-forager > 4)
=>
	(up-remove-objects search-remote -1 g:>= gl-local-total) ; removes any excess idle farms
	(up-remove-objects search-local -1 g:>= gl-remote-total) ; removes any excess foragers
	(up-target-objects 0 action-default -1 -1) ; send idle villagers to idle farms
	(chat-local-to-self "Microing foragers to farms")
)

; ;task foragers to boar (not safe, needs better conditions)

; (defrule ;find foragers
	; (unit-type-count villager-forager > 4)
; =>
	; (up-full-reset-search)
	; ; (up-get-point position-self gl-self-x) ; finds home TC
	; ; (up-set-target-point gl-self-x)
	; (up-find-local c: 354 c: 240) ;female forager
	; (up-find-local c: 120 c: 240) ;male forager
	; (up-remove-objects search-local object-data-index > 3)
	; (up-get-search-state gl-local-total)
	; ;(up-chat-data-to-player my-player-number "Amount of foragers: %d" g: gl-local-total)
; )

; (defrule; find idle farms
	; (up-compare-goal gl-local-total <= 4)
	; (up-compare-goal gl-local-total > 0)
	; (unit-type-count villager-forager > 4)
; =>
	; (up-modify-sn sn-focus-player-number c: 0)
	; (up-filter-distance c: -1 c: 10) ; only finds dead boars within 10 tiles of home TC
	; (up-filter-status c: status-gather c: list-inactive)
	; (up-find-status-remote c: boar-class c: 1)
	; (up-find-status-remote c: livestock-class c: 1)
	; ;(up-remove-objects search-remote 32 > 6)
	; (up-remove-objects search-remote 16 < 80) ;remove boars with less than 80 food on them
	; (up-remove-objects search-remote -1 > 0) ;select only one object
	; (up-clean-search search-remote 44 1) ; sort free farms closest to home TC
	; (up-get-search-state gl-local-total)
	; ;(up-chat-data-to-player my-player-number "Amount of dead boars: %d" g: gl-remote-total)
; )

; (defrule
	; (up-compare-goal gl-local-total <= 4)
	; (up-compare-goal gl-local-total > 0)
	; (up-compare-goal gl-remote-total > 0); is there a free farm?
	; ;(up-compare-goal gl-remote-total g:>= gl-local-total) ;are there more or equal free farms than foragers?
	; (unit-type-count villager-forager > 4)
; =>
	; (up-remove-objects search-remote -1 g:>= gl-local-total) ; removes any excess idle farms
	; (up-remove-objects search-local -1 g:>= gl-remote-total) ; removes any excess foragers
	; (up-target-objects 0 action-default -1 -1) ; send idle villagers to idle farms
	; (chat-local-to-self "Microing foragers to boar")
; )

;endregion

;region Rate Civ-Strengths (To-Do) =================================

; (defrule
	; (true)
; =>
	; (up-cc-send-cheat "aegis")
	; (disable-self)
; )



(defrule
	(true)
=>
	(set-goal amnt-archers 0)
	(set-goal amnt-skirmishers 0)
	(set-goal amnt-longbows 0)
	(set-goal amnt-chu-ko-nu 0)
	(set-goal amnt-plumes 0)
	(set-goal amnt-genoese-crossbowmen 0)
	(set-goal amnt-rattans 0)
	(set-goal amnt-cavarcher 0)
	(set-goal amnt-mangudai 0)
	(set-goal amnt-war-wagons 0)
	(set-goal amnt-camel-archers 0)
	(set-goal amnt-genitour 0)
	(set-goal amnt-kipchak 0)
	(set-goal amnt-elearcher 0)
	(set-goal amnt-ratha 0)
	(disable-self)
)


(defrule
	(true)
=>
	(up-get-fact unit-type-count-total archer-line amnt-archers)
	(up-get-fact unit-type-count-total skirmisher-line amnt-skirmishers)
	(up-get-fact unit-type-count-total genoese-crossbowman-line amnt-genoese-crossbowmen)
	(up-get-fact unit-type-count-total longbowman-line amnt-longbows)
	(up-get-fact unit-type-count-total chu-ko-nu-line amnt-chu-ko-nu)
	(up-get-fact unit-type-count-total plumed-archer-line amnt-plumes)
	(up-get-fact unit-type-count-total rattan-archer-line amnt-rattans)
)

(defrule
	(true)
=>
	(up-get-fact unit-type-count-total cavalry-archer-line amnt-cavarcher)
	(up-get-fact unit-type-count-total mangudai-line amnt-mangudai)
	(up-get-fact unit-type-count-total war-wagon-line amnt-war-wagons)
	(up-get-fact unit-type-count-total camel-archer-line amnt-camel-archers)
	(up-get-fact unit-type-count-total genitour-line amnt-genitour)
	(up-get-fact unit-type-count-total kipchak-set amnt-kipchak)
	(up-get-fact unit-type-count-total elephant-archer-line amnt-elearcher)
	(up-get-fact unit-type-count-total ratha-set amnt-ratha)
)

(defrule
	(true)
=>
	(set-goal gl-civ-uu-cost 0)
	(enable-timer 13 1)
	(enable-timer 14 1)
	(disable-self)
)

(defrule
	(timer-triggered 13)
=>
	(disable-timer 13)
	(set-goal gl-archery-class-units 0)
	(up-modify-goal gl-archery-class-units g:+ amnt-archers)
	(up-modify-goal gl-archery-class-units g:+ amnt-skirmishers)
	(up-modify-goal gl-archery-class-units g:+ amnt-longbows)
	(up-modify-goal gl-archery-class-units g:+ amnt-chu-ko-nu)
	(up-modify-goal gl-archery-class-units g:+ amnt-plumes)
	(up-modify-goal gl-archery-class-units g:+ amnt-genoese-crossbowmen)
	(up-modify-goal gl-archery-class-units g:+ amnt-rattans)
	;(up-chat-data-to-all "archery-class %d" g: gl-archery-class-units)
	(enable-timer 13 5)
)

(defrule
	(timer-triggered 14)
=>
	(disable-timer 14)
	(set-goal gl-cavalry-archer-units 0)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-cavarcher)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-mangudai)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-war-wagons)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-camel-archers)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-genitour)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-kipchak)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-elearcher)
	(up-modify-goal gl-cavalry-archer-units g:+ amnt-ratha)
	;(up-chat-data-to-all "cavarcher-class %d" g: gl-cavalry-archer-units)
	(enable-timer 14 5)
)
	

; (defrule
	; (timer-triggered 13)
; =>
	; (disable-timer 13)
	; (up-get-fact unit-type-count archery-class gl-archery-class-units)
	; ;(up-chat-data-to-all "archery-class %d" g: gl-archery-class-units)
	; (up-get-fact unit-type-count cavalry-archer-class gl-cavalry-archer-units)
	; ;(up-chat-data-to-all "cavarcher-class %d" g: gl-cavalry-archer-units)
	; (enable-timer 13 60)
; )

#load-if-defined AZTEC-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-eagles)	
	(disable-self)
)

#end-if

#load-if-defined BENGALIS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 1)
	(up-modify-goal civ-eco-s c: 7)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 7)
	(up-modify-goal civ-cavalry-s c: 6)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 9)
	(set-goal ca-strategy gl-castleage-stableunit)	
	(disable-self)
)

#end-if

#load-if-defined BERBERS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 2)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 5)
	(up-modify-goal civ-infantry-s c: 6)
	(up-modify-goal civ-cavalry-s c: 10)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 10)
	(set-goal ca-strategy gl-castleage-stableunit)	
	(disable-self)
)

#end-if

#load-if-defined BOHEMIANS-CIV


(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 2)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 9)
	(up-modify-goal civ-infantry-s c: 8)
	(up-modify-goal civ-cavalry-s c: 4)
	(up-modify-goal civ-siege-s c: 10)
	(up-modify-goal civ-uu-s c: 7)
	(set-goal ca-strategy gl-castleage-rangeunit)	
	(disable-self)
)


#end-if

#load-if-defined BRITON-CIV


(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 9)
	(up-modify-goal civ-archery-s c: 10)
	(up-modify-goal civ-infantry-s c: 8)
	(up-modify-goal civ-cavalry-s c: 6)
	(up-modify-goal civ-siege-s c: 6)
	(up-modify-goal civ-uu-s c: 8)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)


#end-if

#load-if-defined BULGARIANS-CIV


(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 7)
	(up-modify-goal civ-archery-s c: 4)
	(up-modify-goal civ-infantry-s c: 9)
	(up-modify-goal civ-cavalry-s c: 9)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 8)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)


#end-if

#load-if-defined BURGUNDIANS-CIV


(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 10)
	(up-modify-goal civ-archery-s c: 4)
	(up-modify-goal civ-infantry-s c: 7)
	(up-modify-goal civ-cavalry-s c: 9)
	(up-modify-goal civ-siege-s c: 8)
	(up-modify-goal civ-uu-s c: 9)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)


#end-if

#load-if-defined BURMESE-CIV


(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 3)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 8)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 8)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)


#end-if

#load-if-defined BYZANTINE-CIV


(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 5)
	(up-modify-goal civ-archery-s c: 9)
	(up-modify-goal civ-infantry-s c: 8)
	(up-modify-goal civ-cavalry-s c: 7)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 8)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)


#end-if

#load-if-defined CELTIC-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 5)
	(up-modify-goal civ-siege-s c: 10)
	(up-modify-goal civ-uu-s c: 7)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined CHINESE-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 9)
	(up-modify-goal civ-archery-s c: 9)
	(up-modify-goal civ-infantry-s c: 7)
	(up-modify-goal civ-cavalry-s c: 8)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 7)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined CUMANS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 1)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 8)
	(up-modify-goal civ-infantry-s c: 7)
	(up-modify-goal civ-cavalry-s c: 10)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 9)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined DRAVIDIANS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 9)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 2)
	(up-modify-goal civ-siege-s c: 8)
	(up-modify-goal civ-uu-s c: 7)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined ETHIOPIAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 10)
	(up-modify-goal civ-infantry-s c: 8)
	(up-modify-goal civ-cavalry-s c: 6)
	(up-modify-goal civ-siege-s c: 10)
	(up-modify-goal civ-uu-s c: 7)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if 

#load-if-defined FRANKISH-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 8)
	(up-modify-goal civ-archery-s c: 6)
	(up-modify-goal civ-infantry-s c: 8)
	(up-modify-goal civ-cavalry-s c: 10)
	(up-modify-goal civ-siege-s c: 8)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if ;updated until here

#load-if-defined GOTHIC-CIV

(defrule
	(true)
=>	
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined GURJARAS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 9)
	(up-modify-goal civ-archery-s c: 5)
	(up-modify-goal civ-infantry-s c: 3)
	(up-modify-goal civ-cavalry-s c: 10)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 10)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined HUN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined INCAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-eagles)	
	(disable-self)
)

#end-if

#load-if-defined INDIAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined ITALIAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined JAPANESE-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined KHMER-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined KOREAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 2)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined LITHUANIANS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined MAGYAR-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined MALAY-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined MALIAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 5)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 9)
	(up-modify-goal civ-cavalry-s c: 8)
	(up-modify-goal civ-siege-s c: 7)
	(up-modify-goal civ-uu-s c: 5)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined MAYAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 1)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined MONGOL-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined PERSIAN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined POLES-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined PORTUGUESE-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined SARACEN-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined SICILIANS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined SLAVIC-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined SPANISH-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined TATARS-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined TEUTONIC-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined TURKISH-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-stableunit)
	(disable-self)
)

#end-if

#load-if-defined VIETNAMESE-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 3)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

#load-if-defined VIKING-CIV

(defrule
	(true)
=>
	(set-goal gl-drush-militia-count 4)
	(set-goal gl-civ-uu-cost 3)
	(up-modify-goal civ-eco-s c: 6)
	(up-modify-goal civ-archery-s c: 7)
	(up-modify-goal civ-infantry-s c: 10)
	(up-modify-goal civ-cavalry-s c: 0)
	(up-modify-goal civ-siege-s c: 9)
	(up-modify-goal civ-uu-s c: 6)
	(set-goal ca-strategy gl-castleage-rangeunit)
	(disable-self)
)

#end-if

;endregion

;region Select Random Strategy (!) =================================

(defrule
	(true)
=>
	(generate-random-number 100)
	(disable-self)
)

(defrule
	(game-time > 5)
=>
	(up-jump-rule 25) ;20
)

#load-if-defined UP-2-PLAYER-GAME

(defrule
	(random-number > 0)
	(random-number <= 100)
=>
	(set-goal strategy-goal sg-drush)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(set-goal drush-goal 1)
	(chat-to-player my-player-number "Going for a Drush")
	;(chat-to-all "Going for a Drush")
	(disable-self)
)

(defrule
	(random-number > 100)
	(random-number <= 100)
=>
	(set-goal strategy-goal sg-archerrush)	
	(set-goal d-villager-goal 21)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(chat-to-player my-player-number "Going for Archer-Rush")
	;(chat-to-all "Going for Archer-Rush")
	(disable-self)
)

(defrule
	(random-number > 100)
	(random-number <= 100)
=>
	(set-goal strategy-goal sg-scoutrush)	
	(set-goal d-villager-goal 20)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-player my-player-number "Going for a Scoutrush")
	;(chat-to-all "Going for a Scoutrush")
	(disable-self)
)

(defrule
	(random-number > 100)
	(random-number <= 94)
=>
	(set-goal strategy-goal sg-towerrush)	
	(set-goal d-villager-goal 18)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-player my-player-number "Going for a Towerrush")
	;(chat-to-all "Going for a Towerrush")
	(disable-self)
)

(defrule
	(random-number > 100)
	(random-number <= 97)
=>
	(set-goal strategy-goal sg-fastcastle-gu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-player my-player-number "Going for a Fast-Castle")
	;(chat-to-all "Going for a Fast-Castle")
	(disable-self)
)

(defrule
	(random-number > 100)
=>
	(set-goal strategy-goal sg-fastcastle-uu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-player my-player-number "Going for a Fast-Castle UU")
	;(chat-to-all "Going for a Fast-Castle UU")
	(disable-self)
)

#end-if

#load-if-not-defined UP-2-PLAYER-GAME
#load-if-not-defined UP-SCENARIO-GAME
#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-POCKET-POSITION

(defrule
	(random-number < 30)
=>
	(set-goal strategy-goal sg-archerrush)	
	(set-goal d-villager-goal 21)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Going for an Archerrush")
	(chat-to-player my-player-number "Going for an Archerrush")
	(disable-self)
)

(defrule
	(random-number >= 30)
	(random-number < 50)
=>
	(set-goal strategy-goal sg-drush)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(set-goal drush-goal 1)
	(chat-to-allies "Going for a Drush")
	(chat-to-player my-player-number "Going for a Drush")
	(disable-self)
)

(defrule
	(random-number >= 50)
	(random-number < 65)
=>
	(set-goal strategy-goal sg-towerrush)	
	(set-goal d-villager-goal 18)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Going for a Towerrush")
	(chat-to-player my-player-number "Gehe auf Towerrush")
	(disable-self)
)

(defrule
	(random-number >= 65)
	(random-number < 80)
=>
	(set-goal strategy-goal sg-scoutrush)	
	(set-goal d-villager-goal 20)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Going for a Scoutrush")
	(chat-to-player my-player-number "Going for a Scoutrush")
	(disable-self)
)

(defrule
	(random-number >= 80)
	(random-number < 90)
=>
	(set-goal strategy-goal sg-fastcastle-uu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "I'll go Fastcastle UU")
	(chat-to-player my-player-number "I'll go Fastcastle UU")
	(disable-self)
)

(defrule
	(random-number >= 90)
=>
	(set-goal strategy-goal sg-fastcastle-gu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "I'll go Fastcastle")
	(chat-to-player my-player-number "I'll go Fastcastle")
	(disable-self)
)


#end-if
#load-if-defined UP-POCKET-POSITION

(defrule
	(random-number < 20)
=>
	(set-goal strategy-goal sg-fastcastle-uu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "I'll go Fastcastle UU")
	(chat-to-player my-player-number "I'll go Fastcastle UU")
	(disable-self)
)

(defrule
	(random-number >= 20)
	(random-number < 40)
=>
	(set-goal strategy-goal sg-fastcastle-gu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "I'll go Fastcastle")
	(chat-to-player my-player-number "I'll go Fastcastle")
	(disable-self)
)

(defrule
	(random-number >= 40)
	(random-number < 80)
=>
	(set-goal strategy-goal sg-scoutrush)	
	(set-goal d-villager-goal 20)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Going for a Scoutrush")
	(chat-to-player my-player-number "Going for a Scoutrush")
	(disable-self)
)

(defrule
	(random-number >= 80)
=>
	(set-goal strategy-goal sg-boom-imp)	
	(set-goal d-villager-goal 30)
	(set-goal f-villager-goal 32)
	(set-goal c-villager-goal 34)
	(chat-to-allies "I'll go fast Imp")
	(chat-to-player my-player-number "I'll go fast Imp")
	(disable-self)
)


#end-if
#end-if

#load-if-defined UP-NOMAD-STYLE

(defrule
	(random-number < 15)
=>
	(set-goal strategy-goal sg-archerrush)	
	(set-goal d-villager-goal 21)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Archer-Rush")
	(disable-self)
)

(defrule
	(random-number >= 15)
	(random-number < 40)
=>
	(set-goal strategy-goal sg-towerrush)	
	(set-goal d-villager-goal 18)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	;(chat-to-player my-player-number "Gehe auf Towerrush")
	(chat-to-allies "Gehe auf Towerrush")
	(disable-self)
)

(defrule
	(random-number >= 40)
	(random-number < 65)
=>
	(set-goal strategy-goal sg-fastcastle-uu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Fast-Castle UU")
	(disable-self)
)

(defrule
	(random-number >= 65)
	(random-number < 90)
=>
	(set-goal strategy-goal sg-fastcastle-gu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Fast-Castle")
	(disable-self)
)

(defrule
	(random-number >= 90)
=>
	(set-goal strategy-goal sg-scoutrush)	
	(set-goal d-villager-goal 20)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Scoutrush")
	(disable-self)
)

#end-if
#end-if

#load-if-defined UP-SCENARIO-GAME

(defrule
	(random-number < 17)
=>
	(set-goal strategy-goal sg-archerrush)	
	(set-goal d-villager-goal 21)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Archer-Rush")
	(disable-self)
)

(defrule
	(random-number >= 17)
	(random-number < 47)
=>
	(set-goal strategy-goal sg-fastcastle-uu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Fast-Castle UU")
	(disable-self)
)

(defrule
	(random-number >= 47)
	(random-number < 80)
=>
	(set-goal strategy-goal sg-fastcastle-gu)	
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Fast-Castle")
	(disable-self)
)

(defrule
	(random-number >= 80)
=>
	(set-goal strategy-goal sg-scoutrush)	
	(set-goal d-villager-goal 20)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(chat-to-allies "Gehe auf Scoutrush")
	(disable-self)
)


#end-if
#end-if

#load-if-defined MALAY-CIV

(defrule
	(true)
=>
	(up-modify-goal d-villager-goal c:+ 2)
	(up-modify-goal f-villager-goal c:+ 2)
	(up-modify-goal c-villager-goal c:+ 2)
	(disable-self)
)
#end-if

#load-if-defined BENGALIS-CIV

(defrule
	(true)
=>
	(up-modify-goal f-villager-goal c:+ 2)
	(up-modify-goal c-villager-goal c:+ 2)
	(disable-self)
)
#end-if

;endregion

;region Unique Upgrades ============================================

(defrule
	(current-age == imperial-age)
	(can-train-with-escrow trebuchet)
	(goal gl-wood-saving 25)
	(goal gl-gold-saving 25)
	(building-type-count-total castle >= 1)
	(unit-type-count-total trebuchet-set < 2)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(train trebuchet)
)

(defrule
	(current-age == imperial-age)
	(can-train-with-escrow trebuchet)
	(unit-type-count-total trebuchet-set < 2)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(up-modify-escrow wood c:- 200)
	(up-modify-escrow gold c:- 200)
	(train trebuchet)
)

(defrule
	(current-age == imperial-age)
	(can-train trebuchet)
	(unit-type-count-total trebuchet-set >= 2)
	(unit-type-count-total trebuchet-set < 8)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(train trebuchet)
)

(defrule
	(can-research ri-conscription)
=>
	(research ri-conscription)
)

#load-if-defined AZTEC-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count skirmisher-line >= 5)
=>
	(research my-second-unique-research)
)


(defrule
	(can-research my-unique-research)
	(unit-type-count eagle-warrior-line >= 5)
	(research-completed ri-elite-eagle-warrior)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BENGALIS-CIV

(defrule
	(can-research my-second-unique-research)
	(or (unit-type-count armored-elephant-line >= 3)
	(or (unit-type-count my-unique-unit-line >= 5)
	(or (unit-type-count battle-elephant-line >= 5)
	(unit-type-count elephant-archer-line >= 5))))
=>
	(research my-second-unique-research)
)


(defrule
	(can-research my-unique-research)
	(civilian-population >= 100)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BERBERS-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count camel-archer-line >= 5)
	(research-completed ri-elite-camel-archer)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BOHEMIANS-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count hand-cannoneer >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count monk >= 8)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BRITON-CIV

(defrule
	(can-research my-unique-research)
	(or(unit-type-count archer-line >= 3)
	(unit-type-count longbowman-line >= 3))
=>
	(research my-unique-research)
)

(defrule
	(can-research my-second-unique-research)
	(unit-type-count trebuchet >= 2)
=>
	(research my-second-unique-research)
)

#end-if

#load-if-defined BULGARIANS-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count cavalry-class >= 6)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total militiaman-line >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BURGUNDIANS-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(civilian-population >= 125)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BURMESE-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total battle-elephant-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total cavalry-class >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined BYZANTINE-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total fire-ship-line >= 3)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total cataphract-line >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined CELTIC-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total siege-weapon-class >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined CHINESE-CIV

(defrule
	(can-research my-second-unique-research)
	(building-type-count-total watch-tower-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count-total chu-ko-nu-line >= 6)
	(unit-type-count-total scorpion-line >= 4))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined CUMANS-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total cavalry-class >= 6)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined DRAVIDIANS-CIV

(defrule
	(can-research my-second-unique-research)
	(or (unit-type-count armored-elephant-line >= 3)
	(or (unit-type-count battle-elephant-line >= 5)
	(unit-type-count elephant-archer-line >= 5)))
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count cavalry-class >= 5)
	(unit-type-count infantry-class >= 5))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined ETHIOPIAN-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total shotel-line >= 10)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total siege-weapon-class >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined FRANKISH-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total throwing-axeman-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total cavalry-class >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined GOTHIC-CIV

(defrule
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(research-completed my-unique-research)
	(building-type-count-total barracks < 6)
	(can-build barracks)
=>
	(build barracks)
	;(chat-to-player my-player-number "Barracks 1")
)

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

#end-if

#load-if-defined GURJARAS-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count camel-line >= 5)
	(unit-type-count elephant-archer-line >= 5))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined HUN-CIV

#end-if

#load-if-defined INCAN-CIV

(defrule
	(can-research my-second-unique-research)
	(or (unit-type-count-total skirmisher-line >= 5)
	(unit-type-count-total slinger >= 5))
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count-total eagle-warrior-line >= 5)
	(or (unit-type-count-total slinger >= 5)
	(unit-type-count-total kamayuk-line >= 5)))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined INDIAN-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total hand-cannoneer >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined ITALIAN-CIV

(defrule
	(can-research my-second-unique-research)
	(or (unit-type-count-total archer-line >= 3)
	(unit-type-count-total genoese-crossbowman-line >= 3))
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(building-type-count-total market >= 1)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined JAPANESE-CIV

(defrule
	(can-research my-second-unique-research)
	(current-age >= imperial-age)
=>
	(research my-second-unique-research)
)

(defrule
	(research-completed my-second-unique-research)
	(up-compare-goal gl-military-advantage >= 10)
	(can-build watch-tower-line)
=>
	(build-forward watch-tower-line)
)

(defrule
	(research-completed my-second-unique-research)
	(up-compare-goal gl-military-advantage < 10)
	(can-build watch-tower-line)
	(building-type-count-total watch-tower < 10)
=>
	(build watch-tower-line)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count trebuchet >= 3)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined KHMER-CIV

(defrule
	(can-research my-second-unique-research)
	(building-type-count-total battle-elephant-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count-total ballista-elephant-line >= 5)
	(unit-type-count-total scorpion-line >= 4))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined KOREAN-CIV

(defrule
	(can-research my-second-unique-research)
	(building-type-count-total watch-tower-line >= 3)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total mangonel-line >= 3)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined LITHUANIANS-CIV

(defrule
	(can-research my-second-unique-research)
	(military-population < 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count-total spearman-line >= 6)
	(unit-type-count-total skirmisher-line >= 6))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined MAGYAR-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total cavalry-archer-line >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined MALAY-CIV

(defrule
	(can-research my-second-unique-research)
	(building-type-count-total dock >= 3)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

(defrule
	(research-completed my-unique-research)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(research-completed my-unique-research)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(research-completed my-unique-research)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(research-completed my-unique-research)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(research-completed my-unique-research)
	(can-build barracks)
	(building-type-count-total barracks < 6)
=>
	(build barracks)
	;(chat-to-player my-player-number "Barracks 2")
)
	
(defrule
	(research-completed my-unique-research)
	(research-completed ri-two-handed-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined MALIAN-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total cavalry-class >= 10)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined MAYAN-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count skirmisher-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total eagle-warrior-line >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined MONGOL-CIV


(defrule
	(can-research my-unique-research)
	(unit-type-count-total siege-weapon-class >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined PERSIAN-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total archer-line >= 3)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total war-elephant-line >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined POLES-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total knight-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total scout-cavalry-line >= 5)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined PORTUGUESE-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total warship-class >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count-total archery-cannon-class >= 5)
	(unit-type-count-total bombard-cannon-line >= 2))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined SARACEN-CIV

(defrule
	(can-research my-unique-research)
	(unit-type-count-total camel-line >= 10)
=>
	(research my-unique-research)
)

(defrule
	(can-research my-second-unique-research)
	(or (unit-type-count-total mangonel-line >= 4)
	(unit-type-count trebuchet >= 2))
=>
	(research my-second-unique-research)
)



#end-if

#load-if-defined SICILIANS-CIV

(defrule
	(can-research my-second-unique-research)
	(building-type-count-total town-center >= 5)
=>
	(research my-second-unique-research)
	;(chat-to-player my-player-number "Entwickle First Crusade")
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total knight-line >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined SLAVIC-CIV

(defrule
	(can-research my-second-unique-research)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total infantry-class >= 6)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined SPANISH-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total monk >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined TATARS-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total cavalry-archer-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count trebuchet >= 3)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined TEUTONIC-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total siege-weapon-class >= 3)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

#end-if

#load-if-defined TURKISH-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total cavalry-archer-line >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(or (unit-type-count-total bombard-cannon-line >= 2)
	(unit-type-count-total cannon-galleon-line >= 2))
=>
	(research my-unique-research)
)

#end-if

#load-if-defined VIETNAMESE-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total battle-elephant-line >= 5)
=>
	(research my-second-unique-research)
)

#load-if-not-defined UP-2-PLAYER-GAME

(defrule
	(can-research my-unique-research)
=>
	(research my-unique-research)
)

#end-if
#end-if

#load-if-defined VIKING-CIV

(defrule
	(can-research my-second-unique-research)
	(unit-type-count-total infantry-class >= 5)
=>
	(research my-second-unique-research)
)

(defrule
	(can-research my-unique-research)
	(unit-type-count-total berserk-line >= 5)
=>
	(research my-unique-research)
)

#end-if

;endregion

;region Unique Units ===============================================

(defrule
	(current-age == castle-age)
	(can-train jaguar-man-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train jaguar-man-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-jaguar-man)
	(unit-type-count jaguar-man-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-jaguar-man)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train jaguar-man-line)
	(unit-type-count jaguar-man-line < 5)
	(not (research-completed ri-elite-jaguar-man))
=>
	(train jaguar-man-line)
)

(defrule
	(current-age == imperial-age)
	(can-train jaguar-man-line)
	(research-completed ri-elite-jaguar-man)
=>
	(train jaguar-man-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train jaguar-man-line)
	(building-type-count-total castle > 0)
=>
	(train jaguar-man-line)
)

(defrule
	(current-age == castle-age)
	(can-train ratha-train)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train ratha-train)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-ratha)
	(unit-type-count ratha-set > 2)
	(goal gl-wood-saving 32)
	(goal gl-food-saving 32)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-ratha)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train ratha-train)
	(unit-type-count ratha-set < 5)
	(not (research-completed ri-elite-ratha))
=>
	(train ratha-train)
)

(defrule
	(current-age == imperial-age)
	(can-train ratha-train)
	(research-completed ri-elite-ratha)
=>
	(train ratha-train)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(players-unit-type-count focus-player infantry-class >= 5))
	(can-train ratha-set)
	(building-type-count-total castle > 0)
=>
	(train ratha-set)
)

(defrule
	(current-age == castle-age)
	(can-train camel-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train camel-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-camel-archer)
	(unit-type-count camel-archer-line > 2)
	(goal gl-wood-saving 33)
	(goal gl-gold-saving 33)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-camel-archer)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train camel-archer-line)
	(unit-type-count camel-archer-line < 5)
	(not (research-completed ri-elite-camel-archer))
=>
	(train camel-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train camel-archer-line)
	(research-completed ri-elite-camel-archer)
=>
	(train camel-archer-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(players-unit-type-count focus-player infantry-class >= 5))))))
	(can-train camel-archer-line)
	(building-type-count-total castle > 0)
=>
	(train camel-archer-line)
)

(defrule
	(current-age == castle-age)
	(can-train hussite-wagon-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train hussite-wagon-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-hussite-wagon)
	(unit-type-count hussite-wagon-line > 2)
	(goal gl-wood-saving 33)
	(goal gl-gold-saving 33)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-hussite-wagon)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train hussite-wagon-line)
	(unit-type-count hussite-wagon-line < 5)
	(not (research-completed ri-elite-hussite-wagon))
=>
	(train hussite-wagon-line)
)

(defrule
	(current-age == imperial-age)
	(can-train hussite-wagon-line)
	(research-completed ri-elite-hussite-wagon)
=>
	(train hussite-wagon-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train hussite-wagon-line)
	(building-type-count-total castle > 0)
	; (or (civilian-population g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train hussite-wagon-line)
)

(defrule
	(current-age == castle-age)
	(can-train longbowman-line)
	(unit-type-count archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train longbowman-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-longbowman)
	(unit-type-count longbowman-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-longbowman)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train longbowman-line)
	(unit-type-count archer-line < 5)
	(unit-type-count longbowman-line < 5)
	(not (research-completed ri-elite-longbowman))
=>
	(train longbowman-line)
)

(defrule
	(current-age == imperial-age)
	(can-train longbowman-line)
	(unit-type-count archer-line < 5)
	(research-completed ri-elite-longbowman)
=>
	(train longbowman-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train longbowman-line)
	(building-type-count-total castle > 0)
=>
	(train longbowman-line)
)

(defrule
	(current-age == castle-age)
	(can-train konnik-line)
	(unit-type-count knight-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train konnik-line)
)

(defrule
	(current-age == castle-age)
	(can-train krepost-konnik-line)
	(unit-type-count knight-line < 5)
	(civilian-population g:< c-villager-goal)
=>
	(train krepost-konnik-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-konnik)
	(unit-type-count konnik-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-konnik)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train konnik-line)
	(unit-type-count knight-line < 5)
	(unit-type-count konnik-line < 5)
	(not (research-completed ri-elite-konnik))
=>
	(train konnik-line)
)

(defrule
	(current-age == imperial-age)
	(can-train konnik-line)
	(unit-type-count knight-line < 5)
	(research-completed ri-elite-konnik)
=>
	(train konnik-line)
)

(defrule
	(current-age == imperial-age)
	(can-train krepost-konnik-line)
	(unit-type-count knight-line < 5)
	(unit-type-count krepost-konnik-line < 10)
	(not (research-completed ri-elite-konnik))
=>
	(train krepost-konnik-line)
)

(defrule
	(current-age == imperial-age)
	(can-train krepost-konnik-line)
	(unit-type-count knight-line < 5)
	(research-completed ri-elite-konnik)
=>
	(train krepost-konnik-line)
)

(defrule
	(current-age == castle-age)
	(can-train coustillier-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train coustillier-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-coustillier)
	(unit-type-count coustillier-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-coustillier)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train coustillier-line)
	(unit-type-count coustillier-line < 5)
	(not (research-completed ri-elite-coustillier))
=>
	(train coustillier-line)
)

(defrule
	(current-age == imperial-age)
	(can-train coustillier-line)
	(research-completed ri-elite-coustillier)
=>
	(train coustillier-line)
)

(defrule
	(current-age == castle-age)
	(can-train arambai-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train arambai-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-arambai)
	(unit-type-count arambai-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-arambai)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train arambai-line)
	(unit-type-count arambai-line < 5)
	(not (research-completed ri-elite-arambai))
=>
	(train arambai-line)
)

(defrule
	(current-age == imperial-age)
	(can-train arambai-line)
	(research-completed ri-elite-arambai)
=>
	(train arambai-line)
)

(defrule
	(unit-type-count-total arambai-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total arambai-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total arambai-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(current-age >= imperial-age)
	(unit-type-count-total arambai-line > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total arambai-line > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(current-age == castle-age)
	(can-train cataphract-line)
	(unit-type-count knight-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train cataphract-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-cataphract)
	(unit-type-count cataphract-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-cataphract)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train cataphract-line)
	(unit-type-count knight-line < 5)
	(unit-type-count cataphract-line < 5)
	(not (research-completed ri-elite-cataphract))
=>
	(train cataphract-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cataphract-line)
	(unit-type-count knight-line < 5)
	(research-completed ri-elite-cataphract)
=>
	(train cataphract-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train cataphract-line)
	(building-type-count-total castle > 0)
=>
	(train cataphract-line)
)

(defrule
	(current-age == castle-age)
	(can-train chu-ko-nu-line)
	(unit-type-count archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train chu-ko-nu-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-chu-ko-nu)
	(unit-type-count chu-ko-nu-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-chu-ko-nu)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train chu-ko-nu-line)
	(unit-type-count archer-line < 5)
	(unit-type-count chu-ko-nu-line < 5)
	(not (research-completed ri-elite-chu-ko-nu))
=>
	(train chu-ko-nu-line)
)

(defrule
	(current-age == imperial-age)
	(can-train chu-ko-nu-line)
	(unit-type-count archer-line < 5)
	(research-completed ri-elite-chu-ko-nu)
=>
	(train chu-ko-nu-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train chu-ko-nu-line)
	(building-type-count-total castle > 0)
=>
	(train chu-ko-nu-line)
)

(defrule
	(current-age == castle-age)
	(can-train shotel-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(food-amount > 75)
=>
	(train shotel-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-elite-shotel)
	(unit-type-count shotel-line > 2)
=>
	(research ri-elite-shotel)
)

(defrule
	(current-age == imperial-age)
	(can-train shotel-line)
	(unit-type-count shotel-line < 5)
	(food-amount > 75)
	(not (research-completed ri-elite-shotel))
=>
	(train shotel-line)
)

(defrule
	(current-age == imperial-age)
	(can-train shotel-line)
	(research-completed ri-elite-shotel)
	(food-amount > 75)
=>
	(train shotel-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(or (players-unit-type-count focus-player huskarl-line >= 6)
	(players-unit-type-count focus-player siege-weapon-class >= 4)))
	(can-train shotel-line)
	(building-type-count-total castle > 0)
=>
	(train shotel-line)
)

(defrule
	(current-age == castle-age)
	(can-train woad-raider-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train woad-raider-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-woad-raider)
	(unit-type-count woad-raider-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-woad-raider)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train woad-raider-line)
	(unit-type-count woad-raider-line < 5)
	(not (research-completed ri-elite-woad-raider))
=>
	(train woad-raider-line)
)

(defrule
	(current-age == imperial-age)
	(can-train woad-raider-line)
	(research-completed ri-elite-woad-raider)
=>
	(train woad-raider-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(or (players-unit-type-count focus-player huskarl-line >= 6)
	(players-unit-type-count focus-player siege-weapon-class >= 4)))
	(can-train woad-raider-line)
	(building-type-count-total castle > 0)
=>
	(train woad-raider-line)
)

(defrule
	(current-age == castle-age)
	(can-train kipchak-line)
	(unit-type-count cavalry-archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train kipchak-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-kipchak)
	(unit-type-count kipchak-line > 2)
	(goal gl-food-saving 32)
	(goal gl-wood-saving 32)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(research ri-elite-kipchak)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train kipchak-line)
	(unit-type-count cavalry-archer-line < 5)
	(unit-type-count kipchak-line < 5)
	(not (research-completed ri-elite-kipchak))
=>
	(train kipchak-line)
)

(defrule
	(current-age == imperial-age)
	(can-train kipchak-line)
	(unit-type-count cavalry-archer-line < 5)
	(research-completed ri-elite-kipchak)
=>
	(train kipchak-line)
)

(defrule
	(can-train mercenary-kipchak)
=>
	(train mercenary-kipchak)
)

(defrule
	(current-age == castle-age)
	(can-train urumi-swordsman-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train urumi-swordsman-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-urumi-swordsman)
	(unit-type-count urumi-swordsman-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-urumi-swordsman)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train urumi-swordsman-line)
	(unit-type-count urumi-swordsman-line < 5)
	(not (research-completed ri-elite-urumi-swordsman))
=>
	(train urumi-swordsman-line)
)

(defrule
	(current-age == imperial-age)
	(can-train urumi-swordsman-line)
	(research-completed ri-elite-urumi-swordsman)
=>
	(train urumi-swordsman-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player infantry-class >= 6)
	(players-unit-type-count focus-player siege-weapon-class >= 4))
	(can-train urumi-swordsman-line)
	(building-type-count-total castle > 0)
=>
	(train urumi-swordsman-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player infantry-class >= 6)
	(players-unit-type-count focus-player siege-weapon-class >= 4))
	(can-train throwing-axeman-line)
	(building-type-count-total castle > 0)
=>
	(train throwing-axeman-line)
)


(defrule
	(current-age == castle-age)
	(can-train huskarl-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train huskarl-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-huskarl)
	(unit-type-count huskarl-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-huskarl)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train huskarl-line)
	(unit-type-count huskarl-line < 5)
	(not (research-completed ri-elite-huskarl))
=>
	(train huskarl-line)
)

(defrule
	(current-age == imperial-age)
	(can-train huskarl-line)
	(research-completed ri-elite-huskarl)
=>
	(train huskarl-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train huskarl-line)
	(building-type-count-total castle > 0)
=>
	(train huskarl-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 5)))))
	(can-train huskarl-line)
	(building-type-count-total castle > 0)
=>
	(train huskarl-line)
)

(defrule
	(current-age == castle-age)
	(can-train chakram-thrower-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train chakram-thrower-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-chakram-thrower)
	(unit-type-count chakram-thrower-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-chakram-thrower)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train chakram-thrower-line)
	(unit-type-count chakram-thrower-line < 5)
	(not (research-completed ri-elite-chakram-thrower))
=>
	(train chakram-thrower-line)
)

(defrule
	(current-age == imperial-age)
	(can-train chakram-thrower-line)
	(research-completed ri-elite-chakram-thrower)
=>
	(train chakram-thrower-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player infantry-class >= 6)
	(players-unit-type-count focus-player battering-ram-line >= 2))
	(can-train chakram-thrower-line)
	(building-type-count-total castle > 0)
=>
	(train chakram-thrower-line)
)

(defrule
	(current-age == castle-age)
	(can-train tarkan-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train tarkan-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-tarkan)
	(unit-type-count tarkan-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-tarkan)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train tarkan-line)
	(unit-type-count tarkan-line < 5)
	(not (research-completed ri-elite-tarkan))
=>
	(train tarkan-line)
)

(defrule
	(current-age == imperial-age)
	(can-train tarkan-line)
	(research-completed ri-elite-tarkan)
=>
	(train tarkan-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train tarkan-line)
	(building-type-count-total castle > 0)
=>
	(train tarkan-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 5)))))
	(can-train tarkan-line)
	(building-type-count-total castle > 0)
=>
	(train tarkan-line)
)

(defrule
	(current-age == castle-age)
	(can-train ghulam-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(food-amount > 75)
=>
	(train ghulam-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-ghulam)
	(unit-type-count ghulam-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-ghulam)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train ghulam-line)
	(unit-type-count ghulam-line < 5)
	(food-amount > 75)
	(not (research-completed ri-elite-ghulam))
=>
	(train ghulam-line)
)

(defrule
	(current-age == imperial-age)
	(can-train ghulam-line)
	(research-completed ri-elite-ghulam)
	(food-amount > 75)
=>
	(train ghulam-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train ghulam-line)
	(building-type-count-total castle > 0)
=>
	(train ghulam-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 5)))))
	(can-train huskarl-line)
	(building-type-count-total castle > 0)
=>
	(train ghulam-line)
)

(defrule
	(current-age == castle-age)
	(can-train kamayuk-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train kamayuk-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-elite-kamayuk)
	(unit-type-count kamayuk-line > 2)
=>
	(research ri-elite-kamayuk)
)

(defrule
	(current-age == imperial-age)
	(can-train kamayuk-line)
	(unit-type-count kamayuk-line < 5)
	(not (research-completed ri-elite-kamayuk))
=>
	(train kamayuk-line)
)

(defrule
	(current-age == imperial-age)
	(can-train kamayuk-line)
	(research-completed ri-elite-kamayuk)
=>
	(train kamayuk-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player cavalry-class >= 5)
	(can-train kamayuk-line)
	(building-type-count-total castle > 0)
=>
	(train kamayuk-line)
)

(defrule
	(current-age == castle-age)
	(can-train genoese-crossbowman-line)
	(unit-type-count archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train genoese-crossbowman-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-genoese-crossbow)
	(unit-type-count genoese-crossbowman-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-genoese-crossbow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train genoese-crossbowman-line)
	(unit-type-count archer-line < 5)
	(unit-type-count genoese-crossbowman-line < 10)
	(not (research-completed ri-elite-genoese-crossbow))
=>
	(train genoese-crossbowman-line)
)

(defrule
	(current-age == imperial-age)
	(can-train genoese-crossbowman-line)
	(unit-type-count archer-line < 5)
	(research-completed ri-elite-genoese-crossbow)
=>
	(train genoese-crossbowman-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player cavalry-class >= 5)
	(can-train genoese-crossbowman-line)
	(building-type-count-total castle > 0)
=>
	(train genoese-crossbowman-line)
)

(defrule
	(current-age == castle-age)
	(can-train samurai-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train samurai-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-samurai)
	(unit-type-count samurai-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-samurai)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train samurai-line)
	(unit-type-count samurai-line < 5)
	(not (research-completed ri-elite-samurai))
=>
	(train samurai-line)
)

(defrule
	(current-age == imperial-age)
	(can-train samurai-line)
	(research-completed ri-elite-samurai)
=>
	(train samurai-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player jaguar-man-line >= 5)
	(or (players-unit-type-count focus-player hussite-wagon-line >= 5)
	(or (players-unit-type-count focus-player woad-raider-line >= 5)
	(or (players-unit-type-count focus-player shotel-line >= 5)
	(or (players-unit-type-count focus-player huskarl-line >= 5)
	(or (players-unit-type-count focus-player ghulam-line >= 5)
	(or (players-unit-type-count focus-player kamayuk-line >= 5)
	(or (players-unit-type-count focus-player karambit-warrior-line >= 5)
	(or (players-unit-type-count focus-player obuch-line >= 5)
	(or (players-unit-type-count focus-player serjeant-line >= 5)
	(players-unit-type-count focus-player berserk-line >= 5)))))))))))
	(can-train samurai-line)
	(building-type-count-total castle > 0)
=>
	(train samurai-line)
)

(defrule
	(current-age == castle-age)
	(can-train war-wagon-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train war-wagon-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-war-wagon)
	(unit-type-count war-wagon-line > 2)
	(goal gl-wood-saving 33)
	(goal gl-gold-saving 33)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-war-wagon)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train war-wagon-line)
	(unit-type-count war-wagon-line < 5)
	(not (research-completed ri-elite-war-wagon))
=>
	(train war-wagon-line)
)

(defrule
	(current-age == imperial-age)
	(can-train war-wagon-line)
	(research-completed ri-elite-war-wagon)
=>
	(train war-wagon-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(players-unit-type-count focus-player plumed-archer-line >= 5))))
	(can-train war-wagon-line)
	(building-type-count-total castle > 0)
=>
	(train war-wagon-line)
)

(defrule
	(current-age == castle-age)
	(can-train ballista-elephant-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train ballista-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-ballista-elephant)
	(unit-type-count ballista-elephant-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-ballista-elephant)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train ballista-elephant-line)
	(unit-type-count ballista-elephant-line < 5)
	(not (research-completed ri-elite-ballista-elephant))
=>
	(train ballista-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train ballista-elephant-line)
	(research-completed ri-elite-ballista-elephant)
=>
	(train ballista-elephant-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(or (players-unit-type-count focus-player rattan-archer-line >= 5)
	(players-unit-type-count focus-player militiaman-line >= 5))))))))
	(can-train ballista-elephant-line)
	(building-type-count-total castle > 0)
	; (or (civilian-population g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train ballista-elephant-line)
)

(defrule
	(current-age == castle-age)
	(can-train leitis-line)
	(unit-type-count knight-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train leitis-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-leitis)
	(unit-type-count leitis-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-leitis)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train leitis-line)
	(unit-type-count knight-line < 5)
	(unit-type-count leitis-line < 5)
	(not (research-completed ri-elite-leitis))
=>
	(train leitis-line)
)

(defrule
	(current-age == imperial-age)
	(can-train leitis-line)
	(unit-type-count knight-line < 5)
	(research-completed ri-elite-leitis)
=>
	(train leitis-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player knight-line >= 5)
	(players-unit-type-count focus-player siege-weapon-class >= 5))
	(can-train leitis-line)
	(building-type-count-total castle > 0)
=>
	(train leitis-line)
)

(defrule
	(current-age == castle-age)
	(can-train magyar-huszar-line)
	(unit-type-count scout-cavalry-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(research-completed my-unique-research)
=>
	(train magyar-huszar-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-magyar-huszar)
	(unit-type-count magyar-huszar-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-magyar-huszar)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train magyar-huszar-line)
	(unit-type-count scout-cavalry-line < 5)
	(unit-type-count magyar-huszar-line < 5)
	(not (research-completed ri-elite-magyar-huszar))
	(research-completed my-unique-research)
=>
	(train magyar-huszar-line)
)

(defrule
	(current-age == imperial-age)
	(can-train magyar-huszar-line)
	(unit-type-count scout-cavalry-line < 5)
	(research-completed ri-elite-magyar-huszar)
	(research-completed my-unique-research)
=>
	(train magyar-huszar-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player siege-weapon-class >= 5)
	(can-train magyar-huszar-line)
	(building-type-count-total castle > 0)
=>
	(train magyar-huszar-line)
)

(defrule
	(current-age == castle-age)
	(can-train karambit-warrior-line)
	(food-amount > 75)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train karambit-warrior-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-karambit-warrior)
	(unit-type-count karambit-warrior-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-karambit-warrior)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train karambit-warrior-line)
	(unit-type-count karambit-warrior-line < 5)
	(food-amount > 75)
	(not (research-completed ri-elite-karambit-warrior))
=>
	(train karambit-warrior-line)
)

(defrule
	(current-age == imperial-age)
	(can-train karambit-warrior-line)
	(food-amount > 75)
	(research-completed ri-elite-karambit-warrior)
=>
	(train karambit-warrior-line)
)

(defrule
	(current-age == castle-age)
	(can-train gbeto-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(food-amount > 75)
=>
	(train gbeto-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-gbeto)
	(unit-type-count gbeto-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-gbeto)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train gbeto-line)
	(unit-type-count gbeto-line < 5)
	(food-amount > 75)
	(not (research-completed ri-elite-gbeto))
=>
	(train gbeto-line)
)

(defrule
	(current-age == imperial-age)
	(can-train gbeto-line)
	(research-completed ri-elite-gbeto)
	(food-amount > 75)
=>
	(train gbeto-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player infantry-class >= 5)
	(players-unit-type-count focus-player siege-weapon-class >= 5))
	(can-train gbeto-line)
	(building-type-count-total castle > 0)
=>
	(train gbeto-line)
)

(defrule
	(current-age == castle-age)
	(can-train plumed-archer-line)
	(unit-type-count archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train plumed-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-plumed-archer)
	(unit-type-count plumed-archer-line > 2)
	(goal gl-food-saving 32)
	(goal gl-wood-saving 32)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(research ri-elite-plumed-archer)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train plumed-archer-line)
	(unit-type-count archer-line < 5)
	(unit-type-count plumed-archer-line < 5)
	(not (research-completed ri-elite-plumed-archer))
=>
	(train plumed-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train plumed-archer-line)
	(unit-type-count archer-line < 5)
	(research-completed ri-elite-plumed-archer)
=>
	(train plumed-archer-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player militiaman-line >= 5)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(or (players-unit-type-count focus-player archery-cannon-class >= 5)
	(players-unit-type-count focus-player camel-line >= 5))))
	(can-train plumed-archer-line)
	(building-type-count-total castle > 0)
=>
	(train plumed-archer-line)
)

(defrule
	(current-age == castle-age)
	(can-train mangudai-line)
	(unit-type-count cavalry-archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train mangudai-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-mangudai)
	(unit-type-count mangudai-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-mangudai)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train mangudai-line)
	(unit-type-count mangudai-line < 5)
	(unit-type-count cavalry-archer-line < 5)
	(not (research-completed ri-elite-mangudai))
=>
	(train mangudai-line)
)

(defrule
	(current-age == imperial-age)
	(can-train mangudai-line)
	(unit-type-count cavalry-archer-line < 5)
	(research-completed ri-elite-mangudai)
=>
	(train mangudai-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player militiaman-line >= 5)
	(or (players-unit-type-count focus-player siege-weapon-class >= 5)
	(players-unit-type-count focus-player archery-cannon-class >= 5)))
	(can-train mangudai-line)
	(building-type-count-total castle > 0)
=>
	(train mangudai-line)
)

(defrule
	(current-age == castle-age)
	(can-train war-elephant-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train war-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-war-elephant)
	(unit-type-count war-elephant-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-war-elephant)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train war-elephant-line)
=>
	(train war-elephant-line)
)

(defrule
	(current-age == castle-age)
	(can-train obuch-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train obuch-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-obuch)
	(unit-type-count obuch-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-obuch)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train obuch-line)
	(unit-type-count obuch-line < 5)
	(not (research-completed ri-elite-obuch))
=>
	(train obuch-line)
)

(defrule
	(current-age == imperial-age)
	(can-train obuch-line)
	(research-completed ri-elite-obuch)
=>
	(train obuch-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player infantry-class >= 5)
	(players-unit-type-count focus-player siege-weapon-class >= 5))
	(can-train obuch-line)
	(building-type-count-total castle > 0)
=>
	(train obuch-line)
)

(defrule
	(current-age == castle-age)
	(can-train organ-gun-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train organ-gun-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-organ-gun)
	(unit-type-count organ-gun-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-organ-gun)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train organ-gun-line)
	(unit-type-count organ-gun-line < 5)
	(not (research-completed ri-elite-organ-gun))
=>
	(train organ-gun-line)
)

(defrule
	(current-age == imperial-age)
	(can-train organ-gun-line)
	(research-completed ri-elite-organ-gun)
=>
	(train organ-gun-line)
)

(defrule
	(current-age == castle-age)
	(can-train serjeant-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train serjeant-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-serjeant)
	(unit-type-count serjeant-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-serjeant)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train serjeant-line)
	(unit-type-count serjeant-line < 5)
	(not (research-completed ri-elite-serjeant))
=>
	(train serjeant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train serjeant-line)
	(research-completed ri-elite-serjeant)
=>
	(train serjeant-line)
)

(defrule
	(current-age == castle-age)
	(can-train boyar-line)
	(unit-type-count knight-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train boyar-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-boyar)
	(unit-type-count boyar-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-boyar)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train boyar-line)
	(unit-type-count knight-line < 5)
	(unit-type-count boyar-line < 5)
	(not (research-completed ri-elite-boyar))
=>
	(train boyar-line)
)

(defrule
	(current-age == imperial-age)
	(can-train boyar-line)
	(unit-type-count knight-line < 5)
	(research-completed ri-elite-boyar)
=>
	(train boyar-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train boyar-line)
	(building-type-count-total castle > 0)
=>
	(train boyar-line)
)

(defrule
	(current-age == castle-age)
	(can-train conquistador-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train conquistador-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-conquistador)
	(unit-type-count conquistador-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-conquistador)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train conquistador-line)
	(unit-type-count conquistador-line < 5)
	(not (research-completed ri-elite-conquistador))
=>
	(train conquistador-line)
)

(defrule
	(current-age == imperial-age)
	(can-train conquistador-line)
	(research-completed ri-elite-conquistador)
=>
	(train conquistador-line)
)

(defrule
	(unit-type-count-total conquistador-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total conquistador-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total conquistador-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train conquistador-line)
	(building-type-count-total castle > 0)
=>
	(train conquistador-line)
)

(defrule
	(current-age == castle-age)
	(can-train keshik-line)
	(unit-type-count knight-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train keshik-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-keshik)
	(unit-type-count keshik-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-keshik)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train keshik-line)
	(unit-type-count knight-line < 5)
	(unit-type-count keshik-line < 5)
	(not (research-completed ri-elite-keshik))
=>
	(train keshik-line)
)

(defrule
	(current-age == imperial-age)
	(can-train keshik-line)
	(unit-type-count knight-line < 5)
	(research-completed ri-elite-keshik)
=>
	(train keshik-line)
)

(defrule
	(current-age == castle-age)
	(can-train teutonic-knight-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train teutonic-knight-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-teutonic-knight)
	(unit-type-count teutonic-knight-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-teutonic-knight)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train teutonic-knight-line)
	(unit-type-count teutonic-knight-line < 5)
	(not (research-completed ri-elite-teutonic-knight))
=>
	(train teutonic-knight-line)
)

(defrule
	(current-age == imperial-age)
	(can-train teutonic-knight-line)
	(research-completed ri-elite-teutonic-knight)
=>
	(train teutonic-knight-line)
)

(defrule
	(current-age == castle-age)
	(can-train janissary-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train janissary-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-janissary)
	(unit-type-count janissary-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-janissary)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train janissary-line)
	(unit-type-count janissary-line < 5)
	(not (research-completed ri-elite-janissary))
=>
	(train janissary-line)
)

(defrule
	(current-age == imperial-age)
	(can-train janissary-line)
	(research-completed ri-elite-janissary)
=>
	(train janissary-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 5)
	(can-train janissary-line)
	(building-type-count-total castle > 0)
=>
	(train janissary-line)
)

(defrule
	(current-age == castle-age)
	(can-train rattan-archer-line)
	(unit-type-count archer-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train rattan-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-rattan-archer)
	(unit-type-count rattan-archer-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-rattan-archer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train rattan-archer-line)
	(unit-type-count archer-line < 5)
	(unit-type-count rattan-archer-line < 5)
	(not (research-completed ri-elite-rattan-archer))
=>
	(train rattan-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train rattan-archer-line)
	(unit-type-count archer-line < 5)
	(research-completed ri-elite-rattan-archer)
=>
	(train rattan-archer-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player archery-cannon-class >= 5)
	(players-unit-type-count focus-player plumed-archer-line >= 5))))))
	(can-train rattan-archer-line)
	(building-type-count-total castle > 0)
=>
	(train rattan-archer-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(or (players-unit-type-count focus-player camel-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 5))))))
	(can-train rattan-archer-line)
	(building-type-count-total castle > 0)
=>
	(train rattan-archer-line)
)

(defrule
	(current-age == castle-age)
	(can-train berserk-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train berserk-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-berserk)
	(unit-type-count berserk-line > 2)
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-elite-berserk)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-train berserk-line)
	(unit-type-count berserk-line < 5)
	(not (research-completed ri-elite-berserk))
=>
	(train berserk-line)
)

(defrule
	(current-age == imperial-age)
	(can-train berserk-line)
	(research-completed ri-elite-berserk)
=>
	(train berserk-line)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-class >= 5)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player eagle-warrior-line >= 5)))
	(can-train berserk-line)
	(building-type-count-total castle > 0)
=>
	(train berserk-line)
)

;endregion

;region Refresh Buildings ==========================================

; (defrule
	; (current-age >= castle-age)
	; (not (goal strategy-goal sg-boom-imp))
	; (dropsite-min-distance gold > 3)
	; (dropsite-min-distance stone > 3)
	; (building-type-count mining-camp >= 2)
	; (wood-amount > 100)
	; (goal gl-wood-saving 0)
; =>
	; (delete-building mining-camp)
	; (chat-local-to-self "Deleting old mining-camps.")
; )

; (defrule
	; (current-age >= castle-age)
	; (not (goal strategy-goal sg-boom-imp))
	; (dropsite-min-distance wood > 3)
	; (building-type-count lumber-camp >= 2)
	; (wood-amount > 100)
	; (goal gl-wood-saving 0)
; =>
	; (delete-building lumber-camp)
	; (chat-local-to-self "Deleting old lumber-camps.")
; )

; (defrule
	; (current-age >= castle-age)
	; (not (goal strategy-goal sg-boom-imp))
	; (dropsite-min-distance food > 9)
	; (building-type-count mill >= 2)
	; (wood-amount > 100)
	; (goal gl-wood-saving 0)
; =>
	; (delete-building mill)
	; (chat-local-to-self "Deleting old Mills.")
; )

(defrule
	(game-time > 2400)
	(or (up-compare-goal gl-military-advantage >= 10)
	(military-population >= 20))
	(civilian-population >= 80)
	(current-age >= imperial-age)
	(not (town-under-attack))
=>
	(up-delete-objects c: wall-class c: 32767)
	(up-delete-objects c: gate-class c: 32767)
	(chat-local-to-self "Deleting my walls.")
	(disable-self)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age < castle-age)
=>
	(up-jump-rule 2)
)

(defrule
	(or (town-under-attack)
	(up-enemy-units-in-town >= 5))
	(up-pending-objects c: wall-class >= 1)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: palisade-wall c: 240)
	(up-find-status-local c: gate c: 240)
)

(defrule
	(or (town-under-attack)
	(up-enemy-units-in-town >= 5))
	(or (up-pending-objects c: palisade-wall >= 1)
	(up-pending-objects c: gate-class >= 1))
	(up-set-target-object search-local c: 0)
=>
	(up-target-objects 1 action-delete -1 -1)
	(chat-to-player my-player-number "Deleting walls under construction")
)

;endregion

;region Counter Units ==============================================

(defrule
	(current-age >= castle-age)
	(building-type-count-total barracks < 1)
	(military-population < 2)
=>
	(build barracks)
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player galley-line >= 3)
	(can-train fire-ship-line)
	(unit-type-count fire-ship-line < 6)
	; (or (civilian-population g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train fire-ship-line)
	(chat-to-player my-player-number "Baue Feuerschiffe gegen Galeeren")
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player fire-ship-line >= 3)
	(can-train demolition-ship-line)
	(unit-type-count demolition-ship-line < 4)
	; (or (civilian-population g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train demolition-ship-line)
	(chat-to-player my-player-number "Baue Brander gegen Feuerschiffe")
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player demolition-ship-line >= 1)
	(can-train galley-line)
	(unit-type-count galley-line < 8)
	; (or (civilian-population g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train galley-line)
	(chat-to-player my-player-number "Baue Galeeren gegen Brander")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player galley-line >= 3)
	(or (players-unit-type-count focus-player fire-ship-line >= 3)
	(players-unit-type-count focus-player demolition-ship-line >= 1)))
	(can-research ri-war-galley)
=>
	(research ri-war-galley)
	(chat-to-player my-player-number "Entwickle Kriegsgaleere gegen feindliche Marine")
)

(defrule	
	(current-age >= castle-age)
	(unit-type-count-total warship-class >= 6)
	(can-research ri-careening)
=>
	(research ri-careening)
)

(defrule	
	(unit-type-count-total warship-class >= 6)
	(can-research ri-shipwright)
=>
	(research ri-shipwright)
)

(defrule	
	(unit-type-count-total warship-class >= 6)
	(can-research ri-dry-dock)
=>
	(research ri-dry-dock)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player galley-line >= 3)
	(can-train fire-ship-line)
	(unit-type-count fire-ship-line < 12)
	(research-completed ri-war-galley)
=>
	(train fire-ship-line)
	(chat-to-player my-player-number "Baue Feuerschiffe gegen Galeeren")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player fire-ship-line >= 3)
	(can-train demolition-ship-line)
	(unit-type-count demolition-ship-line < 6)
	(research-completed ri-war-galley)
=>
	(train demolition-ship-line)
	(chat-to-player my-player-number "Baue Brander gegen Feuerschiffe")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player demolition-ship-line >= 1)
	(can-train galley-line)
	(unit-type-count galley-line < 14)
	(research-completed ri-war-galley)
=>
	(train galley-line)
	(chat-to-player my-player-number "Baue Galeeren gegen Brander")
)

(defrule
	(current-age >= feudal-age)
	(players-unit-type-count focus-player fishing-ship >= 1)
	(can-train galley-line)
	(unit-type-count galley-line < 6)
=>
	(train galley-line)
	(chat-to-player my-player-number "Baue Galeeren gegen Fischkutter")
)

(defrule
	(current-age >= feudal-age)
	(town-under-attack)
	(can-build-with-escrow barracks)
	(building-type-count-total barracks < 1)
	(building-type-count-total town-center >= 1)
=>
	(up-modify-escrow wood c:- 175)
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 10)
    (up-build place-control 0 c: barracks)
	(chat-to-player my-player-number "Baue Kaserne zur Verteidigung")
)

(defrule
	(current-age >= feudal-age)
	(town-under-attack)
	(can-build-with-escrow barracks)
	(building-type-count-total barracks < 1)
	(building-type-count-total town-center >= 1)
=>
	(up-modify-escrow wood c:- 175)
	(build barracks)
	(chat-to-player my-player-number "Baue Kaserne zur Verteidigung")
)

(defrule
	(current-age == feudal-age)
	(or (players-unit-type-count focus-player archer-line >= 4)
	(or (players-unit-type-count focus-player spearman-line >= 4)
	(players-unit-type-count focus-player militiaman-line > 0)))
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
	(chat-to-player my-player-number "Baue Schiessanlage, um gegnerische Armee zu kontern")
)

(defrule
	(current-age == feudal-age)
	(players-building-type-count focus-player archery-range >= 1)
	(goal strategy-goal sg-scoutrush)
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
	(chat-to-player my-player-number "Baue Schiessanlage, um Bogenschuetzen zu kontern")
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player skirmisher-line >= 3)
	(can-build-with-escrow stable)
	(building-type-count-total stable == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
	(chat-to-player my-player-number "Baue Stall, um feindliche Plaenkler zu kontern")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 6)
	(or (players-unit-type-count focus-player spearman-line >= 6)
	(players-unit-type-count focus-player militiaman-line >= 6)))
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
	(chat-to-player my-player-number "Baue Schiessanlage, um gegnerische Armee zu kontern")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player skirmisher-line >= 6)
	(can-build-with-escrow stable)
	(building-type-count-total stable < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
	(chat-to-player my-player-number "Baue Stall, um feindliche Plaenkler zu kontern")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 4)
	(or (players-unit-type-count focus-player mangudai-line >= 4)
	(or (players-unit-type-count focus-player war-wagon-line >= 4)
	(or (players-unit-type-count focus-player kipchak-set >= 4)
	(players-unit-type-count focus-player camel-archer-line >= 4)))))
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
	(chat-to-player my-player-number "Baue Schiessanlage, um feindliche Ber. Bogenschuetzen zu kontern")
)

(defrule
	(current-age == feudal-age)
	(not (goal strategy-goal sg-towerrush))
	(or (up-compare-goal gl-military-advantage <= -10)
	(players-unit-type-count focus-player archer-line >= 6))
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 6)
	;(town-under-attack)
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower < 2)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-assign-builders c: watch-tower c: 6)
	(up-set-placement-data my-player-number lumber-camp c: -2)
    (up-build place-control 0 c: watch-tower)
	(chat-to-player my-player-number "Building defensive tower")
)

(defrule
	(current-age == feudal-age)
	(not (goal strategy-goal sg-towerrush))
	(or (up-compare-goal gl-military-advantage <= -10)
	(players-unit-type-count focus-player archer-line >= 6))
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 6)
	;(town-under-attack)
	(can-build-with-escrow donjon)
	(building-type-count-total donjon < 2)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-assign-builders c: donjon c: 6)
	(up-set-placement-data my-player-number lumber-camp c: -2)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Building defensive donjon")
)

(defrule
	(current-age == feudal-age)
	(not (goal strategy-goal sg-towerrush))
	(not (goal strategy-goal sg-fastcastle-uu))
	(or (up-compare-goal gl-military-advantage <= -16)
	(players-unit-type-count focus-player archer-line >= 10))
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -16))
	(military-population < 6)
	(town-under-attack)
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower < 4)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-set-placement-data my-player-number mining-camp c: -2)
	(up-assign-builders c: watch-tower c: 6)
    (up-build place-control 0 c: watch-tower)
	;(build watch-tower)
	(chat-to-player my-player-number "Building defensive tower")
)

(defrule
	(current-age == feudal-age)
	(not (goal strategy-goal sg-towerrush))
	(not (goal strategy-goal sg-fastcastle-uu))
	(or (up-compare-goal gl-military-advantage <= -16)
	(players-unit-type-count focus-player archer-line >= 10))
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 6)
	(town-under-attack)
	(can-build-with-escrow donjon)
	(building-type-count-total tower-class < 4)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-set-placement-data my-player-number mining-camp c: -2)
	(up-assign-builders c: donjon c: 6)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Building defensive donjon")
)

(defrule
	(current-age >= castle-age)
	(current-age < imperial-age)
	(players-unit-type-count focus-player archer-line >= 8)
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 8)
	;(town-under-attack)
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower < 2)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-assign-builders c: watch-tower c: 6)
	(up-set-placement-data my-player-number lumber-camp c: -2)
    (up-build place-control 0 c: watch-tower)
	(chat-to-player my-player-number "Building defensive tower")
)

(defrule
	(current-age >= castle-age)
	(current-age < imperial-age)
	(players-unit-type-count focus-player archer-line >= 8)
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 8)
	;(town-under-attack)
	(can-build-with-escrow donjon)
	(building-type-count-total donjon < 2)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-assign-builders c: donjon c: 6)
	(up-set-placement-data my-player-number lumber-camp c: -2)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Building defensive donjon")
)

(defrule
	(current-age >= castle-age)
	(current-age < imperial-age)
	(players-unit-type-count focus-player archer-line >= 8)
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 8)
	(town-under-attack)
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower < 4)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-set-placement-data my-player-number mining-camp c: -2)
	(up-assign-builders c: watch-tower c: 6)
    (up-build place-control 0 c: watch-tower)
	;(build watch-tower)
	(chat-to-player my-player-number "Building defensive tower")
)

(defrule
	(current-age >= castle-age)
	(current-age < imperial-age)
	(players-unit-type-count focus-player archer-line >= 8)
	(or (military-population < 3)
	(up-compare-goal gl-military-advantage <= -10))
	(military-population < 8)
	(town-under-attack)
	(can-build-with-escrow donjon)
	(building-type-count-total tower-class < 4)
	(not (goal gl-stone-saving 7))
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-set-placement-data my-player-number mining-camp c: -2)
	(up-assign-builders c: donjon c: 6)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Building defensive donjon")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-build-with-escrow stable)
	(building-type-count-total stable == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
	(chat-to-player my-player-number "Baue Stall, um feindliche Moenche zu kontern")
)

(defrule
	(current-age == feudal-age)
	(or (players-unit-type-count focus-player archer-line >= 4)
	(players-unit-type-count focus-player spearman-line >= 3))
	(can-train-with-escrow skirmisher-line)
	(food-amount < 600)
	(up-compare-goal gl-military-advantage < 25)
	(not (goal gl-food-saving 22))
=>
	(up-modify-escrow food c:- 25)
	(up-modify-escrow wood c:- 35)	
	(train skirmisher-line)
	(chat-to-player my-player-number "Produziere Plaenkler gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player scout-cavalry-line >= 3)
	(can-train spearman-line)
	(unit-type-count spearman-line < 6)
	; (or (civilian-population g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Speerkaempfer gegen Scouts")
)

(defrule
	(current-age == feudal-age)
	(or (players-unit-type-count focus-player skirmisher-line >= 3)
	(players-unit-type-count focus-player eagle-warrior-line >= 3))
	(can-build-with-escrow stable)
	(building-type-count-total stable == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(current-age == feudal-age)
	(or (players-unit-type-count focus-player skirmisher-line >= 3)
	(players-unit-type-count focus-player eagle-warrior-line >= 3))
	(players-unit-type-count focus-player spearman-line < 3)
	(can-train-with-escrow scout-cavalry-line)
	(food-amount < 600)
	(up-compare-goal gl-military-advantage < 25)
	(not (goal gl-food-saving 22))
=>
	(up-modify-escrow food c:- 80)
	(train scout-cavalry-line)
	(chat-to-player my-player-number "Produziere Scouts gegen Plaenkler und Adlerkrieger")
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player skirmisher-line >= 3)
	(can-train-with-escrow eagle-warrior-line)
	(food-amount < 600)	
	(up-compare-goal gl-military-advantage < 25)
	(not (goal gl-food-saving 22))
=>
	(up-modify-escrow food c:- 20)
	(up-modify-escrow gold c:- 50)
	(train eagle-warrior-line)
	(chat-to-player my-player-number "Produziere Adlerkrieger gegen Bogenschuetzen")
)

(defrule
	(current-age == feudal-age)
	(players-unit-type-count focus-player militiaman-line > 0)
	(can-train-with-escrow archer-line)
	(up-compare-goal gl-military-advantage < 25)
	(not (goal gl-food-saving 22))
=>
	(up-modify-escrow wood c:- 25)
	(up-modify-escrow gold c:- 45)
	(train archer-line)
	(chat-to-player my-player-number "Making Archers against the drush")
)

(defrule
	(current-age >= castle-age)
	(can-research ri-light-cavalry)
	(or (unit-type-count scout-cavalry-line >= 4)
	(food-amount >= 1500))
=>
	(research ri-light-cavalry)
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player scout-cavalry-line >= 4)
	(players-unit-type-count focus-player skirmisher-line >= 6))
	(unit-available steppe-lancer)
	(can-build-with-escrow stable)
	(building-type-count-total stable == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)
	
(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player scout-cavalry-line >= 4)
	(players-unit-type-count focus-player skirmisher-line >= 6))
	(can-train steppe-lancer-line)
	(unit-type-count knight-line <= 4)
=>
	(train steppe-lancer-line)
	(chat-to-player my-player-number "Produziere Steppenreiter gegen Plaenkler und Scouts")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player scout-cavalry-line >= 8)
	(players-unit-type-count focus-player skirmisher-line >= 10))
	(can-research ri-elite-steppe-lancer)
	(not (research-completed ri-elite-steppe-lancer))
	(unit-type-count knight-line <= 4)
=>
	(research ri-elite-steppe-lancer)
	(chat-to-player my-player-number "Entwickle Elite-Steppenreiter gegen Plaenkler und Scouts")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player scout-cavalry-line >= 8)
	(players-unit-type-count focus-player skirmisher-line >= 10))
	(can-train steppe-lancer-line)
	(research-completed ri-elite-steppe-lancer)
	(unit-type-count knight-line <= 4)
=>
	(train steppe-lancer-line)
	(chat-to-player my-player-number "Produziere Steppenreiter gegen Plaenkler und Scouts")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player spearman-line >= 6)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
	(chat-to-player my-player-number "Building archery-ranges to counter archers and spearmen")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train skirmisher-line)
	(not (research-completed ri-elite-skirmisher))
	(research-available ri-elite-skirmisher)
	(not (unit-available genitour-line))
	(unit-type-count skirmisher-line <= 4)
=>
	(train skirmisher-line)
	(chat-to-player my-player-number "Produziere Plaenkler gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-research-with-escrow ri-elite-skirmisher)
	(not (research-completed ri-elite-skirmisher))
	(not (unit-available genitour-line))
=>
	(up-modify-escrow wood c:- 230)
	(up-modify-escrow gold c:- 130)
	(research ri-elite-skirmisher)
	(chat-to-player my-player-number "Entwickle Elite-Plaenkler gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train-with-escrow skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(not (unit-available genitour-line))
	(not (goal gl-food-saving 23))
=>
	(up-modify-escrow food c:- 25)
	(up-modify-escrow wood c:- 35)
	(train skirmisher-line)
	(chat-to-player my-player-number "Produziere Plaenkler gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(not (unit-available genitour-line))
=>
	(train skirmisher-line)
	(chat-to-player my-player-number "Produziere Plaenkler gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train genitour-line)
	; (or (civilian-population g:< c-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train genitour-line)
	(chat-to-player my-player-number "Produziere Ginete gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train genitour-line)
	(research-available ri-elite-genitour)
	(unit-type-count genitour-line <= 6)
=>
	(train genitour-line)
	(chat-to-player my-player-number "Produziere Ginete gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player spearman-line >= 5)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train genitour-line)
	(research-completed ri-elite-genitour)
=>
	(train genitour-line)
	(chat-to-player my-player-number "Produziere Ginete gegen Bogenschuetzen und Speerkaempfer")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player archer-line >= 4)
	(can-research ri-elite-genitour)
=>
	(research ri-elite-genitour)
	(chat-to-player my-player-number "Entwickle Elite-Ginete gegen Bogenschuetzen")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train shrivamsha-rider-line)
	; (or (civilian-population g:< c-villager-goal)
	; (up-research-status c: castle-age == research-pending))
=>
	(train shrivamsha-rider-line)
	(chat-to-player my-player-number "Making Shrivamsha-riders against enemy army")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train shrivamsha-rider-line)
	(research-available ri-elite-shrivamsha-rider)
	(unit-type-count shrivamsha-rider-line <= 5)
=>
	(train shrivamsha-rider-line)
	(chat-to-player my-player-number "Making Shrivamsha-riders against enemy army")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-train shrivamsha-rider-line)
	(research-completed ri-elite-shrivamsha-rider)
=>
	(train shrivamsha-rider-line)
	(chat-to-player my-player-number "Making Shrivamsha-riders against enemy army")
)

(defrule
	(current-age >= imperial-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player skirmisher-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5)))))))
	(can-research ri-elite-shrivamsha-rider)
=>
	(research ri-elite-shrivamsha-rider)
	(chat-to-player my-player-number "Researching Elite-Shrivamsha ")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player archer-line >= 6)
	(or (players-unit-type-count focus-player siege-weapon-class >= 1)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))))
	(building-type-count-total siege-workshop == 0)
	(can-build-with-escrow siege-workshop)
=>
	(up-modify-escrow wood c:- 200)
	(build siege-workshop)
	;(chat-to-player my-player-number "Baue Waffenschmiede als Konter")
)

(defrule
	(current-age == castle-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train battering-ram-line)
	(not (research-available ri-capped-ram))
	(unit-type-count-total battering-ram-line < 6)
	(up-compare-goal gl-military-advantage >= 4)
=>
	(train battering-ram-line)
	(chat-to-player my-player-number "Making rams against enemy fortifications")
)

(defrule
	(current-age >= feudal-age)
	(players-building-type-count focus-player watch-tower-line >= 1)
	(can-build-with-escrow siege-workshop)
	(building-type-count-total siege-workshop < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build siege-workshop)
	;(chat-to-player my-player-number "Produziere Rammboecke gegen feindliche Türme")
)

(defrule
	(current-age == feudal-age)
	(players-building-type-count focus-player watch-tower-line >= 1)
	(can-train-with-escrow battering-ram-line)
	(unit-type-count-total battering-ram-line < 2)
=>
	(up-modify-escrow wood c:- 160)
	(up-modify-escrow gold c:- 75)
	(train battering-ram-line)
	(chat-to-player my-player-number "Making rams against enemy towers")
)

(defrule
	(current-age == castle-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train-with-escrow battering-ram-line)
	(research-available ri-capped-ram)
	(unit-type-count-total battering-ram-line < 1)
	(up-compare-goal gl-military-advantage >= 4)
=>
	(up-modify-escrow wood c:- 160)
	(up-modify-escrow gold c:- 75)
	(train battering-ram-line)
	(chat-to-player my-player-number "Making rams against enemy fortifications")
)

(defrule
	(current-age == castle-age)
	(can-train-with-escrow battering-ram-line)
	(unit-type-count-total battering-ram-line < 1)
	(up-compare-goal gl-military-advantage >= 12)
=>
	(up-modify-escrow wood c:- 160)
	(up-modify-escrow gold c:- 75)
	(train battering-ram-line)
	(chat-to-player my-player-number "Making rams to support the attack")
)

(defrule
	(current-age == castle-age)
	(can-train-with-escrow armored-elephant-line)
	(unit-type-count-total armored-elephant-line < 1)
	(up-compare-goal gl-military-advantage >= 12)
=>
	(up-modify-escrow food c:- 130)
	(up-modify-escrow gold c:- 76)
	(train battering-ram-line)
	(chat-to-player my-player-number "Making armored-elephants to support the attack")
)

(defrule
	(current-age == castle-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train battering-ram-line)
	(research-completed ri-capped-ram)
	(unit-type-count-total battering-ram-line < 8)
	(up-compare-goal gl-military-advantage >= 4)
=>
	(train battering-ram-line)
	(chat-to-player my-player-number "Making rams against enemy fortifications")
)

(defrule
	(current-age == castle-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train armored-elephant-line)
	(unit-type-count-total armored-elephant-line < 6)
	(up-compare-goal gl-military-advantage >= 4)
=>
	(train armored-elephant-line)
	(chat-to-player my-player-number "Making Armored Elephants against enemy fortifications")
)

(defrule
	(current-age == imperial-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train armored-elephant-line)
	(research-available ri-elite-armored-elephant)
	(unit-type-count-total armored-elephant-line < 1)
=>
	(train armored-elephant-line)
	(chat-to-player my-player-number "Making Armored Elephants against enemy fortifications")
)

(defrule
	(current-age == imperial-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train armored-elephant-line)
	(research-completed ri-elite-armored-elephant)
	(unit-type-count-total armored-elephant-line < 10)
=>
	(train armored-elephant-line)
	(chat-to-player my-player-number "Making Armored Elephants against enemy fortifications")
)

(defrule
	(current-age >= castle-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-research ri-capped-ram)
	(research-available ri-capped-ram)
	(up-compare-goal gl-military-advantage >= 4)
=>
	(research ri-capped-ram)
	(chat-to-player my-player-number "Researching Capped Ram")
)

(defrule
	(current-age == imperial-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train battering-ram-line)
	(research-available ri-capped-ram)
	(unit-type-count battering-ram-line < 1)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train battering-ram-line)
	(not (research-available ri-siege-ram))
	(research-completed ri-capped-ram)
	(unit-type-count battering-ram-line < 6)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train battering-ram-line)
	(research-available ri-siege-ram)
	(research-completed ri-capped-ram)
	(unit-type-count battering-ram-line < 1)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(or (players-building-type-count focus-player castle >= 1)
	(players-building-type-count focus-player krepost >= 1))
	(can-train battering-ram-line)
	(research-completed ri-siege-ram)
	(unit-type-count battering-ram-line < 10)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == castle-age)
	(or (up-compare-goal gl-military-advantage >= 12)
	(or (players-unit-type-count focus-player mangonel-line >= 1)
	(or (players-unit-type-count focus-player scorpion-line >= 1)
	(or (players-unit-type-count focus-player archer-line >= 10)
	(or (players-unit-type-count focus-player skirmisher-line >= 10)
	(players-unit-type-count focus-player battering-ram-line >= 1))))))
	(can-train-with-escrow mangonel-line)
	(unit-type-count-total mangonel-line < 1)
=>
	(up-modify-escrow wood c:- 160)
	(up-modify-escrow gold c:- 135)
	(train mangonel-line)
	(chat-to-player my-player-number "Making mangos to support my army")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player mangonel-line >= 1)
	(or (players-unit-type-count focus-player scorpion-line >= 1)
	(or (players-unit-type-count focus-player archer-line >= 10)
	(or (players-unit-type-count focus-player skirmisher-line >= 10)
	(players-unit-type-count focus-player battering-ram-line >= 1)))))
	(can-train mangonel-line)
	(unit-type-count-total mangonel-line <= 5)
=>
	(train mangonel-line)
	(chat-to-player my-player-number "Making mangos to counter enemy army")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player scorpion-line >= 1)
	(or (players-unit-type-count focus-player mangonel-line >= 1)
	(or (players-unit-type-count focus-player battering-ram-line >= 1)
	(or (players-unit-type-count focus-player archer-line >= 6)
	(players-unit-type-count focus-player skirmisher-line >= 6)))))
	(can-train mangonel-line)
	(research-completed ri-onager)
=>
	(train mangonel-line)
	(chat-to-player my-player-number "Making mangos to counter enemy army")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player siege-weapon-class >= 3)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train bombard-cannon-line)
	(unit-type-count-total bombard-cannon-line < 8)
	(not (research-available ri-houfnice))
=>
	(train bombard-cannon-line)
	(chat-to-player my-player-number "Making bombard-cannons to counter enemy army")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player siege-weapon-class >= 3)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-research ri-houfnice)
	(research-available ri-houfnice)
=>
	(research ri-houfnice)
	(chat-to-player my-player-number "Researching Houfnice")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player siege-weapon-class >= 3)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train bombard-cannon-line)
	(unit-type-count-total bombard-cannon-line < 2)
	(research-available ri-houfnice)
=>
	(train bombard-cannon-line)
	(chat-to-player my-player-number "Making bombard-cannons to counter enemy army")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player siege-weapon-class >= 3)
	(players-unit-type-count focus-player archer-line >= 6))
	(can-train bombard-cannon-line)
	(unit-type-count-total bombard-cannon-line < 12)
	(research-completed ri-houfnice)
=>
	(train bombard-cannon-line)
	(chat-to-player my-player-number "Making bombard-cannons to counter enemy army")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player cavalry-class >= 6)
	(can-build-with-escrow barracks)
	(building-type-count-total barracks < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build barracks)
	(chat-to-player my-player-number "Baue Kasernen gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player cavalry-class >= 4)
	(can-train spearman-line)
	(not (research-completed ri-pikeman))
	(research-available ri-pikeman)
	(unit-type-count-total spearman-line <= 5)
	(unit-type-count-total camel-line <= 3)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Speerkaempfer gegen Kavallerie")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player cavalry-class >= 4)
	(can-research ri-pikeman)
	(not (research-completed ri-pikeman))
	(unit-type-count-total camel-line <= 3)
=>
	(research ri-pikeman)
	(chat-to-player my-player-number "Entwickle Pikeniere gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player cavalry-class >= 4)
	(can-train-with-escrow spearman-line)
	(research-completed ri-pikeman)
	(unit-type-count-total camel-line <= 3)
=>
	(up-modify-escrow food c:- 35)
	(up-modify-escrow wood c:- 25)
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Speerkaempfer gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player cavalry-class >= 6)
	(can-train spearman-line)
	(research-completed ri-pikeman)
	(not (research-available ri-halberdier))
	(unit-type-count-total spearman-line <= 40)
	(unit-type-count-total camel-line <= 5)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Pikenier gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player cavalry-class >= 6)
	(can-train spearman-line)
	(research-completed ri-pikeman)
	(research-available ri-halberdier)
	(unit-type-count-total spearman-line <= 5)
	(unit-type-count-total camel-line <= 5)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Pikeniere gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player cavalry-class >= 6)
	(can-research ri-halberdier)
	(not (research-completed ri-halberdier))
	(unit-type-count-total camel-line <= 5)
=>
	(research ri-halberdier)
	(chat-to-player my-player-number "Entwickle Hellebardiere gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player cavalry-class >= 6)
	(can-train spearman-line)
	(research-completed ri-halberdier)
	(unit-type-count-total camel-line <= 5)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Hellebardiere gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player camel-line >= 4)
	(or (players-unit-type-count focus-player battle-elephant-line >= 4)
	(or (players-unit-type-count focus-player war-elephant-line >= 4)
	(or (players-unit-type-count focus-player konnik-line >= 4)
	(or (players-unit-type-count focus-player leitis-line >= 4)
	(or (players-unit-type-count focus-player boyar-line >= 4)
	(players-unit-type-count focus-player knight-line >= 4)))))))
	(building-type-count-total barracks < 2)
	(can-build-with-escrow barracks)
	(unit-type-count-total camel-line <= 3)
=>
	(up-modify-escrow wood c:- 175)
	(build barracks)
	(chat-to-player my-player-number "Baue Kaserne, um feindliche Kavallerie zu kontern")
)


(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player camel-line >= 4)
	(or (players-unit-type-count focus-player battle-elephant-line >= 4)
	(or (players-unit-type-count focus-player war-elephant-line >= 4)
	(or (players-unit-type-count focus-player konnik-line >= 4)
	(or (players-unit-type-count focus-player leitis-line >= 4)
	(or (players-unit-type-count focus-player boyar-line >= 4)
	(players-unit-type-count focus-player knight-line >= 4)))))))
	(can-train spearman-line)
	(not (research-completed ri-pikeman))
	(research-available ri-pikeman)
	(unit-type-count-total spearman-line <= 5)
	(unit-type-count-total camel-line <= 3)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Speerkaempfer gegen Kavallerie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player camel-line >= 4)
	(or (players-unit-type-count focus-player battle-elephant-line >= 4)
	(or (players-unit-type-count focus-player war-elephant-line >= 4)
	(or (players-unit-type-count focus-player konnik-line >= 4)
	(or (players-unit-type-count focus-player leitis-line >= 4)
	(or (players-unit-type-count focus-player boyar-line >= 4)
	(players-unit-type-count focus-player knight-line >= 4)))))))
	(can-research ri-pikeman)
	(not (research-completed ri-pikeman))
	(unit-type-count-total camel-line <= 3)
=>
	(research ri-pikeman)
	(chat-to-player my-player-number "Entwickle Pikeniere gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player camel-line >= 4)
	(or (players-unit-type-count focus-player battle-elephant-line >= 4)
	(or (players-unit-type-count focus-player war-elephant-line >= 4)
	(or (players-unit-type-count focus-player konnik-line >= 4)
	(or (players-unit-type-count focus-player leitis-line >= 4)
	(or (players-unit-type-count focus-player boyar-line >= 4)
	(players-unit-type-count focus-player knight-line >= 4)))))))
	(can-train-with-escrow spearman-line)
	(research-completed ri-pikeman)
	(unit-type-count-total camel-line <= 3)
=>
	(up-modify-escrow food c:- 35)
	(up-modify-escrow wood c:- 25)
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Speerkaempfer gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player camel-line >= 6)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6)))))))
	(building-type-count-total barracks < 3)
	(can-build barracks)
	(unit-type-count-total camel-line <= 5)
=>
	(build barracks)
	(chat-to-player my-player-number "Baue Kaserne, um feindliche Kavallerie zu kontern")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player camel-line >= 6)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6)))))))
	(can-train spearman-line)
	(research-completed ri-pikeman)
	(not (research-available ri-halberdier))
	(unit-type-count-total spearman-line <= 40)
	(unit-type-count-total camel-line <= 5)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Pikenier gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player camel-line >= 6)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6)))))))
	(can-train spearman-line)
	(research-completed ri-pikeman)
	(research-available ri-halberdier)
	(unit-type-count-total spearman-line <= 5)
	(unit-type-count-total camel-line <= 5)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Pikeniere gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player camel-line >= 6)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6)))))))
	(can-research ri-halberdier)
	(not (research-completed ri-halberdier))
	(unit-type-count-total camel-line <= 5)
=>
	(research ri-halberdier)
	(chat-to-player my-player-number "Entwickle Hellebardiere gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player camel-line >= 6)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6)))))))
	(can-train spearman-line)
	(research-completed ri-halberdier)
	(unit-type-count-total camel-line <= 5)
=>
	(train spearman-line)
	(chat-to-player my-player-number "Produziere Hellebardiere gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 4)
	(or (players-unit-type-count focus-player war-elephant-line >= 4)
	(or (players-unit-type-count focus-player konnik-line >= 4)
	(or (players-unit-type-count focus-player cataphract-line >= 4)
	(or (players-unit-type-count focus-player war-wagon-line >= 4)
	(or (players-unit-type-count focus-player leitis-line >= 4)
	(or (players-unit-type-count focus-player boyar-line >= 4)
	(players-unit-type-count focus-player knight-line >= 4))))))))
	(building-type-count-total stable < 3)
	(unit-available camel-line)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
	(chat-to-player my-player-number "Baue Stall, um feindliche Kavallerie zu kontern")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 4)
	(or (players-unit-type-count focus-player war-elephant-line >= 4)
	(or (players-unit-type-count focus-player konnik-line >= 4)
	(or (players-unit-type-count focus-player cataphract-line >= 4)
	(or (players-unit-type-count focus-player war-wagon-line >= 4)
	(or (players-unit-type-count focus-player leitis-line >= 4)
	(or (players-unit-type-count focus-player boyar-line >= 4)
	(players-unit-type-count focus-player knight-line >= 4))))))))
	(can-train-with-escrow camel-line)
	(unit-type-count-total spearman-line <= 3)
	; (or (civilian-population g:< c-villager-goal)
	; (up-research-status c: imperial-age == research-pending))
=>
	(up-modify-escrow food c:- 55)
	(up-modify-escrow gold c:- 60)
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6))))))))
	(building-type-count-total stable < 4)
	(unit-type-count-total spearman-line <= 5)
	(can-build stable)
	(unit-available camel-line)
=>
	(build stable)
	(chat-to-player my-player-number "Baue Stall, um feindliche Kavallerie zu kontern")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6))))))))
	(can-train camel-line)
	(research-available ri-heavy-camel)
	(not (research-completed ri-heavy-camel))
	(unit-type-count-total camel-line <= 3)
	(unit-type-count-total spearman-line <= 5)
=>
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6))))))))
	(can-research ri-heavy-camel)
	(not (research-completed ri-heavy-camel))
	(unit-type-count-total spearman-line <= 5)
=>
	(research ri-heavy-camel)
	(chat-to-player my-player-number "Entwickle Schwere Kamelreiter gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6))))))))
	(can-train camel-line)
	(research-completed ri-heavy-camel)
	(not (research-available ri-imperial-camel-rider))
	(unit-type-count-total spearman-line <= 5)
=>
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6))))))))
	(can-train camel-line)
	(research-completed ri-heavy-camel)
	(research-available ri-imperial-camel-rider)
	(unit-type-count-total camel-line <= 10)
	(unit-type-count-total spearman-line <= 5)
=>
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player battle-elephant-line >= 6)
	(or (players-unit-type-count focus-player war-elephant-line >= 6)
	(or (players-unit-type-count focus-player konnik-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player leitis-line >= 6)
	(or (players-unit-type-count focus-player boyar-line >= 6)
	(players-unit-type-count focus-player knight-line >= 6))))))))
	(can-train camel-line)
	(research-completed ri-imperial-camel-rider)
	(unit-type-count-total spearman-line <= 5)
=>
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Kavallerie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player camel-line >= 5)
	(or (players-unit-type-count focus-player battle-elephant-line >= 5)
	(or (players-unit-type-count focus-player war-elephant-line >= 5)
	(or (players-unit-type-count focus-player konnik-line >= 5)
	(or (players-unit-type-count focus-player cataphract-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player leitis-line >= 5)
	(or (players-unit-type-count focus-player boyar-line >= 5)
	(players-unit-type-count focus-player knight-line >= 5)))))))))
	(building-type-count-total monastery == 0)
	(can-build-with-escrow monastery)
=>
	(up-modify-escrow wood c:- 175)
	(build monastery)
	(chat-to-player my-player-number "Baue Kloster, um feindliche Kavallerie zu kontern")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player camel-line >= 12)
	(or (players-unit-type-count focus-player battle-elephant-line >= 12)
	(or (players-unit-type-count focus-player war-elephant-line >= 12)
	(or (players-unit-type-count focus-player konnik-line >= 12)
	(or (players-unit-type-count focus-player cataphract-line >= 12)
	(or (players-unit-type-count focus-player war-wagon-line >= 12)
	(or (players-unit-type-count focus-player leitis-line >= 12)
	(or (players-unit-type-count focus-player boyar-line >= 12)
	(players-unit-type-count focus-player knight-line >= 12)))))))))
	(building-type-count-total monastery < 2)
	(can-build-with-escrow monastery)
=>
	(up-modify-escrow wood c:- 175)
	(build monastery)
	(chat-to-player my-player-number "Baue Kloster, um feindliche Kavallerie zu kontern")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player camel-line >= 5)
	(or (players-unit-type-count focus-player battle-elephant-line >= 5)
	(or (players-unit-type-count focus-player war-elephant-line >= 5)
	(or (players-unit-type-count focus-player konnik-line >= 5)
	(or (players-unit-type-count focus-player cataphract-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player leitis-line >= 5)
	(or (players-unit-type-count focus-player boyar-line >= 5)
	(players-unit-type-count focus-player knight-line >= 5)))))))))
	(can-train monk)
=>
	(train monk)
	(chat-to-player my-player-number "Produziere Moenche gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-train scout-cavalry-line)
	(research-available ri-light-cavalry)
	(unit-type-count-total scout-cavalry-line < 8)
=>
	(train scout-cavalry-line)
	(chat-to-player my-player-number "Produziere Scouts gegen Moenche")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-train scout-cavalry-line)
	(not (research-available ri-light-cavalry))
	(unit-type-count-total scout-cavalry-line < 10)
=>
	(train scout-cavalry-line)
	(chat-to-player my-player-number "Produziere Scouts gegen Moenche")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-train scout-cavalry-line)
	(research-completed ri-light-cavalry)
=>
	(train scout-cavalry-line)
	(chat-to-player my-player-number "Produziere Scouts gegen Moenche")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-train scout-cavalry-line)
	(unit-type-count-total scout-cavalry-line < 10)
=>
	(train scout-cavalry-line)
	(chat-to-player my-player-number "Produziere Scouts gegen Moenche")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-train eagle-warrior-line)
	(research-completed ri-eagle-warrior)
	(unit-type-count-total eagle-warrior-line < 20)
=>
	(train eagle-warrior-line)
	(chat-to-player my-player-number "Produziere Adlerkrieger gegen Moenche")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-research ri-eagle-warrior)
	(not (research-completed ri-eagle-warrior))
=>
	(research ri-eagle-warrior)
	(chat-to-player my-player-number "Entwickle Adlerkrieger gegen Moenche")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player monk >= 3)
	(can-train eagle-warrior-line)
	(research-completed ri-eagle-warrior)
	(unit-type-count-total eagle-warrior-line < 15)
=>
	(train eagle-warrior-line)
	(chat-to-player my-player-number "Produziere Adlerkrieger gegen Moenche")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player archer-line >= 5)
	(or (players-unit-type-count focus-player longbowman-line >= 5)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 5)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 5)
	(or (players-unit-type-count focus-player plumed-archer-line >= 5)
	(players-unit-type-count focus-player rattan-archer-line >= 5))))))
	(can-train skirmisher-line)
	(research-completed ri-elite-skirmisher)
=>
	(train skirmisher-line)
	(chat-to-player my-player-number "Produziere Plaenkler gegen Bogenschuetzen")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(or (players-unit-type-count focus-player elephant-archer-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 5))))))
	(can-research-with-escrow ri-elite-skirmisher)
	(not (research-completed ri-elite-skirmisher))
	(unit-type-count skirmisher-line > 3)
=>
	(up-modify-escrow wood c:- 230)
	(up-modify-escrow gold c:- 130)
	(research ri-elite-skirmisher)
	(chat-to-player my-player-number "Entwickle Elite-Plaenkler gegen Ber. Bogenschuetzen")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 5)
	(or (players-unit-type-count focus-player mangudai-line >= 5)
	(or (players-unit-type-count focus-player war-wagon-line >= 5)
	(or (players-unit-type-count focus-player kipchak-set >= 5)
	(or (players-unit-type-count focus-player elephant-archer-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 5))))))
	(can-train-with-escrow skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(not (goal gl-food-saving 23))
=>
	(up-modify-escrow food c:- 25)
	(up-modify-escrow wood c:- 35)
	(train skirmisher-line)
	(chat-to-player my-player-number "Produziere Plaenkler gegen Ber. Bogenschuetzen")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player archer-line >= 6)
	(can-train genitour-line)
	(research-completed ri-elite-genitour)
=>
	(train genitour-line)
	(chat-to-player my-player-number "Produziere Ginete gegen Bogenschuetzen")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player archer-line >= 6)
	(can-train-with-escrow eagle-warrior-line)
	(research-completed ri-eagle-warrior)
=>
	(up-modify-escrow food c:- 20)
	(up-modify-escrow gold c:- 50)
	(train eagle-warrior-line)
	(chat-to-player my-player-number "Produziere Adlerkrieger gegen Bogenschuetzen")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player archer-line >= 6)
	(can-train eagle-warrior-line)
	(research-completed ri-elite-eagle-warrior)
=>
	(train eagle-warrior-line)
	(chat-to-player my-player-number "Produziere Adlerkrieger gegen Bogenschuetzen")
)

(defrule
	(or (players-unit-type-count focus-player militiaman-line >= 6)
	(or (players-unit-type-count focus-player archery-cannon-class >= 6)
	(or (players-unit-type-count focus-player jaguar-man-line >= 6)
	(or (players-unit-type-count focus-player cataphract-line >= 6)
	(or (players-unit-type-count focus-player woad-raider-line >= 6)
	(or (players-unit-type-count focus-player shotel-line >= 6)
	(players-unit-type-count focus-player kamayuk-line >= 6)
	))))))
=>
	(set-goal enemy-infantry-goal 1)
)	

(defrule	
	(or (players-unit-type-count focus-player samurai-line >= 6)
	(or (players-unit-type-count focus-player karambit-warrior-line >= 6)
	(or (players-unit-type-count focus-player gbeto-line >= 6)
	(or (players-unit-type-count focus-player obuch-line >= 6)
	(or (players-unit-type-count focus-player serjeant-line >= 6)
	(or (players-unit-type-count focus-player teutonic-knight-line >= 6)
	(players-unit-type-count focus-player berserk-line >= 6)
	))))))
=>
	(set-goal enemy-infantry-goal 1)
)

(defrule
	(or (players-unit-type-count focus-player militiaman-line < 6)
	(or (players-unit-type-count focus-player archery-cannon-class < 6)
	(or (players-unit-type-count focus-player jaguar-man-line < 6)
	(or (players-unit-type-count focus-player cataphract-line < 6)
	(or (players-unit-type-count focus-player woad-raider-line < 6)
	(or (players-unit-type-count focus-player shotel-line < 6)
	(players-unit-type-count focus-player kamayuk-line < 6)
	))))))
=>
	(set-goal enemy-infantry-goal 0)
)	

(defrule	
	(or (players-unit-type-count focus-player samurai-line < 6)
	(or (players-unit-type-count focus-player karambit-warrior-line < 6)
	(or (players-unit-type-count focus-player gbeto-line < 6)
	(or (players-unit-type-count focus-player obuch-line < 6)
	(or (players-unit-type-count focus-player serjeant-line < 6)
	(or (players-unit-type-count focus-player teutonic-knight-line < 6)
	(players-unit-type-count focus-player berserk-line < 6)
	))))))
=>
	(set-goal enemy-infantry-goal 0)
)

(defrule
	(current-age == castle-age)
	(goal enemy-infantry-goal 1)
	(not (research-completed ri-crossbow))
	(can-research ri-crossbow)
=>
	(research ri-crossbow)
	(chat-to-player my-player-number "Entwickle Armbrustschuetzen gegen feindliche Infanterie")
)

(defrule
	(current-age == castle-age)
	(goal enemy-infantry-goal 1)
	(research-completed ri-crossbow)
	(research-completed ri-thumb-ring)
	(can-train archer-line)
=>
	(train archer-line)
	(chat-to-player my-player-number "Produziere Bogenschuetzen gegen feindliche Infanterie")
)

(defrule
	(current-age == imperial-age)
	(goal enemy-infantry-goal 1)
	(not (research-completed ri-arbalest))
	(can-research ri-arbalest)
=>
	(research ri-arbalest)
	(chat-to-player my-player-number "Entwickle Arbalestenschuetzen gegen feindliche Infanterie")
)

(defrule
	(current-age == imperial-age)
	(goal enemy-infantry-goal 1)
	(can-train archer-line)
	(research-completed ri-arbalest)
=>
	(train archer-line)
	(chat-to-player my-player-number "Produziere Bogenschuetzen gegen feindliche Infanterie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 6)
	(or (players-unit-type-count focus-player mangudai-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player kipchak-set >= 6)
	(or (players-unit-type-count focus-player elephant-archer-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 6))))))
	(can-research ri-elite-genitour)
=>
	(research ri-elite-genitour)
	(chat-to-player my-player-number "Entwickle Elite-Ginete gegen Ber. Bogenschuetzen")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 6)
	(or (players-unit-type-count focus-player mangudai-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player kipchak-set >= 6)
	(or (players-unit-type-count focus-player elephant-archer-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 6))))))
	(can-train genitour-line)
	(research-completed ri-elite-genitour)
=>
	(train genitour-line)
	(chat-to-player my-player-number "Produziere Ginete gegen Ber. Bogenschuetzen")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 6)
	(or (players-unit-type-count focus-player mangudai-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player kipchak-set >= 6)
	(or (players-unit-type-count focus-player skirmisher-line >= 6)
	(or (players-unit-type-count focus-player archer-line >= 6)
	(players-unit-type-count focus-player camel-archer-line >= 6)))))))
	(can-build-with-escrow siege-workshop)
	(building-type-count-total siege-workshop == 0)
=>
	(up-modify-escrow wood c:- 200)
	(build siege-workshop)
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 6)
	(or (players-unit-type-count focus-player mangudai-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player kipchak-set >= 6)
	(players-unit-type-count focus-player camel-archer-line >= 6)))))
	(can-train scorpion-line)
	(unit-type-count scorpion-line < 4)
=>
	(train scorpion-line)
	(chat-to-player my-player-number "Produziere Skorpione gegen Schuetzeneinheiten")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player archer-line >= 6)
	(or (players-unit-type-count focus-player longbowman-line >= 6)
	(or (players-unit-type-count focus-player chu-ko-nu-line >= 6)
	(or (players-unit-type-count focus-player genoese-crossbowman-line >= 6)
	(or (players-unit-type-count focus-player plumed-archer-line >= 6)
	(players-unit-type-count focus-player rattan-archer-line >= 6))))))
	(can-train scorpion-line)
	(unit-type-count scorpion-line < 4)
=>
	(train scorpion-line)
	(chat-to-player my-player-number "Produziere Skorpione gegen Schuetzeneinheiten")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player skirmisher-line >= 6)
	(players-unit-type-count focus-player skirmisher-line < 18)
	(can-train scorpion-line)
	(unit-type-count scorpion-line < 4)
=>
	(train scorpion-line)
	(chat-to-player my-player-number "Produziere Skorpione gegen Plaenkler")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(or(players-unit-type-count focus-player huskarl-line >= 6)
	(players-unit-type-count focus-player skirmisher-line >= 6)))
	(can-build-with-escrow stable)
	(building-type-count-total stable == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)
	
(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player skirmisher-line >= 6)
	(can-train knight-line)
=>
	(train knight-line)
	(chat-to-player my-player-number "Produziere Ritter gegen Plaenkler")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player skirmisher-line >= 6)
	(can-train knight-line)
=>
	(train knight-line)
	(chat-to-player my-player-number "Produziere Ritter gegen Plaenkler")
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player infantry-class >= 8)
	(can-train hand-cannoneer)
	(unit-type-count-total janissary-line == 0)
=>
	(train hand-cannoneer)
	(chat-to-player my-player-number "Produziere Handkanoniere gegen Infanterie")
)

(defrule
	(current-age >= castle-age)
	(building-type-count university > 0)
	(research-available ri-chemistry)
	(can-train ri-chemistry)
	(players-unit-type-count focus-player infantry-class >= 8)
=>
	(research ri-chemistry)
	(chat-to-player my-player-number "Entwickle Chemie fuer Handkanoniere")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 6)
	(or (players-unit-type-count focus-player mangudai-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player kipchak-set >= 6)
	(or (players-unit-type-count focus-player elephant-archer-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 6))))))
	(can-train-with-escrow camel-line)
	; (or (civilian-population g:< c-villager-goal)
	; (up-research-status c: imperial-age == research-pending))
=>
	(up-modify-escrow food c:- 55)
	(up-modify-escrow gold c:- 60)
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Ber. Bogenschuetzen")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player cavalry-archer-line >= 6)
	(or (players-unit-type-count focus-player mangudai-line >= 6)
	(or (players-unit-type-count focus-player war-wagon-line >= 6)
	(or (players-unit-type-count focus-player kipchak-set >= 6)
	(or (players-unit-type-count focus-player elephant-archer-line >= 5)
	(players-unit-type-count focus-player camel-archer-line >= 6))))))
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
	(chat-to-player my-player-number "Produziere Kamelreiter gegen Ber. Bogenschuetzen")
)

(defrule
	(current-age == castle-age)
	(can-train slinger)
	(players-unit-type-count focus-player infantry-class >= 6)
	; (or (civilian-population g:< c-villager-goal)
	; (up-research-status c: imperial-age == research-pending))
=>
	(train slinger)
	(chat-to-player my-player-number "Produziere Schleuderer gegen Infanterie")
)

(defrule
	(current-age == imperial-age)
	(can-train slinger)
	(players-unit-type-count focus-player infantry-class >= 6)
=>
	(train slinger)
	(chat-to-player my-player-number "Produziere Schleuderer gegen Infanterie")
)

(defrule
	(current-age == castle-age)
	(can-train throwing-axeman-line)
	(players-unit-type-count focus-player infantry-class >= 6)
	; (or (civilian-population g:< c-villager-goal)
	; (up-research-status c: imperial-age == research-pending))
=>
	(train throwing-axeman-line)
	(chat-to-player my-player-number "Produziere Axtwerfer gegen Infanterie")
)

(defrule
	(current-age == imperial-age)
	(can-research ri-elite-throwing-axeman)
	(players-unit-type-count focus-player infantry-class >= 6)
	(unit-type-count-total throwing-axeman-line >= 3)
=>
	(research ri-elite-throwing-axeman)
	(chat-to-player my-player-number "Entwickle Elite-Axtwerfer gegen Infanterie")
)

(defrule
	(current-age == imperial-age)
	(can-train throwing-axeman-line)
	(not(research-completed ri-elite-throwing-axeman))
	(players-unit-type-count focus-player infantry-class >= 6)
	(unit-type-count-total throwing-axeman-line < 5)
=>
	(train throwing-axeman-line)
	(chat-to-player my-player-number "Produziere Axtwerfer gegen Infanterie")
)

(defrule
	(current-age == imperial-age)
	(can-train throwing-axeman-line)
	(research-completed ri-elite-throwing-axeman)
	(players-unit-type-count focus-player infantry-class >= 6)
=>
	(train throwing-axeman-line)
	(chat-to-player my-player-number "Produziere Axtwerfer gegen Infanterie")
)

(defrule
	(current-age == castle-age)
	(can-train mameluke-line)
	(or (players-unit-type-count focus-player cavalry-class >= 6)
	(players-unit-type-count focus-player cavalry-archer-class >= 6))
=>
	(train mameluke-line)
	(chat-to-player my-player-number "Produziere Mameluken gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(can-research ri-elite-mameluke)
	(or (players-unit-type-count focus-player cavalry-class >= 6)
	(players-unit-type-count focus-player cavalry-archer-class >= 6))
	(unit-type-count-total mameluke-line >= 3)
=>
	(research ri-elite-mameluke)
	(chat-to-player my-player-number "Entwickle Elite-Mameluken gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(can-train mameluke-line)
	(not(research-completed ri-elite-mameluke))
	(or (players-unit-type-count focus-player cavalry-class >= 6)
	(players-unit-type-count focus-player cavalry-archer-class >= 6))
	(unit-type-count-total mameluke-line < 5)
=>
	(train mameluke-line)
	(chat-to-player my-player-number "Produziere Mameluken gegen Kavallerie")
)

(defrule
	(current-age == imperial-age)
	(can-train mameluke-line)
	(research-completed ri-elite-mameluke)
	(or (players-unit-type-count focus-player cavalry-class >= 6)
	(players-unit-type-count focus-player cavalry-archer-class >= 6))
=>
	(train mameluke-line)
	(chat-to-player my-player-number "Produziere Mameluken gegen Kavallerie")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-train knight-line)
=>
	(train knight-line)
	(chat-to-player my-player-number "Produziere Ritter gegen schwere Infanterie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(research-completed ri-cavalier)
	(can-train knight-line)
=>
	(train knight-line)
	(chat-to-player my-player-number "Produziere Ritter gegen schwere Infanterie")
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player siege-weapon-class >= 4)
	(can-train knight-line)
=>
	(train knight-line)
	(chat-to-player my-player-number "Produziere Ritter gegen Belagerungswaffen")
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player siege-weapon-class >= 4)
	(research-completed ri-cavalier)
	(can-train knight-line)
=>
	(train knight-line)
	(chat-to-player my-player-number "Produziere Ritter gegen Belagerungswaffen")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-build-with-escrow barracks)
	(building-type-count-total barracks < 3)
=>
	(up-modify-escrow wood c:- 175)
	(build barracks)
	(chat-to-player my-player-number "Entwickle Schwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
	(chat-to-player my-player-number "Entwickle Schwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
	(chat-to-player my-player-number "Entwickle Langschwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
	(chat-to-player my-player-number "Entwickle Zweihandschwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-research-with-escrow ri-champion)
=>
	(up-modify-escrow food c:- 750)
	(up-modify-escrow gold c:- 350)
	(research ri-champion)
	(chat-to-player my-player-number "Entwickle Elitekaempfer gegen schwere Infanterie")
)

(defrule
	(current-age >= castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(can-research ri-supplies)
=>
	(research ri-supplies)
	(chat-to-player my-player-number "Entwickle Versorgung gegen schwere Infanterie")
)

(defrule
	(current-age == castle-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
	(chat-to-player my-player-number "Produziere Langschwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(research-available ri-two-handed-swordsman)
	(can-train militiaman-line)
	(unit-type-count militiaman-line < 5)
=>
	(train militiaman-line)
	(chat-to-player my-player-number "Produziere Zweihandschwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(not (research-available ri-champion))
	(research-completed ri-two-handed-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
	(chat-to-player my-player-number "Produziere Zweihandschwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(research-available ri-champion)
	(research-completed ri-two-handed-swordsman)
	(can-train militiaman-line)
	(unit-type-count militiaman-line < 5)
=>
	(train militiaman-line)
	(chat-to-player my-player-number "Produziere Zweihandschwertkaempfer gegen schwere Infanterie")
)

(defrule
	(current-age == imperial-age)
	(or (players-unit-type-count focus-player eagle-warrior-line >= 6)
	(players-unit-type-count focus-player huskarl-line >= 6))
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
	(chat-to-player my-player-number "Produziere Elitekaempfer gegen schwere Infanterie")
)

;unique unit counters

;hussite-wagon

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(research-available ri-redemption)
	(can-build monastery)
	(building-type-count-total monastery < 2)
=>
	(build monastery)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(research-available ri-redemption)
	(can-research ri-redemption)
	(building-type-count-total monastery > 0)
=>
	(research ri-redemption)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(research-completed ri-redemption)
	(can-train monk)
	(building-type-count-total monastery > 0)
=>
	(train monk)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(not (research-available ri-redemption))
	(can-build-with-escrow siege-workshop)
	(building-type-count-total siege-workshop < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build siege-workshop)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(can-train mangonel-line)
	(building-type-count-total siege-workshop > 0)
=>
	(train mangonel-line)
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(not (unit-available bombard-cannon-line))
	(can-train mangonel-line)
	(building-type-count-total siege-workshop > 0)
=>
	(train mangonel-line)
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(unit-available bombard-cannon-line)
	(can-research-with-escrow ri-chemistry)
	(building-type-count-total university > 0)
=>
	(up-modify-escrow food c:- 300)
	(up-modify-escrow gold c:- 200)
	(research ri-chemistry)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player hussite-wagon-line >= 6)
	(not (civ-selected japanese))
	(can-train bombard-cannon-line)
	(building-type-count-total siege-workshop > 0)
=>
	(train bombard-cannon-line)
)

;coustillier

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player coustillier-line >= 6)
	(can-build monastery)
	(building-type-count-total monastery < 2)
=>
	(build monastery)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player coustillier-line >= 6)
	(can-train monk)
	(building-type-count-total monastery > 0)
=>
	(train monk)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player coustillier-line >= 6)
	(unit-available camel-line)
	(can-build-with-escrow stable)
	(building-type-count-total stable < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player coustillier-line >= 6)
	(can-train camel-line)
	(building-type-count-total stable > 0)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player coustillier-line >= 6)
	(research-available ri-heavy-camel)
	(can-research ri-heavy-camel)
	(building-type-count-total stable > 0)
=>
	(research ri-heavy-camel)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player coustillier-line >= 6)
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
)

;arambai

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-build monastery)
	(building-type-count-total monastery < 2)
=>
	(build monastery)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-train monk)
	(building-type-count-total monastery > 0)
=>
	(train monk)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(research-available ri-crossbow)
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-research ri-fletching)
=>
	(research ri-fletching)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-research ri-crossbow)
=>
	(research ri-crossbow)
)

(defrule
	(players-unit-type-count focus-player arambai-line >= 6)
	(or (and (current-age == castle-age)
			(not (research-available ri-crossbow)))
		(and (current-age == imperial-age)
			(not (research-available ri-arbalest))))
	(can-research-with-escrow ri-elite-skirmisher)
=>
	(up-modify-escrow wood c:- 230)
	(up-modify-escrow gold c:- 130)
	(research ri-elite-skirmisher)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-train archer-line)
	(research-completed ri-crossbow)
	(research-completed ri-bodkin-arrow)
	(building-type-count-total archery-range > 0)
=>
	(train archer-line)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-train-with-escrow skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(research-completed ri-bodkin-arrow)
	(building-type-count-total archery-range > 0)
	(not (goal gl-food-saving 23))
=>
	(up-modify-escrow food c:- 25)
	(up-modify-escrow wood c:- 35)
	(train skirmisher-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(research-available ri-arbalest)
	(can-research ri-arbalest)
	(building-type-count-total archery-range > 0)
=>
	(research ri-arbalest)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(research-completed ri-arbalest)
	(research-completed ri-bracer)
	(can-train archer-line)
=>
	(train archer-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player arambai-line >= 6)
	(can-train skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(building-type-count-total archery-range > 0)
=>
	(train skirmisher-line)
)

;ghulam

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(building-available stable)
	(can-build-with-escrow stable)
	(building-type-count-total stable < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-train knight-line)
	(building-type-count-total stable > 0)
=>
	(train knight-line)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(not (unit-available knight-line))
	(can-train camel-line)
	(building-type-count-total stable > 0)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(not (research-available ri-cavalier))
	(research-available ri-heavy-camel)
	(can-research ri-heavy-camel)
	(building-type-count-total stable > 0)
=>
	(research ri-heavy-camel)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(research-available ri-cavalier)
	(can-research ri-cavalier)
	(building-type-count-total stable > 0)
=>
	(research ri-cavalier)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-train knight-line)
	(research-completed ri-cavalier)
=>
	(train knight-line)
)

(defrule
	(current-age >= castle-age)
	(civ-selected bohemians)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(current-age >= castle-age)
	(civ-selected bohemians)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-research-with-escrow ri-chemistry)
=>
	(up-modify-escrow food c:- 300)
	(up-modify-escrow gold c:- 200)
	(research ri-chemistry)
)

(defrule
	(current-age >= castle-age)
	(civ-selected bohemians)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ghulam-line >= 6)
	(can-train hand-cannoneer)
=>
	(train hand-cannoneer)
)

;ballista-elephant

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(building-available stable)
	(can-build-with-escrow stable)
	(building-type-count-total stable < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(can-train knight-line)
	(building-type-count-total stable > 0)
=>
	(train knight-line)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(not (unit-available knight-line))
	(can-train camel-line)
	(building-type-count-total stable > 0)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(not (research-available ri-cavalier))
	(research-available ri-heavy-camel)
	(can-research ri-heavy-camel)
	(building-type-count-total stable > 0)
=>
	(research ri-heavy-camel)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(research-available ri-cavalier)
	(can-research ri-cavalier)
	(building-type-count-total stable > 0)
=>
	(research ri-cavalier)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ballista-elephant-line >= 6)
	(can-train knight-line)
	(research-completed ri-cavalier)
=>
	(train knight-line)
)

;organ-gun

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(building-available stable)
	(can-build-with-escrow stable)
	(building-type-count-total stable < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(can-train knight-line)
	(building-type-count-total stable > 0)
=>
	(train knight-line)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(not (unit-available knight-line))
	(can-train camel-line)
	(building-type-count-total stable > 0)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(not (research-available ri-cavalier))
	(research-available ri-heavy-camel)
	(can-research ri-heavy-camel)
	(building-type-count-total stable > 0)
=>
	(research ri-heavy-camel)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(research-available ri-cavalier)
	(can-research ri-cavalier)
	(building-type-count-total stable > 0)
=>
	(research ri-cavalier)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player organ-gun-line >= 6)
	(can-train knight-line)
	(research-completed ri-cavalier)
=>
	(train knight-line)
)

;conquistador

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player conquistador-line >= 6)
	(can-build monastery)
	(building-type-count-total monastery < 2)
=>
	(build monastery)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player conquistador-line >= 6)
	(can-train monk)
	(building-type-count-total monastery > 0)
=>
	(train monk)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player conquistador-line >= 6)
	(research-available ri-crossbow)
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player conquistador-line >= 6)
	(can-research ri-fletching)
=>
	(research ri-fletching)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player conquistador-line >= 6)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(players-unit-type-count focus-player conquistador-line >= 6)
	(current-age >= castle-age)
	(can-research-with-escrow ri-elite-skirmisher)
=>
	(up-modify-escrow wood c:- 230)
	(up-modify-escrow gold c:- 130)
	(research ri-elite-skirmisher)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player conquistador-line >= 6)
	(can-train-with-escrow skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(research-completed ri-bodkin-arrow)
	(building-type-count-total archery-range > 0)
	(not (goal gl-food-saving 23))
=>
	(up-modify-escrow food c:- 25)
	(up-modify-escrow wood c:- 35)
	(train skirmisher-line)
)

;ratha

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(research-available ri-crossbow)
	(can-build-with-escrow archery-range)
	(building-type-count-total archery-range < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(can-research ri-fletching)
	(not (unit-available camel-line))
=>
	(research ri-fletching)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(can-research ri-bodkin-arrow)
	(not (unit-available camel-line))
=>
	(research ri-bodkin-arrow)
)

(defrule
	(players-unit-type-count focus-player ratha-set >= 6)
	(current-age >= castle-age)
	(can-research-with-escrow ri-elite-skirmisher)
	(not (unit-available camel-line))
=>
	(up-modify-escrow wood c:- 230)
	(up-modify-escrow gold c:- 130)
	(research ri-elite-skirmisher)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(can-train-with-escrow skirmisher-line)
	(research-completed ri-elite-skirmisher)
	(research-completed ri-bodkin-arrow)
	(building-type-count-total archery-range > 0)
	(not (unit-available camel-line))
	(not (goal gl-food-saving 23))
=>
	(up-modify-escrow food c:- 25)
	(up-modify-escrow wood c:- 35)
	(train skirmisher-line)
)

(defrule
	(current-age >= castle-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(building-available stable)
	(can-build-with-escrow stable)
	(building-type-count-total stable < 2)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(not (unit-available knight-line))
	(can-train camel-line)
	(building-type-count-total stable > 0)
=>
	(train camel-line)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(not (research-available ri-cavalier))
	(research-available ri-heavy-camel)
	(can-research ri-heavy-camel)
	(building-type-count-total stable > 0)
=>
	(research ri-heavy-camel)
)

(defrule
	(current-age >= imperial-age)
	(players-unit-type-count focus-player ratha-set >= 6)
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
)

;endregion

;region Walling in watch-towers (To-Do) ============================


(defrule
	(goal strategy-goal sg-towerrush)
	(building-type-count-total watch-tower-line < 1)
	(current-age == feudal-age)
=>
	(set-goal gl-wall-tower 1) ;activate walling our towers
	(chat-to-player my-player-number "Activate tower-walling")
	(disable-self)
)

(defrule
	(or (not (goal strategy-goal sg-towerrush))
	(or (goal gl-wall-tower 0)
	(building-type-count watch-tower-line < 1)))
=>
	(up-jump-rule 22)
)

;start

(defrule
	(goal temp-goal-one 0) ;one of the 8 potential tiles next of a tower
=>
	(set-goal gl-loop-tower 0) ;set loop to 0 so we can start looping through our towers
	;(chat-to-player my-player-number "Start looping through our towers")
	(disable-self)
)
	
(defrule
	(goal temp-goal-one 0)
	;(up-pending-objects c: palisade-wall < 1))
=>
	(set-goal temp-goal-one 1)
	;(set-goal temp-counter-goal 1)
	(up-full-reset-search)
	(up-find-local c: watch-tower c: 20)
	;(chat-to-player my-player-number "Searching for towers")
)

; (defrule
	; (up-set-target-object search-local g: gl-loop-tower)
; =>
	; (up-get-point position-object gl-temp-x)
; )

; (defrule
    ; (stance-toward focus-player enemy)    ;we are looking for enemy units only
; =>
    ; (up-full-reset-search)
    ; (up-set-target-point gl-temp-x)
    ; (up-filter-distance c: -1 c: gl-tc-search-distance)    ;not too far from the tc 
    ; (up-find-remote c: all-units-class c: 1)
    ; (up-get-search-state gl-local-total)    ;count how many were found
    ; (up-modify-goal TowerGarrisonGoal g:= gl-remote-total)    ;save the number in a goal
; )

; (defrule    ;repeat the search if no enemy units were found
    ; (up-compare-goal TowerGarrisonGoal < 1)    ;no units found
    ; (player-valid focus-player)    ;don't search if focus-player isn't in the game
; =>
    ; (up-modify-sn sn-focus-player-number c:+ 1)    ;set to the next-highest player
    ; (up-jump-rule -2)    ;jump back to the searching rule
; )

; (defrule    ;if units found nearby, start the garrison process
    ; (goal gl-garrison-tower -1)
    ; (up-compare-goal TowerGarrisonGoal >= 1)
; =>    
    ; (chat-to-player my-player-number "Enemy Unit Nearby!")
    ; (set-goal gl-garrison-tower 0)
; )

; (defrule    ;search for closest vills to the tc
    ; (goal gl-garrison-tower 0)
; =>
    ; (up-full-reset-search)
    ; (up-set-target-point gl-temp-x)
    ; (up-filter-distance c: -1 c: 6)    ;only villagers nearby
    ; (up-find-local c: villager-class c: 5)
    ; (up-clean-search search-local object-data-distance search-order-desc)    ;order by distance to get closest
    ; (up-remove-objects search-local -1 > gl-garrison-count)
    ; (up-get-search-state gl-local-total)
; )

; (defrule    ;garrison the villagers found above if there were some
    ; (goal gl-garrison-tower 0)
    ; (up-compare-goal gl-local-total >= MinVillsToGarrison)
; =>
    ; (set-strategic-number sn-focus-player-number my-player-number)
    ; (up-find-remote c: watch-tower c: 1)    ;put in the remote list for up-target-objects command
    ; (up-target-objects 0 action-garrison -1 -1)    ;garrison command
    ; (up-chat-data-to-player my-player-number "Garrisoning %d vills" g: gl-local-total)
    ; (set-goal gl-garrison-tower 1)
; )

; ;WWWWWWWWWWWWWWWWWW UNGARRISON
; (defrule
    ; (goal gl-garrison-tower 1)
    ; (up-compare-goal TowerGarrisonGoal < 1)    ;search at the beginning didn't find anything
; =>
    ; (up-ungarrison c: watch-tower)
    ; (chat-to-player my-player-number "Release vills")
    ; (set-goal gl-garrison-tower -1)    ;reset for next time
; )

;todo: removing towers in our search that are in our base for defense

; (defrule
	; (up-set-target-object search-local c: 0) 
	; (building-type-count-total palisade-wall >= 1)
; =>
	; (up-get-point position-object watch-tower-point-x)
	; (up-set-target-point watch-tower-point-x)
	; (up-full-reset-search)
	; (up-filter-distance c: -1 c: 2)
	; (up-find-local c: palisade-wall c: 8)
; )

(defrule
	(up-set-target-object search-local g: gl-loop-tower)
=>
	(up-get-point position-object gl-temp-x)
)

(defrule
	(up-point-contains gl-temp-x c: villager-class)
	(up-point-contains gl-temp-x c: tower-class)
=>
	(up-modify-goal gl-temp-x c:- 1)
	(chat-to-player my-player-number "Villager is stuck in tower")
)	

(defrule	
	(up-point-contains gl-temp-x c: palisade-wall)
=>
	(up-full-reset-search)
	(up-get-point-contains gl-temp-x gl-wall-id c: palisade-wall)
	(up-add-object-by-id search-local g: gl-wall-id)
	(up-target-objects 1 action-delete -1 -1)
	(chat-to-player my-player-number "Vil stuck: Deleting a wall-piece")
	(up-modify-goal gl-temp-x c:+ 2)
	(up-jump-rule -1)
)

(defrule
	(up-set-target-object search-local g: gl-loop-tower)
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 1)
	;(not (up-point-contains watch-tower-point-x c: palisade-wall))
=>
	(up-get-point position-object watch-tower-point-x)
	(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-x c:- 1)
	(up-modify-goal watch-tower-point-y c:- 1)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-towers g:= gl-local-total)
	;(up-chat-data-to-player my-player-number "Number of towers: %d" g: gl-towers)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 2)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-x c:+ 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 3)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-x c:+ 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 4)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-y c:+ 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 5)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-y c:+ 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 6)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-x c:- 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 7)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-x c:- 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 8)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-y c:- 1)
)

(defrule
	(up-pending-objects c: palisade-wall < 1)
	(goal temp-goal-one 9)
=>
	;(up-get-point position-object watch-tower-point-x)
	;(up-set-target-point watch-tower-point-x)
	(up-modify-goal watch-tower-point-y c:- 1)
)

(defrule ;build wall, wall-counter +1
	(up-can-build-line 0 watch-tower-point-x c: palisade-wall)
	(up-pending-objects c: palisade-wall < 1)
	(up-compare-goal gl-wall-counter < 9)
=>
	(up-assign-builders c: palisade-wall c: -1)
	(up-build-line watch-tower-point-x watch-tower-point-x c: palisade-wall)
	(up-modify-goal gl-wall-counter c:+ 1)
	;(up-chat-data-to-player my-player-number "wall counter: %d" g: gl-wall-counter)
)

(defrule	
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	;(building-type-count-total watch-tower < 1)
	(up-pending-objects c: palisade-wall > 0)
	(up-group-size c: 5 >= 1)
	;(up-can-build-line 0 gl-temp-tower-x c: watch-tower)
	;(goal temp-counter-goal 0)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: palisade-wall c: 1)
	(up-set-target-object search-local c: 0)
	(up-full-reset-search)
	; (up-get-point-contains watch-tower-point-x gl-wall-id c: palisade-wall)
	; (up-add-object-by-id search-remote g: gl-wall-id)
	(up-set-group search-local c: 5)
	(up-target-objects 1 action-default -1 -1)
	;(chat-to-player my-player-number "Tasking ctrl group to wall a tower")
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(up-compare-goal gl-wall-counter >= 9)
=>
	(set-goal gl-wall-counter 0)
)

; (defrule
	; (current-age == feudal-age)
	; (goal strategy-goal sg-towerrush)
	; (up-group-size c: 1 >= 4)
	; (goal temp-counter-goal 1)
	; (up-pending-objects c: palisade-wall < 1)
; =>
	; (set-goal temp-counter-goal 0)
; )

(defrule ;failed to build wall, temp-check +1
	(or (up-point-contains watch-tower-point-x c: palisade-wall)
	(not (up-can-build-line 0 watch-tower-point-x c: palisade-wall)))
	;(up-compare-goal temp-counter-goal g:>= gl-wall-counter) ;?
	(up-pending-objects c: palisade-wall < 1)
	(up-compare-goal temp-goal-one < 10)
	;(up-compare-goal temp-counter-goal < 9)
=>
	;(up-chat-data-to-player my-player-number "Failed to build %d . wall, go to next tile" g: temp-goal-one)
	(up-modify-goal temp-goal-one c:+ 1)
	;(up-modify-goal temp-counter-goal c:+ 1)
	(up-jump-rule 1)
)

(defrule ;end of check, go next, temp-goal +1
	(up-compare-goal temp-goal-one < 10)
	;(up-compare-goal temp-counter-goal g:>= gl-wall-counter) ;?
	(up-pending-objects c: palisade-wall < 1)
=>
	(up-modify-goal temp-goal-one c:+ 1)
	;(up-modify-goal temp-counter-goal c:+ 1)
	;(chat-to-player my-player-number "tile-check complete, go to next tile")
)

(defrule ;checked every tower?
	;(up-compare-goal temp-counter-goal >= 9)
	(up-compare-goal temp-goal-one >= 10)
	(up-pending-objects c: palisade-wall < 1)
	(up-compare-goal gl-loop-tower g:< gl-towers)
=>
	(up-modify-goal gl-loop-tower c:+ 1)
	;(up-chat-data-to-player my-player-number "checking tower: %d" g: gl-loop-tower)
)

(defrule ;checked every point? --> end loop
	;(up-compare-goal temp-counter-goal >= 9)
	(up-compare-goal temp-goal-one >= 10)
	(up-pending-objects c: palisade-wall < 1)
=>
	;(set-goal temp-counter-goal 0)
	(set-goal temp-goal-one 0)
	;(chat-to-player my-player-number "checked every point, end loop")
)


; (defrule ;reached end of checks --> start over loop
	; ;(up-compare-goal temp-counter-goal < 9)
	; (up-compare-goal temp-goal-one >= 10)
	; (up-pending-objects c: palisade-wall < 9)
; =>
	; (set-goal temp-goal-one 0)
	; (chat-to-player my-player-number "checked every point, check loop again")
	; ;(set-goal gl-wall-counter 0)
; )

(defrule
	(up-compare-goal gl-loop-tower g:>= gl-towers)
	(building-type-count watch-tower-line >= 1)
=>
	(set-goal gl-loop-tower 0)
	(set-goal gl-wall-counter 0)
	;(chat-to-player my-player-number "checked every tower, reset loop")
)

(defrule
	(up-compare-goal strategy-goal != sg-towerrush)
=>
	(up-jump-rule 3)
)

(defrule
	(current-age == feudal-age)
	(unit-type-count villager-class < 18)
=>
	(set-goal strategy-goal sg-fastcastle-uu)
	(set-goal gl-wall-tower 0)
	(set-strategic-number sn-percent-building-cancellation 35)
	(chat-to-player my-player-number "bad towerrush conditions, stop towerrushing")
	(chat-to-allies "I stop to towerrush and will go to castle-age instead")
)

(defrule
	(game-time > 900) ;15min
	(building-type-count-total watch-tower < 1)
	(building-type-count-total donjon < 1)
=>
	(set-goal strategy-goal sg-fastcastle-uu)
	(set-goal gl-wall-tower 0)
	(set-strategic-number sn-percent-building-cancellation 35)
	(chat-to-player my-player-number "bad towerrush conditions, stop towerrushing")
	(chat-to-allies "I stop to towerrush and will go to castle-age instead")
)

(defrule
	(or (current-age >= castle-age)
	(or (players-building-type-count focus-player town-center >= 2)
	(or (players-building-type-count focus-player castle >= 1)
	(and (players-military-population focus-player >= 20)
	(military-population < 10)))))
	(goal strategy-goal sg-towerrush)
	(goal gl-wall-tower 1)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: tower-type c: 10)
	(up-set-target-object search-local c: 0)
	(up-target-objects 1 action-delete -1 -1)
	(set-goal gl-wall-tower 0)
	(chat-to-player my-player-number "disable tower-walling and delete pending towers")
	(set-goal strategy-goal sg-fastcastle-uu)
	(disable-self)
)
	
; (defrule ;delete unneccesary palisade walls
	; (current-age == feudal-age)
	; (building-type-count-total watch-tower-line > 0)
	; (building-type-count palisade-wall > 0)
; =>
	; (up-full-reset-search)
	; (up-find-local c: palisade-wall c: 1)
; )

; (defrule
	; (up-set-target-object search-local c: 0)
	; (current-age == feudal-age)
	; (building-type-count-total watch-tower-line > 0)
	; (building-type-count palisade-wall > 0)
; =>
	; (u
	; (up-filter-distance c: -1 c: 2)
	; (up-find-local)

;endregion

;region Towerrush ==================================================

;always save wood for towers

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(escrow-amount wood < 50)
=>
	(set-escrow-percentage wood 25)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(escrow-amount wood >= 100)
	(goal gl-wood-saving 0)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age > feudal-age)
	(escrow-amount wood >= 100)
	(goal gl-wood-saving 0)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(up-pending-objects c: tower-type < 1)
	(wood-amount < 50)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources wood c: 5)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(up-pending-objects c: tower-type < 1)
	(stone-amount < 125)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources stone c: 5)
)

(defrule ;tower-building group follow up towers
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (up-group-size c: 4 < 5)
	(up-group-size c: 4 > 5))
=>
	(up-full-reset-search)
	(up-reset-group c: 4)
	(up-set-group search-local c: 4)
	(up-find-local c: villager-class c: 40)
	(up-clean-search search-local -1 search-order-asc)
	(up-remove-objects search-local object-data-hitpoints < 32)
	(up-remove-objects search-local object-data-group-flag == 5)
	(up-remove-objects search-local object-data-index > 4)
	(up-get-search-state gl-local-total)
	;(chat-to-player my-player-number "test")
)	

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (up-group-size c: 4 < 5)
	(up-group-size c: 4 > 5))
	(up-compare-goal gl-local-total > 0)
=>
	(up-create-group 0 0 c: 4)
	(up-modify-group-flag 1 c: 4)
	(chat-to-player my-player-number "setting up group of villagers for towerrush")
)

(defrule ;tower-walling group after first tower
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (up-group-size c: 5 < 1)
	(up-group-size c: 5 > 1))
	;(building-type-count tower-class >= 1)
=>
	(up-full-reset-search)
	(up-reset-group c: 5)
	(up-set-group search-local c: 5)
	(up-find-local c: villager-class c: 40)
	(up-clean-search search-local -1 search-order-asc)
	(up-remove-objects search-local object-data-hitpoints < 32)
	(up-remove-objects search-local object-data-group-flag == 4)
	(up-remove-objects search-local object-data-index > 0)
	(up-get-search-state gl-local-total)
)	

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (up-group-size c: 5 < 1)
	(up-group-size c: 5 > 1))
	;(building-type-count tower-class >= 1)
	(up-set-target-object search-local c: 0)
=>
	(up-create-group 0 0 c: 5)
	(up-modify-group-flag 1 c: 5)
	(chat-to-player my-player-number "setting up group of villagers to wall towers")
)

;find enemy lumber-camp
(defrule
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 1)
=>
	(up-full-reset-search)
	(up-find-remote c: lumber-camp c: 1)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 1)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-one)
	; (up-chat-data-to-player my-player-number "Self Point x: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Self Point y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	; (up-chat-data-to-player my-player-number "Distance to lumber-camp: %d" g: gl-distance-temp-one)
	(disable-self)
)

(defrule ;enemies 2nd lc
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
=>
	(up-full-reset-search)
	(up-find-remote c: lumber-camp c: 2)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-one) ;check distance to 1st lc
	; (up-chat-data-to-player my-player-number "Self Point x: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Self Point y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	; (up-chat-data-to-player my-player-number "Distance to lumber-camp: %d" g: gl-distance-temp-one)
	(disable-self)
)

(defrule
	(up-set-target-object search-remote c: 1)
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp) ;check distance to 2nd lc
	; (up-chat-data-to-player my-player-number "Self Point x: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Self Point y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	; (up-chat-data-to-player my-player-number "Distance to lumber-camp: %d" g: gl-distance-temp-one)
	(disable-self)
)

(defrule
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
	(up-compare-goal gl-distance-temp g:< gl-distance-temp-one)
=>
	(up-modify-goal gl-distance-temp-one g:= gl-distance-temp)
)

;find enemy mill
(defrule
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player mill >= 1)
=>
	(up-full-reset-search)
	(up-find-remote c: mill c: 1)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player mill >= 1)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-two)
	; (up-chat-data-to-player my-player-number "Self Point x: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Self Point y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	; (up-chat-data-to-player my-player-number "Distance to mill: %d" g: gl-distance-temp-two)
	(disable-self)
)

;check enemy mining-camp
(defrule
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player mining-camp >= 1)
=>
	(up-full-reset-search)
	(up-find-remote c: mining-camp c: 1)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age < feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player mining-camp >= 1)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-three)
	; (up-chat-data-to-player my-player-number "Self Point x: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Self Point y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	; (up-chat-data-to-player my-player-number "Distance to mining-camp: %d" g: gl-distance-temp-three)
	(disable-self)
)


;if no dropsite building has been found, use any enemy building
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(goal gl-distance-temp-one 999)
	(goal gl-distance-temp-two 999)
	(goal gl-distance-temp-three 999)
=>
	(up-full-reset-search)
	(up-find-remote c: wall-class c: 1)
	(up-find-remote c: building-class c: 1)
	(up-remove-objects search-remote object-data-type c: town-center)
	;(chat-to-player my-player-number "Test")
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(goal gl-distance-temp-one 999)
	(goal gl-distance-temp-two 999)
	(goal gl-distance-temp-three 999)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-two)
	(chat-to-player my-player-number "No enemy dropsite building found, using any visible enemy building")
	; (up-chat-data-to-player my-player-number "Self Point x: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Self Point y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	; (up-chat-data-to-player my-player-number "Distance to mining-camp: %d" g: gl-distance-temp-three)
)

;check if lumber-camp or mill or mining-camp is closest to tc

(defrule
	(goal gl-distance-temp-one 999)
	(goal gl-distance-temp-two 999)
	(goal gl-distance-temp-three 999)
=>
	(up-jump-rule 50)
)

(defrule
	(goal gl-trush-init 1) ;trush has started, stop evaluating initial tower position
=>
	(up-jump-rule 11)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp == 1)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
=>
	(up-full-reset-search)
	(up-find-remote c: lumber-camp c: 1)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp == 1)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(chat-to-player my-player-number "Planning to build a tower behind enemy woodline 1")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	(up-send-flare gl-temp-tower-x)
	(disable-self)
)	

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
=>
	(up-full-reset-search)
	(up-find-remote c: lumber-camp c: 2)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-one)
	(disable-self)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
	(up-compare-goal gl-distance-temp-one g:== gl-distance-temp)
=>
	(up-set-target-point gl-temp-tower-x)
	(chat-to-player my-player-number "Planning to build a tower behind enemy woodline 2")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	(up-send-flare gl-temp-tower-x)
	(up-jump-rule 2)
)

(defrule
	(up-set-target-object search-remote c: 1)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-one)
)

(defrule
	(up-set-target-object search-remote c: 1)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player lumber-camp >= 2)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-two)
	(up-compare-goal gl-distance-temp-one g:< gl-distance-temp-three)
	(up-compare-goal gl-distance-temp-one g:== gl-distance-temp)
=>
	(up-set-target-point gl-temp-tower-x)
	(chat-to-player my-player-number "Planning to build a tower behind enemy woodline 3")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	(up-send-flare gl-temp-tower-x)
	(disable-self)
)
	
(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(building-type-count-total tower-class < 1)
	(up-compare-goal gl-distance-temp-two g:< gl-distance-temp-one)
	(up-compare-goal gl-distance-temp-two g:< gl-distance-temp-three)
=>
	(up-full-reset-search)
	(up-find-remote c: mill c: 1)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player mill >= 1)
	(up-compare-goal gl-distance-temp-two g:< gl-distance-temp-one)
	(up-compare-goal gl-distance-temp-two g:< gl-distance-temp-three)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(chat-to-player my-player-number "Planning to build a tower behind enemy mill")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	(up-send-flare gl-temp-tower-x)
	(disable-self)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(building-type-count-total tower-class < 1)
	(up-compare-goal gl-distance-temp-three g:< gl-distance-temp-one)
	(up-compare-goal gl-distance-temp-three g:< gl-distance-temp-two)
=>
	(up-full-reset-search)
	(up-find-remote c: mining-camp c: 1)
	(disable-self)
)	

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(players-building-type-count focus-player mining-camp >= 1)
	(up-compare-goal gl-distance-temp-three g:< gl-distance-temp-one)
	(up-compare-goal gl-distance-temp-three g:< gl-distance-temp-two)
=>
	(up-get-point position-object gl-temp-tower-x)
	(up-set-target-point gl-temp-tower-x)
	(chat-to-player my-player-number "Planning to build a tower behind enemy mining-camp")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	(up-send-flare gl-temp-tower-x)
	(disable-self)
)
	
;starting the towerrush	
	
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(up-compare-goal gl-temp-three != 0)
=>
	(set-goal gl-temp-three 0)
	(chat-to-player my-player-number "starting the towerrush")
	(disable-self)
)
	
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 0)
=>
	(set-goal gl-temp-three 1)
	(up-modify-goal gl-temp g:= gl-temp-tower-x)
	(up-modify-goal gl-temp-two g:= gl-temp-tower-y)
	(up-modify-goal gl-temp g:- gl-starting-tc-x) 
	(up-modify-goal gl-temp-two g:- gl-starting-tc-y)
	;(up-chat-data-to-player my-player-number "Targeted tower placement x: %d" g: gl-temp-tower-x)
	;(up-chat-data-to-player my-player-number "Targeted tower placement y: %d" g: gl-temp-tower-y)
	;(up-chat-data-to-player my-player-number "starting tc x: %d" g: gl-starting-tc-x)
	;(up-chat-data-to-player my-player-number "starting tc y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Temp1: %d" g: gl-temp)
	; (up-chat-data-to-player my-player-number "Temp2: %d" g: gl-temp-two)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
=>
	(up-modify-goal gl-temp g:= gl-temp-tower-x)
	(up-modify-goal gl-temp-two g:= gl-temp-tower-y)
	(up-modify-goal gl-temp g:- gl-starting-tc-x)
	(up-modify-goal gl-temp-two g:- gl-starting-tc-y)
	;(up-chat-data-to-player my-player-number "Targeted tower placement x: %d" g: gl-temp-tower-x)
	;(up-chat-data-to-player my-player-number "Targeted tower placement y: %d" g: gl-temp-tower-y)
	;(up-chat-data-to-player my-player-number "starting tc x: %d" g: gl-starting-tc-x)
	;(up-chat-data-to-player my-player-number "starting tc y: %d" g: gl-starting-tc-y)
	; (up-chat-data-to-player my-player-number "Temp1: %d" g: gl-temp)
	; (up-chat-data-to-player my-player-number "Temp2: %d" g: gl-temp-two)
)

;1
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two >= 0) ;right side from our tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:- 11)
	(up-modify-goal gl-temp-tower-y c:- 11)
	; (up-send-flare gl-temp-tower-x)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "set tower location 1")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12) ;too close to enemy tc
	(not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type))) ;tower location is blocked by something
	(up-point-explored gl-temp-tower-x != explored-no) ;but the point is explored
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two >= 0) ;right side from our tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 1)
	(up-modify-goal gl-temp-tower-y c:+ 1)
    (up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	 (chat-to-player my-player-number "expand tower location 1")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)
;2
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0) ;bottom side from our tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:+ 10)
	(up-modify-goal gl-temp-tower-y c:- 11)
	; (up-send-flare gl-temp-tower-x)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "set tower location 2")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12)
	(not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type)))
	(up-point-explored gl-temp-tower-x != explored-no)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0) ;bottom side from our tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 1)
	(up-modify-goal gl-temp-tower-y c:- 1)
    (up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "expand tower location 2")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)
;3
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0)
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:- 11)
	(up-modify-goal gl-temp-tower-y c:+ 10) ;top side from our tc
	; (up-send-flare gl-temp-tower-x)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "set tower location 3")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12)
	(not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type)))
	(up-point-explored gl-temp-tower-x != explored-no)
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0) ;top side from our tc
=>
	(up-modify-goal gl-temp-tower-x c:- 1)
	(up-modify-goal gl-temp-tower-y c:+ 1)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "expand tower location 3")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)
;4
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0) ;left side from our tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:+ 10)
	(up-modify-goal gl-temp-tower-y c:+ 10)
	; (up-send-flare gl-temp-tower-x)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "set tower location 4")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12)
	(not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type)))
	(up-point-explored gl-temp-tower-x != explored-no)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0) ;left side from our tc
=>
	(up-modify-goal gl-temp-tower-x c:- 1)
	(up-modify-goal gl-temp-tower-y c:- 1)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	(chat-to-player my-player-number "expand tower location 4")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(up-can-build-line with-escrow gl-temp-tower-x c: tower-type)
	;(up-point-explored gl-temp-tower-x != explored-no)
	(goal gl-temp-three 2)
	(up-compare-goal gl-distance-temp-one >= 12)
	(up-compare-goal gl-distance-temp-one < 36)
=>
	(release-escrow wood)
	(release-escrow stone)
	(up-assign-builders c: tower-type c: -1)
	;(up-set-target-point gl-temp-tower-x)
	;(set-strategic-number sn-placement-zone-size 0)
	;(set-strategic-number sn-placement-fail-delta 0)
	(set-strategic-number sn-percent-building-cancellation -1)
	(up-build-line gl-temp-tower-x gl-temp-tower-x c: tower-type)
	(chat-to-player my-player-number "Building initial tower")
	; (up-chat-data-to-player my-player-number "Tower placed at x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower placed at y: %d" g: gl-temp-tower-y)
	;(up-get-point position-point gl-temp-tower-x)
	(set-goal gl-trush-init 1)
	(set-goal gl-temp-three 0)	
)

(defrule ;for debugging reasons
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count-total tower-class < 1)
	(up-pending-objects c: tower-type < 1)
	(up-can-build-line with-escrow gl-temp-tower-x c: tower-type)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-temp-tower-x c:> 255)
	(or (up-compare-goal gl-temp-tower-y c:> 255)
	(up-compare-goal gl-distance-temp-one >= 36)))
=>
	(up-full-reset-search)
	;(set-goal gl-temp-three 0)
	(up-find-remote c: lumber-camp c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object gl-temp-tower-x)
	(up-lerp-tiles gl-temp-tower-x enemy-point-x c:- 10)
	(chat-to-player my-player-number "resetting tower placement plan")
	(up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	(up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

; (defrule
	; (up-set-target-object search-remote c: 0)
	; (current-age <= feudal-age)
	; (goal strategy-goal sg-towerrush)
	; (building-type-count watch-tower-line < 1)
	; (up-pending-objects c: watch-tower < 1)
	; (players-building-type-count focus-player lumber-camp >= 1)
; =>
	; (up-get-point position-object gl-temp-tower-x)
	; (up-set-target-point gl-temp-tower-x)
	; (up-get-point-distance gl-starting-tc-x gl-temp-tower-x gl-distance-temp-one)
	; (up-chat-data-to-player my-player-number "Self Point: %d" g: gl-starting-tc-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Distance tower to our tc: %d" g: gl-distance-temp-one)
; )

;follow-up towers

;selecting starting position for next tower
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	;(building-type-count watch-tower-line >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 0)
=>
	(up-modify-goal gl-temp g:= gl-temp-tower-x)
	(up-modify-goal gl-temp-two g:= gl-temp-tower-y)
	(up-modify-goal gl-temp g:- enemy-point-x)
	(up-modify-goal gl-temp-two g:- enemy-point-y)
	;(up-chat-data-to-player my-player-number "Targeted tower placement x: %d" g: gl-temp-tower-x)
	;(up-chat-data-to-player my-player-number "Targeted tower placement y: %d" g: gl-temp-tower-y)
	;(up-chat-data-to-player my-player-number "enemy tc x: %d" g: enemy-point-x)
	;(up-chat-data-to-player my-player-number "enemy tc y: %d" g: enemy-point-y)
	; (up-chat-data-to-player my-player-number "Temp1: %d" g: gl-temp)
	; (up-chat-data-to-player my-player-number "Temp2: %d" g: gl-temp-two)
	(set-goal gl-temp-three 1)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	;(building-type-count watch-tower-line >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
=>
	;(up-get-point position-object gl-temp-tower-x)
	;(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	; (up-chat-data-to-player my-player-number "Enemy tc Point x: %d" g: enemy-point-x)
	; (up-chat-data-to-player my-player-number "Enemy tc Point y: %d" g: enemy-point-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	(up-chat-data-to-player my-player-number "Distance tower to enemy tc: %d" g: gl-distance-temp-one)
)

;1
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp >= 0) 
	(up-compare-goal gl-temp-two >= 0) ;right side of enemy tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:+ 0)
	(up-modify-goal gl-temp-tower-y c:- 6)
	(up-send-flare gl-temp-tower-x)
	; (chat-to-player my-player-number "set fu tower location 1")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(up-compare-goal gl-distance-temp-one >= 20)
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two >= 0) ;right side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:- 2)
	(up-modify-goal gl-temp-tower-y c:+ 0)
	; (chat-to-player my-player-number "adjust fu tower location 1")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12) ; too close to enemy tc
	(or (not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type))
	(not (up-can-build-line 0 gl-temp-tower-x c: tower-type))))
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two >= 0) ;right side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 1)
	(up-modify-goal gl-temp-tower-y c:+ 0)
	; (chat-to-player my-player-number "too close to enemy tc: adjust tower location 1")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	;(set-goal gl-temp-three 1)
)

;2
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0) ;bottom side of enemy tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:+ 6)
	(up-modify-goal gl-temp-tower-y c:+ 0)
	(up-send-flare gl-temp-tower-x)
	; (chat-to-player my-player-number "set fu tower location 2")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(up-compare-goal gl-distance-temp-one >= 20)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0) ;bottom side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 0)
	(up-modify-goal gl-temp-tower-y c:- 2)
	; (chat-to-player my-player-number "adjust fu tower location 2")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12) ; too close to enemy tc
	(or (not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type))
	(not (up-can-build-line 0 gl-temp-tower-x c: tower-type))))
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0) ;bottom side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 0)
	(up-modify-goal gl-temp-tower-y c:+ 1)
	; (chat-to-player my-player-number "too close to enemy tc: adjust tower location 2")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	;(set-goal gl-temp-three 1) 
)

;3
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0) ;top side of enemy tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:- 6)
	(up-modify-goal gl-temp-tower-y c:+ 0) 
	; (up-send-flare gl-temp-tower-x)
	; (chat-to-player my-player-number "set fu tower location 3")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	(up-send-flare gl-temp-x)
;	(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(up-compare-goal gl-distance-temp-one >= 20)
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0) ;top side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 0)
	(up-modify-goal gl-temp-tower-y c:+ 2)
	; (chat-to-player my-player-number "adjust fu tower location 3")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12) ; too close to enemy tc
	(or (not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type))
	(not (up-can-build-line 0 gl-temp-tower-x c: tower-type))))
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0) ;top side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 0)
	(up-modify-goal gl-temp-tower-y c:- 1)
	; (chat-to-player my-player-number "too close to enemy tc: adjust tower location 3")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	;(set-goal gl-temp-three 1) 
)

;4
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 1)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0) ;left side of enemy tc
=>
	(set-goal gl-temp-three 2)
	(up-modify-goal gl-temp-tower-x c:+ 0)
	(up-modify-goal gl-temp-tower-y c:+ 6)
	(up-send-flare gl-temp-tower-x)
	; (chat-to-player my-player-number "set fu tower location 4")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(up-compare-goal gl-distance-temp-one >= 20)
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0) ;left side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:+ 2)
	(up-modify-goal gl-temp-tower-y c:- 0)
	; (chat-to-player my-player-number "adjust fu tower location 4")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(building-type-count tower-class >= 1)
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
	(or (up-compare-goal gl-distance-temp-one < 12) ; too close to enemy tc
	(or (not (up-can-build-line with-escrow gl-temp-tower-x c: tower-type))
	(not (up-can-build-line 0 gl-temp-tower-x c: tower-type))))
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0) ;left side of enemy tc
=>
	(up-modify-goal gl-temp-tower-x c:- 1)
	(up-modify-goal gl-temp-tower-y c:+ 0)
	; (chat-to-player my-player-number "too close to enemy tc: adjust tower location 4")
	; (up-chat-data-to-player my-player-number "Planned tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Planned tower y: %d" g: gl-temp-tower-y)
	;(set-goal gl-temp-three 1) 
)


;adjusting tower-placement if initial placement was too far away from or too close to target players tc
(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
=>
	(up-modify-goal gl-temp g:= gl-temp-tower-x)
	(up-modify-goal gl-temp-two g:= gl-temp-tower-y)
	(up-modify-goal gl-temp g:- enemy-point-x)
	(up-modify-goal gl-temp-two g:- enemy-point-y)
	;(up-chat-data-to-player my-player-number "Targeted tower placement x: %d" g: gl-temp-tower-x)
	;(up-chat-data-to-player my-player-number "Targeted tower placement y: %d" g: gl-temp-tower-y)
	;(up-chat-data-to-player my-player-number "enemy tc x: %d" g: enemy-point-x)
	;(up-chat-data-to-player my-player-number "enemy tc y: %d" g: enemy-point-y)
	; (up-chat-data-to-player my-player-number "Temp1: %d" g: gl-temp)
	; (up-chat-data-to-player my-player-number "Temp2: %d" g: gl-temp-two)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(or (can-build watch-tower)
	(can-build donjon))
	(players-building-type-count focus-player town-center >= 1)
	(up-pending-objects c: tower-type < 1)
	(goal gl-temp-three 2)
=>
	;(up-get-point position-object gl-temp-tower-x)
	;(up-set-target-point gl-temp-tower-x)
	(up-get-point-distance enemy-point-x gl-temp-tower-x gl-distance-temp-one)
	; (up-chat-data-to-player my-player-number "Enemy tc Point x: %d" g: enemy-point-x)
	; (up-chat-data-to-player my-player-number "Enemy tc Point y: %d" g: enemy-point-y)
	; (up-chat-data-to-player my-player-number "Tower Goal Point x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Tower Goal Point y: %d" g: gl-temp-tower-y)
	(up-chat-data-to-player my-player-number "Distance tower to enemy tc: %d" g: gl-distance-temp-one)
)

;build tower

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(building-type-count tower-class >= 1)
	(up-pending-objects c: tower-type < 1)
	(up-can-build-line with-escrow gl-temp-tower-x c: tower-type)
	(goal gl-temp-three 2)
	(up-compare-goal gl-distance-temp-one >= 12)
	(up-compare-goal gl-distance-temp-one < 20)
	(up-point-explored gl-temp-tower-x != explored-no)
=>
	(release-escrow wood)
	(release-escrow stone)
	(up-ungarrison c: tower-type)
	(up-gather-inside c: tower-type c: 0)
	(up-assign-builders c: tower-type c: -1)
	(up-set-target-point gl-temp-tower-x)
	(set-strategic-number sn-percent-building-cancellation -1)
	; (set-strategic-number sn-placement-zone-size 0)
	; (set-strategic-number sn-placement-fail-delta 0)
	(up-build-line gl-temp-tower-x gl-temp-tower-x c: tower-type)
	(up-get-point position-point gl-temp-tower-x)
	(chat-to-player my-player-number "building follow-up tower")
	; (up-chat-data-to-player my-player-number "Next tower x: %d" g: gl-temp-tower-x)
	; (up-chat-data-to-player my-player-number "Next tower y: %d" g: gl-temp-tower-y)
	; (up-send-flare gl-temp-tower-x)
	(set-goal gl-temp-three 0)
)

(defrule	
	(current-age == feudal-age)
	;(building-type-count-total watch-tower-line < 1)
	(up-pending-objects c: tower-type > 0)
	(up-group-size c: 4 >= 5)
	;(up-can-build-line with-escrow gl-temp-tower-x c: watch-tower)
	;(up-point-explored gl-temp-tower-x != explored-no)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: tower-type c: 1)
	(up-set-target-object search-local c: 0)
	(up-full-reset-search)
	; (up-get-point-contains gl-temp-tower-x gl-tower-id c: watch-tower)
	; (up-add-object-by-id search-remote g: gl-tower-id)
	(up-set-group search-local c: 4)
	(up-target-objects 1 action-default -1 -1)
	;(chat-to-player my-player-number "Tasking ctrl groups to build a tower")
)

(defrule	
	(current-age == feudal-age)
	;(building-type-count-total watch-tower-line < 1)
	(up-pending-objects c: tower-type > 0)
	(up-pending-objects c: palisade-wall < 1)
	(up-group-size c: 5 >= 1)
	;(up-can-build-line with-escrow gl-temp-tower-x c: watch-tower)
	;(up-point-explored gl-temp-tower-x != explored-no)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: tower-type c: 1)
	(up-set-target-object search-local c: 0)
	(up-full-reset-search)
	; (up-get-point-contains gl-temp-tower-x gl-tower-id c: watch-tower)
	; (up-add-object-by-id search-remote g: gl-tower-id)
	(up-set-group search-local c: 5)
	(up-target-objects 1 action-default -1 -1)
	;(chat-to-player my-player-number "Tasking ctrl groups to build a tower")
)

(defrule
	(goal strategy-goal sg-towerrush)
	(up-pending-objects c: tower-type < 1)
=>
	(up-gather-inside c: tower-type c: 1)
)

; (defrule	;garrison villagers when not enough res for next tower; not working yet since tower will be fully walled, causing villagers to get stuck
	; (current-age == feudal-age)
	; (goal strategy-goal sg-towerrush)
	; (building-type-count-total watch-tower-line >= 1)
	; ;(building-type-count-total watch-tower < 4)
	; (up-pending-objects c: watch-tower < 1)
	; (up-pending-objects c: palisade-wall < 1)
	; (not (up-can-build-line 0 gl-temp-tower-x c: watch-tower))
	; (up-point-contains gl-temp-tower-x c: watch-tower)
	; (up-group-size c: 1 >= 4)
; =>
	; (up-full-reset-search)
	; (up-get-point-contains gl-temp-tower-x gl-tower-id c: watch-tower)
	; (up-add-object-by-id search-remote g: gl-tower-id)
	; (up-set-group search-local c: 1)
	; (up-ungarrison c: watch-tower)
	; (up-gather-inside c: watch-tower c: 0)
	; (up-target-objects 0 action-garrison -1 -1)
	; ;(chat-to-player my-player-number "garrison villagers in tower")
; )

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(up-point-explored gl-temp-tower-x == explored-no)
	(goal gl-temp-three 2)
=>
	(set-goal gl-temp-three 3)
	;(chat-to-player my-player-number "Need to scout the planned tower point")
)

(defrule ;scout planned tower point if point is unexplored
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(up-point-explored gl-temp-tower-x == explored-no)
	(up-compare-goal gl-distance-temp-one >= 12)
	(or (unit-type-count scout-cavalry-line > 0)
	(or (unit-type-count camel-scout > 0)
	(unit-type-count eagle-warrior-line > 0)))
	(goal gl-temp-three 3)
=>
	(up-full-reset-search)
	(up-find-local c: scout-type c: 1)
	;(chat-to-player my-player-number "Planned tower location hasnt been explored yet")
	(set-goal gl-temp-three 4)
)

(defrule ;scout planned tower point if point is unexplored
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(up-point-explored gl-temp-tower-x == explored-no)
	(up-compare-goal gl-distance-temp-one >= 12)
	(unit-type-count scout-cavalry-line == 0)
	(unit-type-count camel-scout == 0)
	(unit-type-count eagle-warrior-line == 0)
	(goal gl-temp-three 3)
=>
	(up-full-reset-search)
	;(up-filter-exclude -1 -1 -1 904)
	;(up-find-local c: all-units-class c: 1)
	(up-find-local c: spearman-line c: 1)
	(up-find-local c: militiaman-line c: 1)
	(up-find-local c: skirmisher-line c: 1)
	(up-find-local c: archer-line c: 1)
	;(chat-to-player my-player-number "Planned tower location hasnt been explored yet")
	(set-goal gl-temp-three 4)
)

(defrule
	(up-set-target-object search-local c: 0)
	(current-age == feudal-age)
	(goal strategy-goal sg-towerrush)
	(up-point-explored gl-temp-tower-x == explored-no)
	(up-compare-goal gl-distance-temp-one >= 12)
	(goal gl-temp-three 4)
=>
	(up-target-point gl-temp-tower-x action-move -1 -1)
	(chat-to-player my-player-number "Sending a unit to explore the planned tower location")
	;(up-send-flare gl-temp-tower-x)
)

(defrule
	(goal gl-temp-three 4)
	(up-point-explored gl-temp-tower-x != explored-no)
=>
	(set-goal gl-temp-three 2)
	(chat-to-player my-player-number "Planned tower location explored, continue to towerrush")
)

;defend tower-location with army

; (defrule
	; (goal strategy-goal sg-towerrush)
	; (current-age == feudal-age)
	; (up-pending-objects c: tower-type c: 1)
; =>
	; (up-full-reset-search)
	; (up-find-local c: -1 c: 10)
	; (up-remove-objects c: villager-class)
	; (up-remove-objects c: warship-class)
	; (up-remove-objects c: building-class)
	; (up-remove-objects c: tower-class)
	; (up-target-point gl-temp-tower-x action-move -1 -1)
; )


;endregion

;region Refreshing Camps NEW =======================================

;wood 

(defrule
	(or (wood-amount < 100)
	(town-under-attack))
=>
	(up-jump-rule 4) ;only delete camps if we have the wood to build new ones
)

(defrule
	(building-type-count-total lumber-camp > 2)
	;(timer-triggered t-3-sec)
=>
	(up-full-reset-search)
	(up-find-local c: lumber-camp c: 10)
	(up-get-search-state gl-local-total)
	(set-goal gl-loop-counter 0)
	;(up-chat-data-to-player my-player-number "Loop Count: %d" g: gl-loop-counter)
	;(up-chat-data-to-player my-player-number "Lumber-camps: %d" g: gl-local-total)
)

(defrule
	(building-type-count-total lumber-camp > 2)
	(up-set-target-object search-local g: gl-loop-counter)
=>
	(up-get-point position-object gl-camp-x)
	(up-set-target-point gl-camp-x)
	(up-reset-search 0 0 1 1) ;reset remote list
	(up-reset-filters)
	(up-filter-distance c: -1 c: 6) ;distance to trees
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: wood c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: wood c: 1)
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Found %d woodtiles" g: gl-remote-total)
)

(defrule
	(building-type-count lumber-camp > 2)
	(up-set-target-object search-local g: gl-loop-counter)
	(up-compare-goal gl-remote-total < 1) ;we didn't find any trees near lumber-camps
=>
	(up-remove-objects search-local -1 g:!= gl-loop-counter)
	(chat-local-to-self "deleting old lumber camp")
	(up-target-point 0 action-delete -1 -1)
	(up-get-search-state gl-local-total)
	(up-jump-rule 1)
)

(defrule
	(building-type-count lumber-camp > 2)
	(up-compare-goal gl-local-total > 0)
	(up-compare-goal gl-loop-counter g:<= gl-local-total)
	(up-compare-goal gl-loop-counter < 9)
=>
	(up-modify-goal gl-loop-counter c:+ 1)
	;(up-chat-data-to-player my-player-number "increased loop count: %d" g: gl-loop-counter)
	(up-jump-rule -3)
)

;gold && stone

(defrule
	(or (wood-amount < 100)
	(town-under-attack))
=>
	(up-jump-rule 4) ;only delete camps if we have the wood to build new ones
)

(defrule
	(building-type-count-total mining-camp > 2)
	;(timer-triggered t-3-sec)
=>
	(up-full-reset-search)
	(up-find-local c: mining-camp c: 10) ;save mining-camps in local-list
	(up-get-search-state gl-local-total)
	(set-goal gl-loop-counter 0) ;set loop-counter = 0
)

(defrule
	(building-type-count-total mining-camp > 2) 
	(up-set-target-object search-local g: gl-loop-counter) ;local[0] == mining-camp?
=>
	(up-get-point position-object gl-camp-x)
	(up-set-target-point gl-camp-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 5) ;distance to gold/stone-pile
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: gold c: 1)
	(up-find-resource c: stone c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: gold c: 1)
	(up-find-resource c: stone c: 1)
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Found %d gold and stone" g: gl-remote-total)
)

(defrule
	(building-type-count mining-camp > 2)
	(up-set-target-object search-local g: gl-loop-counter)
	(up-compare-goal gl-remote-total < 1)
=>
	(up-remove-objects search-local -1 g:!= gl-loop-counter)
	(chat-local-to-self "deleting old mining camp")
	(up-target-point 0 action-delete -1 -1)
	(up-get-search-state gl-local-total)
	(up-jump-rule 1)
)

(defrule
	(building-type-count mining-camp > 2)
	(up-compare-goal gl-local-total > 0)
	(up-compare-goal gl-loop-counter g:<= gl-local-total)
	(up-compare-goal gl-loop-counter < 9)
=>
	(up-modify-goal gl-loop-counter c:+ 1)
	(up-jump-rule -3)
)

;endregion

;region Saving resources for Upgrades/Buildings with escrow ========


(defrule
	(game-time > 0)
=>
	(enable-timer 8 1)
	;(enable-timer 9 1)
	(disable-self)
)

(defrule
	(game-time > 305)
=>
	(enable-timer 7 1)
	(disable-self)
)

(defrule
	(game-time > 305)
	(timer-triggered 9)
=>
	(enable-timer 7 60)
)

(defrule
	(timer-triggered 7)
=>
	(disable-timer 7)
	(up-get-fact escrow-amount food amnt-escrow-food)
	(up-chat-data-to-self "Escrow food: %d" g: amnt-escrow-food)
	(up-get-fact escrow-amount wood amnt-escrow-wood)
	(up-chat-data-to-self "Escrow wood: %d" g: amnt-escrow-wood)
	(up-get-fact escrow-amount gold amnt-escrow-gold)
	(up-chat-data-to-self "Escrow gold: %d" g: amnt-escrow-gold)
	(up-get-fact escrow-amount stone amnt-escrow-stone)
	(up-chat-data-to-self "Escrow stone: %d" g: amnt-escrow-stone)
	(up-chat-data-to-self "Town Size: %d" s: sn-maximum-town-size)
	;(up-chat-data-to-self "Enemy unit count %d" g: enemy-military-pop)
	(up-chat-data-to-self "Military Advantage: %d" g: gl-military-advantage)
	(enable-timer 7 45)
)

(defrule
	(timer-triggered 9)
=>
	(disable-timer 9)
	(up-chat-data-to-self "Saving food for: %d" g: gl-food-saving)
	(up-chat-data-to-self "Saving wood for: %d" g: gl-wood-saving)
	(up-chat-data-to-self "Saving gold for: %d" g: gl-gold-saving)
	(up-chat-data-to-self "Saving stone for: %d" g: gl-stone-saving)
	;(enable-timer 9 180)
)

(defrule
	(goal gl-wood-saving 0)
	(escrow-amount wood > 0)
=>
	(release-escrow wood)
)

(defrule
	(goal gl-food-saving 0)
	(escrow-amount food > 0)
=>
	(release-escrow food)
)

(defrule
	(goal gl-gold-saving 0)
	(escrow-amount gold > 0)
=>
	(release-escrow gold)
)

(defrule
	(goal gl-stone-saving 0)
	(escrow-amount stone > 0)
=>
	(release-escrow stone)
)

(defrule
	(building-type-count-total town-center == 0)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(current-age <= feudal-age)
	(escrow-amount wood > 600)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing wood")
)	

(defrule
	(current-age <= feudal-age)
	(escrow-amount food > 1100)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing food")
)	

(defrule
	(current-age <= feudal-age)
	(escrow-amount gold > 600)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing gold")
)	

(defrule
	(current-age <= feudal-age)
	(escrow-amount stone > 800)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing stone")
)	

(defrule
	(current-age <= castle-age)
	(escrow-amount wood > 800)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing wood")
)	

(defrule
	(current-age <= castle-age)
	(escrow-amount food > 1400)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing food")
)	

(defrule
	(current-age <= castle-age)
	(escrow-amount gold > 1200)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing gold")
)	

(defrule
	(current-age <= castle-age)
	(escrow-amount stone > 800)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing stone")
)	

(defrule
	(current-age >= imperial-age)
	(escrow-amount wood > 1500)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing wood")
)	

(defrule
	(current-age >= imperial-age)
	(escrow-amount food > 1800)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing food")
)	

(defrule
	(current-age >= imperial-age)
	(escrow-amount gold > 1400)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing gold")
)	

(defrule
	(current-age >= imperial-age)
	(escrow-amount stone > 1000)
=>
	(up-release-escrow)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "Bugged Escrow, releasing stone")
)	

(defrule
	(goal gl-gold-saving 13)
	(goal gl-food-saving 0)
=>
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing gold")
)

(defrule
	(goal gl-gold-saving 0)
	(goal gl-food-saving 13)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(set-goal gl-food-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing food")
)

(defrule
	(goal gl-gold-saving 20)
	(goal gl-food-saving 0)
=>
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing gold")
)

(defrule
	(goal gl-gold-saving 0)
	(goal gl-food-saving 20)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(set-goal gl-food-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing food")
)

(defrule
	(goal gl-wood-saving 1)
	(goal gl-food-saving 0)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing wood")
)

(defrule
	(goal gl-wood-saving 0)
	(goal gl-food-saving 1)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(set-goal gl-food-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing food")
)

(defrule
	(goal gl-gold-saving 1)
=>
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing gold")
)

(defrule
	(goal gl-stone-saving 1)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Bugged Escrow, releasing stone")
)

(defrule
	(current-age == feudal-age)
	(timer-triggered 8)
	(food-amount >= 450) ;600
	(up-modify-goal gl-feudalup-compare g:= f-villager-goal)
	(up-modify-goal gl-feudalup-compare c:- 5)
	(unit-type-count-total villager g:< gl-feudalup-compare)
	(up-research-status c: castle-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal f-villager-goal c:- 1)
	(up-chat-data-to-self "Feudal-Age villager goal: %d" g: f-villager-goal)
	(enable-timer 8 30)
)

(defrule
	(current-age == feudal-age)
	(timer-triggered 8)
	(gold-amount >= 325) ;375
	(building-type-count market >= 1)
	(up-modify-goal gl-feudalup-compare g:= f-villager-goal)
	(up-modify-goal gl-feudalup-compare c:- 5)
	(unit-type-count-total villager g:< gl-feudalup-compare)
	(up-research-status c: castle-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal f-villager-goal c:- 1)
	(up-chat-data-to-self "Feudal-Age villager goal: %d" g: f-villager-goal)
	(enable-timer 8 30)
)

(defrule
	(current-age == feudal-age)
	(timer-triggered 8)
	(can-research-with-escrow castle-age)
	(up-modify-goal gl-feudalup-compare g:= f-villager-goal)
	(up-modify-goal gl-feudalup-compare c:- 5)
	(unit-type-count-total villager g:< gl-feudalup-compare)
	(up-research-status c: castle-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal f-villager-goal g:= civilian-pop)
	(up-chat-data-to-self "Feudal-Age villager goal: %d" g: c-villager-goal)
	(enable-timer 8 25)
)

(defrule
	(current-age == feudal-age)
	(timer-triggered 8)
	(food-amount < 450) ;600
	(gold-amount < 325) ;375
	(up-modify-goal gl-feudalup-compare g:= f-villager-goal)
	(up-modify-goal gl-feudalup-compare c:- 1)
	(unit-type-count-total villager g:== gl-feudalup-compare)
	(up-research-status c: castle-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal f-villager-goal c:+ 1)
	(up-chat-data-to-self "Feudal-Age villager goal: %d" g: f-villager-goal)
	(enable-timer 8 10)
)

(defrule
	(current-age == feudal-age)
	(timer-triggered 8)
	(food-amount < 450) ;600
	(gold-amount >= 325) ;375
	(building-type-count market == 0)
	(up-modify-goal gl-feudalup-compare g:= f-villager-goal)
	(up-modify-goal gl-feudalup-compare c:- 1)
	(unit-type-count-total villager g:== gl-feudalup-compare)
	(up-research-status c: castle-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal f-villager-goal c:+ 1)
	(up-chat-data-to-self "Feudal-Age villager goal: %d" g: f-villager-goal)
	(enable-timer 8 10)
)

(defrule
	(current-age == feudal-age)
	(timer-triggered 8)
	(unit-type-count-total villager g:> f-villager-goal)
	(up-research-status c: castle-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal f-villager-goal c:+ 1)
	(up-chat-data-to-self "Feudal-Age villager goal: %d" g: f-villager-goal)
	(enable-timer 8 1)
)

(defrule
	(current-age == feudal-age)
	(unit-type-count-total villager g:!= f-villager-goal)
	(up-research-status c: castle-age != research-pending)
	(food-amount >= 800)
	(gold-amount >= 200)
=>
	(up-modify-goal f-villager-goal g:= civilian-pop)
	(up-chat-data-to-self "Got enough resources, stop making villagers at: %d villagers" g: f-villager-goal)
)


(defrule
	(current-age == castle-age)
	(timer-triggered 8)
	(or (and (food-amount >= 800)
		(gold-amount >= 500))
		(and (gold-amount >= 600)
		(food-amount >= 600)))
	(up-modify-goal gl-castleup-compare g:= c-villager-goal)
	(up-modify-goal gl-castleup-compare c:- 9)
	(unit-type-count-total villager g:< gl-castleup-compare)
	(up-research-status c: imperial-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal c-villager-goal c:- 1)
	(up-chat-data-to-self "Castle-Age villager goal: %d" g: c-villager-goal)
	(enable-timer 8 10)
)

(defrule
	(current-age == castle-age)
	(timer-triggered 8)
	(can-research-with-escrow imperial-age)
	(up-modify-goal gl-castleup-compare g:= c-villager-goal)
	(up-modify-goal gl-castleup-compare c:- 9)
	(unit-type-count-total villager g:< gl-castleup-compare)
	(up-research-status c: imperial-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal c-villager-goal g:= civilian-pop)
	(up-chat-data-to-self "Castle-Age villager goal: %d" g: c-villager-goal)
	(enable-timer 8 10)
)

(defrule
	(current-age == castle-age)
	(timer-triggered 8)
	(or (and (food-amount < 800)
		(gold-amount < 500))
		(and (gold-amount < 600)
		(food-amount < 600)))
	(up-compare-goal c-villager-goal < 150)
	(up-modify-goal gl-castleup-compare g:= c-villager-goal)
	(up-modify-goal gl-castleup-compare c:- 4)
	(unit-type-count-total villager g:== gl-castleup-compare)
	(up-research-status c: imperial-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal c-villager-goal c:+ 4)
	(up-chat-data-to-self "Castle-Age villager goal: %d" g: c-villager-goal)
	(enable-timer 8 10)
)

(defrule
	(current-age == castle-age)
	(timer-triggered 8)
	(or (and (food-amount < 800)
		(gold-amount < 500))
		(and (gold-amount < 600)
		(food-amount < 600)))
	(up-compare-goal c-villager-goal < 150)
	(unit-type-count-total villager g:> c-villager-goal)
	(up-research-status c: imperial-age != research-pending)
=>
	(disable-timer 8)
	(up-modify-goal c-villager-goal c:+ 4)
	(up-chat-data-to-self "Castle-Age villager goal: %d" g: c-villager-goal)
	(enable-timer 8 1)
)

(defrule	
	(not (civ-selected byzantine))
	(not (civ-selected italian))
	(current-age == castle-age)
	(unit-type-count-total villager g:!= c-villager-goal)
	(up-research-status c: imperial-age != research-pending)
	(food-amount >= 1000)
	(gold-amount >= 800)
	(or 
		(and (building-type-count monastery >= 1)
		(building-type-count university >= 1))
	(or 
		(and (building-type-count monastery >= 1)
		(building-type-count siege-workshop >= 1))
	(or 
		(and (building-type-count siege-workshop >= 1)
		(building-type-count university >= 1))
	(building-type-count castle >= 1))))
=>
	(up-modify-goal c-villager-goal g:= civilian-pop)
	(up-chat-data-to-self "Got enough resources, stop making villagers at: %d villagers" g: c-villager-goal)
)

(defrule	
	(civ-selected byzantine)
	(current-age == castle-age)
	(unit-type-count-total villager g:!= c-villager-goal)
	(up-research-status c: imperial-age != research-pending)
	(food-amount >= 667)
	(gold-amount >= 536)
	(or 
		(and (building-type-count monastery >= 1)
		(building-type-count university >= 1))
	(or 
		(and (building-type-count monastery >= 1)
		(building-type-count siege-workshop >= 1))
	(or 
		(and (building-type-count siege-workshop >= 1)
		(building-type-count university >= 1))
	(building-type-count castle >= 1))))
=>
	(up-modify-goal c-villager-goal g:= civilian-pop)
	(up-chat-data-to-self "Got enough resources, stop making villagers at: %d villagers" g: c-villager-goal)
)

(defrule	
	(civ-selected italian)
	(current-age == castle-age)
	(unit-type-count-total villager g:!= c-villager-goal)
	(up-research-status c: imperial-age != research-pending)
	(food-amount >= 850)
	(gold-amount >= 680)
	(or 
		(and (building-type-count monastery >= 1)
		(building-type-count university >= 1))
	(or 
		(and (building-type-count monastery >= 1)
		(building-type-count siege-workshop >= 1))
	(or 
		(and (building-type-count siege-workshop >= 1)
		(building-type-count university >= 1))
	(building-type-count castle >= 1))))
=>
	(up-modify-goal c-villager-goal g:= civilian-pop)
	(up-chat-data-to-self "Got enough resources, stop making villagers at: %d villagers" g: c-villager-goal)
)

(defrule
	(civ-selected burgundians)
	(civilian-population >= 10)
	(building-type-count-total lumber-camp >= 1)
	(goal gl-food-saving 0)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-escrow-percentage food 75)
	(set-goal gl-food-saving 1)
	(set-goal gl-wood-saving 1)
	(enable-timer 9 1)
	;(chat-to-player my-player-number " 1.Holzupgrade")
)

(defrule
	(civ-selected burgundians)
	(or (civilian-population < 10)
	(or (up-research-status c: ri-double-bit-axe >= research-pending)
	(building-type-count-total lumber-camp == 0)))
	(goal gl-food-saving 1)
	(goal gl-wood-saving 1)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 1.Holzupgrade")
)

(defrule
	(civilian-population >= 11)
	(building-type-count-total barracks == 0)
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-fastcastle-gu))
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 100)
	(set-goal gl-wood-saving 2)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Kaserne")
)

(defrule
	(or (civilian-population < 12)
	(building-type-count-total barracks > 0))
	(goal gl-wood-saving 2)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Kaserne")
)

(defrule
	(building-type-count-total barracks == 0)
	(or (goal strategy-goal sg-scoutrush)
	(goal strategy-goal sg-archerrush))
	(up-research-status c: feudal-age >= research-pending)
	(not (civ-selected khmer))
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 100)
	(set-goal gl-wood-saving 2)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Kaserne")
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age <= feudal-age)
	(building-type-count-total barracks >= 1)
	(civilian-population >= 20)
	(building-type-count-total archery-range < 2)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 3)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Schiessanlage")
)

(defrule
	(goal strategy-goal sg-archerrush)
	(or (current-age > feudal-age)
	(or (building-type-count-total barracks < 1)
	(or (civilian-population < 20)
	(building-type-count-total archery-range >= 2))))
	(goal gl-wood-saving 3)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Schiessanlage")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total barracks >= 1)
	(civilian-population >= 25)
	(building-type-count-total archery-range < 1)
	(building-type-count-total farm >= 8)
	(game-time >= 780) ;13mins
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 3)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Schiessanlage")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(or (current-age != feudal-age)
	(or (building-type-count-total barracks < 1)
	(or (civilian-population < 25)
	(or (building-type-count-total farm < 8)
	(or (game-time < 780) ;13mins
	(building-type-count-total archery-range >= 1))))))
	(goal gl-wood-saving 3)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Schiessanlage")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age <= feudal-age)
	(building-type-count-total barracks >= 1)
	(civilian-population >= 19)
	(building-type-count-total stable < 1)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 4)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Stall")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(or (goal meso-civ YES)
	(or (current-age > feudal-age)
	(or (building-type-count-total barracks < 1)
	(or (civilian-population < 19)
	(building-type-count-total stable >= 1)))))
	(goal gl-wood-saving 4)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Stall")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population >= 19)
	(current-age <= feudal-age)
	(goal meso-civ YES)
	(building-type-count-total barracks < 2)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 5)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Kaserne")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(or (goal meso-civ NO)
	(or (civilian-population < 19)
	(or (building-type-count-total barracks >= 2)
	(current-age > feudal-age))))
	(goal gl-wood-saving 5)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Kaserne")
)

(defrule
	(or (goal strategy-goal sg-boom-imp)
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu)))
	(civilian-population >= 25)
	(current-age <= feudal-age)
	(building-type-count-total blacksmith < 1)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 6)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf blacksmith")
)

(defrule
	(or (goal strategy-goal sg-boom-imp)
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu)))
	(or (civilian-population < 25)
	(or (building-type-count-total blacksmith >= 1)
	(current-age > feudal-age)))	
	(goal gl-wood-saving 6)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf blacksmith")
)

(defrule
	(or (goal strategy-goal sg-boom-imp)
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu)))
	(civilian-population >= 26)
	(current-age <= feudal-age)
	(building-type-count-total mill >= 1)
	(building-type-count-total market < 1)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 37)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf market")
)

(defrule
	(or (goal strategy-goal sg-boom-imp)
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu)))
	(or (civilian-population < 26)
	(or (building-type-count-total mill < 1)
	(or (building-type-count-total market >= 1)
		(current-age > feudal-age))))
	(goal gl-wood-saving 37)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf market")
)

(defrule
	(or (goal strategy-goal sg-archerrush)
	(goal strategy-goal sg-towerrush))
	(civilian-population >= 26)
	(current-age <= feudal-age)
	(building-type-count-total mill >= 1)
	(building-type-count-total blacksmith >= 1)
	(building-type-count-total market < 1)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage wood 75)
	(set-goal gl-wood-saving 37)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf market")
)

(defrule
	(or (goal strategy-goal sg-archerrush)
	(goal strategy-goal sg-towerrush))
	(or (civilian-population < 26)
	(or (building-type-count-total mill < 1)
	(or (building-type-count-total blacksmith < 1)
	(or (building-type-count-total market >= 1)
		(current-age > feudal-age)))))
	(goal gl-wood-saving 37)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf market")
)


#load-if-defined UP-2-PLAYER-GAME

(defrule
	(up-research-status c: castle-age >= research-pending)
	(current-age < imperial-age)
	(building-type-count-total town-center < 3)
	(up-compare-goal gl-military-advantage >= -10)
	(goal gl-wood-saving 0)
	(goal gl-stone-saving 0)
	(not (goal strategy-goal sg-fastcastle-uu))
=>
	(set-escrow-percentage wood 35)
	(set-escrow-percentage stone 25)
	(set-goal gl-wood-saving 7)
	(set-goal gl-stone-saving 7)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf weitere Dorfzentren")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total town-center >= 3)
	(or (current-age >= imperial-age)
	(up-compare-goal gl-military-advantage < -12)))
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(not (goal strategy-goal sg-fastcastle-uu))
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf weitere Dorfzentren")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(current-age < imperial-age)
	(building-type-count-total town-center < 3)
	(building-type-count-total castle >= 1)
	(up-compare-goal gl-military-advantage >= -10)
	(goal gl-wood-saving 0)
	(goal gl-stone-saving 0)
	(goal strategy-goal sg-fastcastle-uu)
=>
	(set-escrow-percentage wood 35)
	(set-escrow-percentage stone 25)
	(set-goal gl-wood-saving 7)
	(set-goal gl-stone-saving 7)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf weitere Dorfzentren")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total town-center >= 3)
	(or (current-age >= imperial-age)
	(or (up-compare-goal gl-military-advantage < -12)
	(building-type-count-total castle < 1))))
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(goal strategy-goal sg-fastcastle-uu)
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf weitere Dorfzentren")
)


#end-if

#load-if-not-defined UP-2-PLAYER-GAME
#load-if-not-defined UP-POCKET-POSITION

(defrule
	(up-research-status c: castle-age >= research-pending)
	(current-age < imperial-age)
	(building-type-count-total town-center < 3)
	(up-compare-goal gl-military-advantage >= -10)
	(goal gl-wood-saving 0)
	(goal gl-stone-saving 0)
	(not (goal strategy-goal sg-fastcastle-uu))
=>
	(set-escrow-percentage wood 35)
	(set-escrow-percentage stone 25)
	(set-goal gl-wood-saving 7)
	(set-goal gl-stone-saving 7)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf weitere Dorfzentren")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (current-age >= imperial-age)
	(or (up-compare-goal gl-military-advantage < -12)
	(building-type-count-total town-center >= 3)))
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(not (goal strategy-goal sg-fastcastle-uu))
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf weitere Dorfzentren")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(current-age < imperial-age)
	(building-type-count-total town-center < 3)
	(building-type-count-total castle >= 1)
	(up-compare-goal gl-military-advantage >= -10)
	(goal gl-wood-saving 0)
	(goal gl-stone-saving 0)
	(goal strategy-goal sg-fastcastle-uu)
=>
	(set-escrow-percentage wood 35)
	(set-escrow-percentage stone 25)
	(set-goal gl-wood-saving 7)
	(set-goal gl-stone-saving 7)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf weitere Dorfzentren")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (current-age >= imperial-age)
	(or (building-type-count-total town-center >= 3)
	(or (up-compare-goal gl-military-advantage < -12)
	(building-type-count-total castle < 1))))
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(goal strategy-goal sg-fastcastle-uu)
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf weitere Dorfzentren")
)


#end-if
#end-if

(defrule
	(civ-selected cumans)
	(up-research-status c: feudal-age >= research-pending)
	(current-age < castle-age)
	(building-type-count-total town-center < 2)
	; (or (and (goal strategy-goal sg-archerrush)
		; (building-type-count-total archery-range == 2))
		; (or (and (goal strategy-goal sg-scoutrush)
			; (building-type-count-total stable == 1))
			; (or (and (goal strategy-goal sg-fastcastle-gu)
				; (building-type-count-total blacksmith == 1))
				; (or (and (goal strategy-goal sg-fastcastle-uu)
					; (building-type-count-total blacksmith == 1))
					; (or	(goal strategy-goal sg-drush)
						; (goal strategy-goal sg-boom-imp))))))
	(goal gl-wood-saving 0)
	(goal gl-stone-saving 0)
=>
	(set-escrow-percentage wood 40)
	(set-escrow-percentage stone 25)
	(set-goal gl-wood-saving 8)
	(set-goal gl-stone-saving 8)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf weiteres Dorfzentrum")
)

; (defrule
	; (civ-selected cumans)
	; (or (current-age >= castle-age)
	; (or (building-type-count-total town-center >= 2)
	; (or (and (goal strategy-goal sg-archerrush)
		; (building-type-count-total archery-range < 2))
	; (or (and (goal strategy-goal sg-scoutrush)
		; (building-type-count-total stable < 1))
	; (or	(goal strategy-goal sg-drush)
	; (goal strategy-goal sg-boom-imp))))))
	; (goal gl-wood-saving 8)
	; (goal gl-stone-saving 8)
; =>
	; (release-escrow wood)
	; (release-escrow stone)
	; (set-escrow-percentage wood 0)
	; (set-escrow-percentage stone 0)
	; (set-goal gl-wood-saving 0)
	; (set-goal gl-stone-saving 0)
	; ;(chat-to-player my-player-number "Spare nicht mehr auf weiteres Dorfzentrum")
; )

(defrule
	(current-age >= feudal-age)
	(or (up-compare-goal gl-archery-class-units >= 3)
	(up-compare-goal gl-cavalry-archer-units > 5))
	(research-available ri-fletching)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 50)
	(set-goal gl-food-saving 14)
	(set-goal gl-gold-saving 14)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Fletching")
)

(defrule
	(current-age >= feudal-age)
	(or (up-compare-goal gl-archery-class-units < 3)
	(or (up-compare-goal gl-cavalry-archer-units < 5)
		(and (research-completed ri-fletching)
		(research-available ri-bodkin-arrow))))
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Fletching")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (up-compare-goal gl-archery-class-units >= 3)
	(up-compare-goal gl-cavalry-archer-units > 5))
	(research-available ri-bodkin-arrow)
	(research-completed ri-fletching)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 14)
	(set-goal gl-gold-saving 14)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Bodkin")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (up-compare-goal gl-archery-class-units < 3)
	(or (up-compare-goal gl-cavalry-archer-units < 5)
		(and (research-completed ri-bodkin-arrow)
		(research-available ri-bracer))))
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Bodkin")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(unit-type-count-total archer-line >= 3)
	(research-available ri-crossbow)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 9)
	(set-goal gl-gold-saving 9)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Crossbow")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (unit-type-count-total archer-line < 3)
		(and (research-completed ri-crossbow)
		(research-available ri-arbalest)))
	(goal gl-food-saving 9)
	(goal gl-gold-saving 9)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Crossbow")
)


(defrule
	(up-research-status c: castle-age >= research-pending)
	(unit-type-count-total skirmisher-line >= 5)
	(research-available ri-elite-skirmisher)
	(goal gl-wood-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage wood 50)
	(set-escrow-percentage gold 35)
	(set-goal gl-wood-saving 40)
	(set-goal gl-gold-saving 40)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Elite-Plänkler")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (unit-type-count-total skirmisher-line < 3)
		(research-completed ri-elite-skirmisher))
	(goal gl-wood-saving 40)
	(goal gl-gold-saving 40)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Elite-Plänkler")
)

(defrule
	(building-type-count-total university >= 1)
	(or (up-compare-goal gl-archery-class-units >= 5)
	(up-compare-goal gl-cavalry-archer-units >= 5))
	(research-available ri-ballistics)
	(goal gl-wood-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage wood 50)
	(set-escrow-percentage gold 40)
	(set-goal gl-wood-saving 10)
	(set-goal gl-gold-saving 10)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Ballistik")
)

(defrule
	(current-age >= castle-age)
	(or (building-type-count-total university < 1)
		(or (and (up-compare-goal gl-archery-class-units < 5)
			(up-compare-goal gl-cavalry-archer-units < 5))
	(research-completed ri-ballistics)))
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Ballistik")
)

(defrule
	(civ-selected bohemians)
	(current-age >= castle-age)
	(building-type-count-total university >= 1)
	(building-type-count-total archery-range >= 1)
	(research-available ri-chemistry)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 26)
	(set-goal gl-gold-saving 26)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Chemie")
)

(defrule
	(civ-selected bohemians)
	(current-age >= castle-age)
	(or (building-type-count-total university < 1)
		(or (building-type-count-total archery-range >= 1)
			(up-research-status c: ri-chemistry >= research-pending)))
	(goal gl-food-saving 26)
	(goal gl-gold-saving 26)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Chemie")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total university >= 1)
	(research-available ri-chemistry)
	(not (goal strategy-goal sg-boom-imp))
	(or (up-compare-goal gl-archery-class-units >= 5)
	(up-compare-goal gl-cavalry-archer-units >= 5))
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 26)
	(set-goal gl-gold-saving 26)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Chemie")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(not (goal strategy-goal sg-boom-imp))
	(or (building-type-count-total university < 1)
		(or (up-research-status c: ri-chemistry >= research-pending)		
			(nor (up-compare-goal gl-archery-class-units >= 5)
				(up-compare-goal gl-cavalry-archer-units >= 5))))	
	(goal gl-food-saving 26)
	(goal gl-gold-saving 26)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Chemie")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total university >= 1)
	(research-available ri-chemistry)
	(unit-available bombard-cannon-line)
	(goal strategy-goal sg-boom-imp)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 26)
	(set-goal gl-gold-saving 26)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Chemie")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(goal strategy-goal sg-boom-imp)
	(or (building-type-count-total university < 1)
		(or (up-research-status c: ri-chemistry >= research-pending)
		(unit-available bombard-cannon-line)))
	(goal gl-food-saving 26)
	(goal gl-gold-saving 26)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Chemie")
)

(defrule
	(not (civ-selected viking))
	(current-age >= feudal-age)
	(goal strategy-goal sg-scoutrush)
	(building-type-count-total town-center >= 1)
	(research-available ri-wheel-barrow)
	(unit-type-count-total villager >= 33)
	(goal gl-food-saving 0)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage food 25)
	(set-escrow-percentage wood 5)
	(set-goal gl-food-saving 29)
	(set-goal gl-wood-saving 29)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Schubkarre")
)

(defrule
	(not (civ-selected viking))
	(current-age >= feudal-age)
	(goal strategy-goal sg-scoutrush)
	(or (building-type-count-total town-center < 1)
	(or (unit-type-count-total villager < 33)
	(research-completed ri-wheel-barrow)))
	(goal gl-food-saving 29)
	(goal gl-wood-saving 29)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Schubkarre")
)

(defrule
	(not (civ-selected viking))
	(current-age >= castle-age)
	(not (goal strategy-goal sg-boom-imp))
	(building-type-count-total town-center >= 1)
	(research-available ri-wheel-barrow)
	(goal gl-food-saving 0)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage food 25)
	(set-escrow-percentage wood 5)
	(set-goal gl-food-saving 29)
	(set-goal gl-wood-saving 29)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Schubkarre")
)

(defrule
	(not (civ-selected viking))
	(current-age >= castle-age)
	(or (building-type-count-total town-center < 1)
	(research-completed ri-wheel-barrow))
	; (or (building-type-count-total town-center < 1)
		; (and (research-completed ri-wheel-barrow)
			; (not (research-completed ri-hand-cart))))
	(goal gl-food-saving 29)
	(goal gl-wood-saving 29)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Schubkarre")
)

; (defrule
	; (not (civ-selected viking))
	; (current-age >= castle-age)
	; (not (goal strategy-goal sg-boom-imp))
	; (building-type-count-total town-center >= 1)
	; (unit-type-count-total villager >= 42)
	; (research-available ri-hand-cart)
	; (research-completed ri-wheel-barrow)
	; (goal gl-food-saving 0)
	; (goal gl-wood-saving 0)
; =>
	; (set-escrow-percentage food 30)
	; (set-escrow-percentage wood 20)
	; (set-goal gl-food-saving 29)
	; (set-goal gl-wood-saving 29)
	; (enable-timer 9 1)
	; ;(chat-to-player my-player-number "Spare auf Handkarren")
; )

; (defrule
	; (current-age >= castle-age)
	; (or (building-type-count-total town-center < 1)
	; (or	(not (research-completed ri-wheel-barrow))
		; (research-completed ri-hand-cart)))
	; (goal gl-food-saving 29)
	; (goal gl-wood-saving 29)
; =>
	; (release-escrow food)
	; (release-escrow wood)
	; (set-escrow-percentage food 0)
	; (set-escrow-percentage wood 0)
	; (set-goal gl-food-saving 0)
	; (set-goal gl-wood-saving 0)
	; ;(chat-to-player my-player-number "Spare nicht mehr auf Handkarren")
; )

(defrule
	(not (civ-selected burgundians))
	(not (goal strategy-goal sg-boom-imp))
	(building-type-count-total lumber-camp >= 1)
	(up-research-status c: castle-age >= research-pending)
	(research-available ri-bow-saw)
	(goal gl-food-saving 0)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage wood 30)
	(set-goal gl-food-saving 11)
	(set-goal gl-wood-saving 11)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Bogensaege")
)

(defrule
	(up-research-status c: feudal-age >= research-pending)
	(or (building-type-count-total lumber-camp < 1)
		(and (research-completed ri-bow-saw)
		(research-available ri-two-man-saw)))
	(goal gl-food-saving 11)
	(goal gl-wood-saving 11)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Bogensaege")
)

(defrule
	(civ-selected burgundians)
	(building-type-count-total lumber-camp >= 1)
	(up-research-status c: feudal-age >= research-pending)
	(research-available ri-bow-saw)
	(goal gl-food-saving 0)
	(goal gl-wood-saving 0)
=>
	(set-escrow-percentage food 20)
	(set-escrow-percentage wood 20)
	(set-goal gl-food-saving 12)
	(set-goal gl-wood-saving 12)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Bogensaege")
)

(defrule
	(up-research-status c: feudal-age >= research-pending)
	(or (building-type-count-total lumber-camp < 1)
		(and (research-completed ri-bow-saw)
		(research-available ri-two-man-saw)))
	(goal gl-food-saving 12)
	(goal gl-wood-saving 12)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Bogensaege")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total blacksmith >= 1)
	(or (unit-type-count-total cavalry-class > 2)
	(unit-type-count-total scout-cavalry-line > 2))
	(building-type-count-total stable >= 1)
	(research-available ri-scale-barding)
	(goal gl-food-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-goal gl-food-saving 13)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf 1. Kavallerie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (unit-type-count-total cavalry-class <= 2)
			(or (building-type-count-total stable < 1)
				(and (research-completed ri-scale-barding)
					(research-available ri-chain-barding)))))
	(goal gl-food-saving 13)
	(up-compare-goal gl-gold-saving != 13)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(set-goal gl-food-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 1. Kavallerie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total blacksmith >= 1)
	(or (unit-type-count-total cavalry-class > 4)
	(unit-type-count-total scout-cavalry-line > 4))
	(building-type-count-total stable >= 1)
	(research-available ri-chain-barding)
	(research-completed ri-scale-barding)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 45)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 13)
	(set-goal gl-gold-saving 13)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf 2. Kavallerie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (unit-type-count-total cavalry-class <= 4)
			(or (building-type-count-total stable < 1)
				(and (research-completed ri-chain-barding)
				(research-available ri-plate-barding)))))
	(goal gl-food-saving 13)
	(goal gl-gold-saving 13)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 2. Kavallerie-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total blacksmith >= 1)
	(or (unit-type-count-total cavalry-class > 4)
	(unit-type-count-total scout-cavalry-line > 4))
	(building-type-count-total stable >= 1)
	(research-available ri-plate-barding)
	(research-completed ri-chain-barding)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 25)
	(set-escrow-percentage gold 25)
	(set-goal gl-food-saving 13)
	(set-goal gl-gold-saving 13)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf 3. Kavallerie-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (unit-type-count-total cavalry-class <= 4)
			(or (building-type-count-total stable < 1)
				(research-completed ri-plate-barding))))
	(goal gl-food-saving 13)
	(goal gl-gold-saving 13)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 3. Kavallerie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total blacksmith >= 1)
	(unit-type-count-total infantry-class > 4)
	(building-type-count-total barracks >= 1)
	(research-available ri-scale-mail)
	(goal gl-food-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-goal gl-food-saving 20)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf 1. Infanterie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (unit-type-count-total infantry-class <= 4)
			(or (building-type-count-total barracks < 1)
				(and (research-completed ri-scale-mail)
				(research-available ri-chain-mail)))))
	(goal gl-food-saving 20)
	(up-compare-goal gl-gold-saving != 20)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(set-goal gl-food-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 1. Infanterie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total blacksmith >= 1)
	(unit-type-count-total infantry-class > 5)
	(building-type-count-total barracks >= 1)
	(research-available ri-chain-mail)
	(research-completed ri-scale-mail)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 45)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 20)
	(set-goal gl-gold-saving 20)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf 2. Infanterie-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (unit-type-count-total infantry-class <= 5)
			(or (building-type-count-total barracks < 1)
				(and (research-completed ri-chain-mail)
				(research-available ri-plate-mail)))))
	(goal gl-food-saving 20)
	(goal gl-gold-saving 20)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 2. Infanterie-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total blacksmith >= 1)
	(unit-type-count-total infantry-class > 8)
	(building-type-count-total barracks >= 1)
	(research-available ri-plate-mail)
	(research-completed ri-chain-mail)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 25)
	(set-escrow-percentage gold 25)
	(set-goal gl-food-saving 20)
	(set-goal gl-gold-saving 20)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf 3. Infanterie-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (unit-type-count-total infantry-class <= 8)
			(or (building-type-count-total barracks < 1)
				(research-completed ri-plate-mail))))
	(goal gl-food-saving 20)
	(goal gl-gold-saving 20)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf 3. Infanterie-Upgrade")
)

(defrule
	(building-type-count-total archery-range >= 1)
	(up-research-status c: imperial-age >= research-pending)
	(unit-type-count-total archer-line >= 3)
	(research-available ri-arbalest)
	(research-completed ri-crossbow)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage gold 30)
	(set-goal gl-food-saving 9)
	(set-goal gl-gold-saving 9)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Arbalest")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total archery-range < 1)
		(or (unit-type-count-total archer-line < 3)
			(research-completed ri-arbalest)))
	(goal gl-food-saving 9)
	(goal gl-gold-saving 9)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Arbalest")
)

(defrule
	(building-type-count-total blacksmith >= 1)
	(up-research-status c: imperial-age >= research-pending)
	(or (up-compare-goal gl-archery-class-units >= 3)
	(up-compare-goal gl-cavalry-archer-units > 5))
	(research-available ri-bracer)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage gold 30)
	(set-goal gl-food-saving 14)
	(set-goal gl-gold-saving 14)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Bracer")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total blacksmith < 1)
		(or (and (up-compare-goal gl-archery-class-units < 3)
		(up-compare-goal gl-cavalry-archer-units <= 5))
		(research-completed ri-bracer)))
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Bracer")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total barracks >= 1)
	(unit-type-count-total spearman-line >= 6)
	(research-available ri-halberdier)
	(research-completed ri-pikeman)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 20)
	(set-escrow-percentage gold 40)
	(set-goal gl-food-saving 41)
	(set-goal gl-gold-saving 41)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Hellebardiere")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total barracks < 1)
		(or (unit-type-count-total spearman-line < 6)
		(or (research-completed ri-halberdier)
		(not (research-completed ri-pikeman)))))
	(goal gl-food-saving 41)
	(goal gl-gold-saving 41)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Hellebardiere")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total archery-range >= 1)
	(unit-type-count-total cavalry-archer-line >= 5)
	(research-available ri-heavy-cavalry-archer)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 40)
	(set-escrow-percentage gold 30)
	(set-goal gl-food-saving 15)
	(set-goal gl-gold-saving 15)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf HeavyCA")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total archery-range < 1)
		(or (unit-type-count-total cavalry-archer-line < 5)
			(research-completed ri-heavy-cavalry-archer)))
	(goal gl-food-saving 15)
	(goal gl-gold-saving 15)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf HeavyCA")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total stable >= 1)
	(unit-type-count-total camel-line >= 5)
	(research-available ri-heavy-camel)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 40)
	(set-escrow-percentage gold 20)
	(set-goal gl-food-saving 16)
	(set-goal gl-gold-saving 16)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf HeavyCamel")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total stable < 1)
		(or (unit-type-count-total camel-line < 5)
			(and (research-completed ri-heavy-camel)
			(research-available ri-imperial-camel-rider))))
	(goal gl-food-saving 16)
	(goal gl-gold-saving 16)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf HeavyCamel")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total stable >= 1)
	(research-available ri-imperial-camel-rider)
	(unit-type-count-total camel-line >= 5)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 45)
	(set-escrow-percentage gold 25)
	(set-goal gl-food-saving 17)
	(set-goal gl-gold-saving 17)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Imperial Camel")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total stable < 1)
		(or (unit-type-count-total camel-line < 5)
			(research-completed ri-imperial-camel-rider)))
	(goal gl-food-saving 17)
	(goal gl-gold-saving 17)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Imperial Camel")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total stable >= 1)
	(civ-selected burgundians)
	(unit-type-count-total knight-line >= 4)
	(research-available ri-cavalier)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 30)
	(set-escrow-percentage gold 30)
	(set-goal gl-food-saving 18)
	(set-goal gl-gold-saving 18)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Chevalier-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(civ-selected burgundians)
	(or (building-type-count-total stable < 1)
		(or (unit-type-count-total knight-line < 4)
			(and (research-completed ri-cavalier)
			(research-available ri-paladin))))
	(goal gl-food-saving 18)
	(goal gl-gold-saving 18)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Chevalier-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total stable >= 1)
	(not (civ-selected burgundians))
	(unit-type-count-total knight-line >= 6)
	(research-available ri-cavalier)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 20)
	(set-escrow-percentage gold 20)
	(set-goal gl-food-saving 19)
	(set-goal gl-gold-saving 19)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Chevalier-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(not (civ-selected burgundians))
	(or (building-type-count-total stable < 1)
		(or (unit-type-count-total knight-line < 6)
			(and (research-completed ri-cavalier)
			(research-available ri-paladin))))
	(goal gl-food-saving 19)
	(goal gl-gold-saving 19)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Chevalier-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total stable >= 1)
	(unit-type-count-total knight-line >= 8)
	(research-available ri-paladin)
	(research-completed ri-cavalier)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 38)
	(set-escrow-percentage gold 30)
	(set-goal gl-food-saving 19)
	(set-goal gl-gold-saving 19)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Paladin-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total stable < 1)
		(or (unit-type-count-total knight-line < 8)
			(research-completed ri-paladin)))
	(goal gl-food-saving 19)
	(goal gl-gold-saving 19)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Paladin-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total barracks >= 1)
	(unit-type-count-total eagle-warrior-line >= 3)
	(research-available ri-eagle-warrior)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 20)
	(set-escrow-percentage gold 20)
	(set-goal gl-food-saving 24)
	(set-goal gl-gold-saving 24)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Eagle-Warrior-Upgrade")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(or (building-type-count-total barracks < 1)
		(or (unit-type-count-total eagle-warrior-line < 3)
			(and (research-completed ri-eagle-warrior)
			(research-available ri-elite-eagle-warrior))))
	(goal gl-food-saving 24)
	(goal gl-gold-saving 24)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Eagle-Warrior-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total barracks >= 1)
	(unit-type-count-total eagle-warrior-line >= 3)
	(research-available ri-elite-eagle-warrior)
	(research-completed ri-eagle-warrior)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 35)
	(set-escrow-percentage gold 25)
	(set-goal gl-food-saving 24)
	(set-goal gl-gold-saving 24)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Elite-Eagle-Warrior-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total barracks < 1)
		(or (unit-type-count-total eagle-warrior-line < 3)
			(research-completed ri-elite-eagle-warrior)))
	(goal gl-food-saving 24)
	(goal gl-gold-saving 24)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Elite-Eagle-Warrior-Upgrade")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total castle >= 1)
	(unit-type-count-total my-unique-unit-line >= 3)
	(research-available my-unique-unit-upgrade)
	(goal gl-food-saving 0)
	(goal gl-wood-saving 0)
	(goal gl-civ-uu-cost 1)
=>
	(set-escrow-percentage food 20)
	(set-escrow-percentage wood 20)
	(set-goal gl-food-saving 32)
	(set-goal gl-wood-saving 32)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf UU-Upgrade 1")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total castle < 1)
	(or (unit-type-count-total my-unique-unit-line < 3)
	(research-completed my-unique-unit-upgrade)))
	(goal gl-food-saving 32)
	(goal gl-wood-saving 32)
	(goal gl-civ-uu-cost 1)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf UU-Upgrade 1")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total castle >= 1)
	(unit-type-count-total my-unique-unit-line >= 3)
	(research-available my-unique-unit-upgrade)
	(goal gl-wood-saving 0)
	(goal gl-gold-saving 0)
	(goal gl-civ-uu-cost 2)
=>
	(set-escrow-percentage wood 20)
	(set-escrow-percentage gold 20)
	(set-goal gl-wood-saving 33)
	(set-goal gl-gold-saving 33)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf UU-Upgrade 2")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total castle < 1)
	(or (unit-type-count-total my-unique-unit-line < 3)
	(research-completed my-unique-unit-upgrade)))
	(goal gl-wood-saving 33)
	(goal gl-gold-saving 33)
	(goal gl-civ-uu-cost 2)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf UU-Upgrade 2")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total castle >= 1)
	(unit-type-count-total my-unique-unit-line >= 3)
	(research-available my-unique-unit-upgrade)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
	(goal gl-civ-uu-cost 3)
=>
	(set-escrow-percentage food 20)
	(set-escrow-percentage gold 20)
	(set-goal gl-food-saving 34)
	(set-goal gl-gold-saving 34)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf UU-Upgrade 3")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(or (building-type-count-total castle < 1)
	(or (unit-type-count-total my-unique-unit-line < 3)
	(research-completed my-unique-unit-upgrade)))
	(goal gl-food-saving 34)
	(goal gl-gold-saving 34)
	(goal gl-civ-uu-cost 3)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf UU-Upgrade 3")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(goal gl-stone-saving 0)
	(goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle < 1)
=>
	(set-escrow-percentage stone 100)
	(set-goal gl-stone-saving 38)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Burg")
)

(defrule
	(up-research-status c: castle-age >= research-pending)
	(goal gl-stone-saving 38)
	(goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle >= 1)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 0)
	(not (goal strategy-goal sg-fastcastle-uu))
	(nor(civ-selected bulgarians)
	(civ-selected slavic))
=>
	(set-escrow-percentage stone 75)
	(set-goal gl-stone-saving 38)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Burg")
)

; (defrule
	; (current-age == castle-age)
	; (goal gl-stone-saving 38)
	; (not (civ-selected bulgarians)
	; (civ-selected slavic))
; =>
	; (set-escrow-percentage stone 0)
	; (set-goal gl-stone-saving 0)
	; ;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
; )

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 0)
	(civ-selected bulgarians)
	(building-type-count-total castle < 1)
	(not (goal strategy-goal sg-fastcastle-uu))
=>
	(set-escrow-percentage stone 75)
	(set-goal gl-stone-saving 38)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 38)
	(civ-selected bulgarians)
	(building-type-count-total castle >= 1)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 0)
	(goal gl-wood-saving 0)
	(civ-selected slavic)
	(research-completed my-second-unique-research)
=>
	(set-escrow-percentage stone 75)
	(set-escrow-percentage wood 25)
	(set-goal gl-stone-saving 38)
	(set-goal gl-wood-saving 38)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 38)
	(goal gl-wood-saving 38)
	(civ-selected slavic)
	(or (building-type-count-total castle >= 1)
	(not (research-completed my-second-unique-research)))
=>
	(release-escrow stone)
	(release-escrow wood)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-stone-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 0)
	(civ-selected slavic)
	(not (research-completed my-second-unique-research))
=>
	(set-escrow-percentage stone 75)
	(set-goal gl-stone-saving 38)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 38)
	(goal gl-wood-saving 38)
	(civ-selected slavic)
	(or (building-type-count-total castle >= 1)
	(research-completed my-second-unique-research))
=>
	(release-escrow stone)
	(release-escrow wood)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-stone-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 0)
	(building-type-count-total castle >= 1)
	(civ-selected bulgarians)
=>
	(set-escrow-percentage stone 75)
	(set-goal gl-stone-saving 39)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Krepost")
)

(defrule
	(current-age == castle-age)
	(goal gl-stone-saving 39)
	(building-type-count-total castle < 1)
	(civ-selected bulgarians)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Krepost")
)

(defrule
	(current-age >= castle-age)
	(goal gl-stone-saving 39)
	(building-type-count-total castle < 1)
	(civ-selected bulgarians)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Krepost")
)

(defrule
	(current-age >= castle-age)
	(goal gl-stone-saving 38)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(set-goal gl-stone-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
)

(defrule
	(current-age >= castle-age)
	(goal gl-stone-saving 38)
	(goal gl-wood-saving 38)
	(civ-selected slavic)
	(or (building-type-count-total castle >= 1)
	(research-completed my-second-unique-research))
=>
	(release-escrow stone)
	(release-escrow wood)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-stone-saving 0)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Burg")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(goal gl-wood-saving 0)
	(goal gl-gold-saving 0)
	(building-type-count-total castle >= 1)
	(unit-type-count-total trebuchet-set < 2)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(set-escrow-percentage wood 50)
	(set-escrow-percentage gold 50)
	(set-goal gl-wood-saving 25)
	(set-goal gl-gold-saving 25)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Tribok")
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(goal gl-wood-saving 25)
	(goal gl-gold-saving 25)
	(or (building-type-count-total castle < 1)
	(or (unit-type-count-total trebuchet-set >= 2)
	(up-compare-goal gl-military-advantage < -4)))
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Tribok")
)


(defrule
	(true)
=>
	(up-modify-goal gl-darkage-safe g:= d-villager-goal)
	(up-modify-goal gl-darkage-safe c:- 4)
	;(up-chat-data-to-self "Saving resources for feudal-age at %d villagers" g: gl-darkage-safe)
	(disable-self)
)

(defrule
	(true)
=>
	(up-modify-goal gl-feudalage-safe g:= f-villager-goal)
	(up-modify-goal gl-feudalage-safe c:- 6)
	;(up-chat-data-to-self "Saving resources for castle-age at %d villagers" g: gl-feudalage-safe)
	(disable-self)
)

(defrule
	(true)
=>
	(up-modify-goal gl-castleage-safe g:= c-villager-goal)
	(up-modify-goal gl-castleage-safe c:- 12)	
	;(up-chat-data-to-self "Saving resources for imperial-age at %d villagers" g: gl-castleage-safe)
	(disable-self)
)

(defrule
	(research-available feudal-age)
	(civilian-population g:>= gl-darkage-safe)
	(goal gl-food-saving 0)
=>
	(set-escrow-percentage food 50)
	(set-goal gl-food-saving 21)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Feudalzeit")
)

(defrule
	(or (research-completed feudal-age)
	(civilian-population g:< gl-darkage-safe))
	(goal gl-food-saving 21)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-goal gl-food-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Feudalzeit")
)

(defrule
	(research-available castle-age)
	(civilian-population g:>= gl-feudalage-safe)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 55)
	(set-escrow-percentage gold 20)
	(set-goal gl-food-saving 22)
	(set-goal gl-gold-saving 22)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Ritterzeit")
)

(defrule
	(or (research-completed castle-age)
	(civilian-population g:< gl-feudalage-safe))
	(goal gl-food-saving 22)
	(goal gl-gold-saving 22)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Ritterzeit")
)

(defrule
	(research-available imperial-age)
	(civilian-population g:>= gl-castleage-safe)
	(up-compare-goal gl-military-advantage >= -25)
	(goal gl-food-saving 0)
	(goal gl-gold-saving 0)
=>
	(set-escrow-percentage food 40)
	(set-escrow-percentage gold 25)
	(set-goal gl-food-saving 23)
	(set-goal gl-gold-saving 23)
	(enable-timer 9 1)
	;(chat-to-player my-player-number "Spare auf Imperialzeit")
)

(defrule
	(or (research-completed imperial-age)
	(or (civilian-population g:< gl-castleage-safe)
	(up-compare-goal gl-military-advantage < -25)))
	(goal gl-food-saving 23)
	(goal gl-gold-saving 23)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	;(chat-to-player my-player-number "Spare nicht mehr auf Imperialzeit")
)


;endregion

;region Escrow-Caps ================================================

(defrule
	(goal gl-food-saving 1)
	(escrow-amount food > 70)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-wood-saving 1)
	(escrow-amount wood > 60)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 2)
	(escrow-amount wood > 185)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 3)
	(escrow-amount wood > 360)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 4)
	(escrow-amount wood > 185)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 5)
	(escrow-amount wood > 185)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 6)
	(escrow-amount wood > 160)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 37)
	(escrow-amount wood > 185)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-wood-saving 7)
	(escrow-amount wood > 285)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-stone-saving 7)
	(escrow-amount stone > 110)
=>
	(up-modify-escrow stone c:- 10)
)

(defrule
	(goal gl-wood-saving 8)
	(escrow-amount wood > 285)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-stone-saving 8)
	(escrow-amount stone > 110)
=>
	(up-modify-escrow stone c:- 10)
)

(defrule
	(goal gl-food-saving 9)
	(not (research-completed ri-crossbow))
	(escrow-amount food > 185)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 9)
	(not (research-completed ri-crossbow))
	(escrow-amount gold > 135)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 9)
	(research-completed ri-crossbow)
	(not (research-completed ri-arbalest))
	(escrow-amount food > 460)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 9)
	(research-completed ri-crossbow)
	(not (research-completed ri-arbalest))
	(escrow-amount gold > 410)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 14)
	(not (research-completed ri-fletching))
	(escrow-amount food > 110)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 14)
	(not (research-completed ri-fletching))
	(escrow-amount gold > 60)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 14)
	(research-completed ri-fletching)
	(not (research-completed ri-bodkin-arrow))
	(escrow-amount food > 210)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 14)
	(research-completed ri-fletching)
	(not (research-completed ri-bodkin-arrow))
	(escrow-amount gold > 110)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 14)
	(research-completed ri-bodkin-arrow)
	(not (research-completed ri-bracer))
	(escrow-amount food > 310)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 14)
	(research-completed ri-bodkin-arrow)
	(not (research-completed ri-bracer))
	(escrow-amount gold > 210)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-wood-saving 40)
	(escrow-amount wood > 240)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-gold-saving 40)
	(escrow-amount gold > 140)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-wood-saving 25)
	(escrow-amount wood > 210)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-gold-saving 25)
	(escrow-amount gold > 210)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-wood-saving 10)
	(escrow-amount wood > 310)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-gold-saving 10)
	(escrow-amount gold > 185)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 26)
	(escrow-amount food > 310)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 26)
	(escrow-amount gold > 210)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 29)
	(escrow-amount food > 185)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-wood-saving 29)
	(escrow-amount wood > 60)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-food-saving 11)
	(escrow-amount food > 160)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-wood-saving 11)
	(escrow-amount wood > 110)
=>
	(up-modify-escrow wood c:- 10)
)


(defrule
	(goal gl-food-saving 12)
	(escrow-amount food > 100)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-wood-saving 12)
	(escrow-amount wood > 110)
=>
	(up-modify-escrow wood c:- 10)
)

(defrule
	(goal gl-food-saving 13)
	(escrow-amount food > 160)
	(not (research-completed ri-scale-barding))
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-food-saving 13)
	(escrow-amount food > 260)
	(research-completed ri-scale-barding)
	(not (research-completed ri-chain-barding))
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 13)
	(escrow-amount gold > 160)
	(research-completed ri-scale-barding)
	(not (research-completed ri-chain-barding))
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 13)
	(escrow-amount food > 360)
	(research-completed ri-chain-barding)
	(not (research-completed ri-plate-barding))
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-food-saving 13)
	(escrow-amount gold > 210)
	(research-completed ri-chain-barding)
	(not (research-completed ri-plate-barding))
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 20)
	(escrow-amount food > 160)
	(not (research-completed ri-scale-barding))
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-food-saving 20)
	(escrow-amount food > 210)
	(research-completed ri-scale-barding)
	(not (research-completed ri-chain-barding))
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 20)
	(escrow-amount gold > 110)
	(research-completed ri-scale-barding)
	(not (research-completed ri-chain-barding))
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 20)
	(escrow-amount food > 310)
	(research-completed ri-chain-barding)
	(not (research-completed ri-plate-barding))
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-food-saving 20)
	(escrow-amount gold > 160)
	(research-completed ri-chain-barding)
	(not (research-completed ri-plate-barding))
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 41)
	(escrow-amount food > 310)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 41)
	(escrow-amount gold > 610)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 15)
	(escrow-amount food > 910)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 15)
	(escrow-amount gold > 510)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 16)
	(escrow-amount food > 335)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 16)
	(escrow-amount gold > 370)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 17)
	(escrow-amount food > 1010)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 17)
	(escrow-amount gold > 510)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 18)
	(escrow-amount food > 160)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 18)
	(escrow-amount gold > 160)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 19)
	(not (research-completed ri-cavalier))
	(escrow-amount food > 310)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 19)
	(not (research-completed ri-cavalier))
	(escrow-amount gold > 310)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 19)
	(research-completed ri-cavalier)
	(not (civ-selected burgundians))
	(escrow-amount food > 1310)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 19)
	(research-completed ri-cavalier)
	(not (civ-selected burgundians))
	(escrow-amount gold > 760)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 19)
	(research-completed ri-cavalier)
	(civ-selected burgundians)
	(escrow-amount food > 660)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 19)
	(research-completed ri-cavalier)
	(civ-selected burgundians)
	(escrow-amount gold > 385)
=>
	(up-modify-escrow gold c:- 10)
)



(defrule
	(goal gl-food-saving 24)
	(not (research-completed ri-eagle-warrior))
	(escrow-amount food > 210)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 24)
	(not (research-completed ri-eagle-warrior))
	(escrow-amount gold > 210)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 24)
	(research-completed ri-eagle-warrior)
	(escrow-amount food > 810)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 24)
	(research-completed ri-eagle-warrior)
	(escrow-amount gold > 510)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-stone-saving 38)
	(escrow-amount stone > 660)
=>
	(up-modify-escrow stone c:- 10)
)

(defrule
	(goal gl-stone-saving 39)
	(escrow-amount stone > 360)
=>
	(up-modify-escrow stone c:- 10)
)

(defrule
	(goal gl-food-saving 21)
	(not (civ-selected italian))
	(escrow-amount food > 510)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-food-saving 21)
	(civ-selected italian)
	(escrow-amount food > 435)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-food-saving 22)
	(not (civ-selected italian))
	(escrow-amount food > 810)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 22)
	(not (civ-selected italian))
	(escrow-amount gold > 210)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 22)
	(civ-selected italian)
	(escrow-amount food > 690)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 22)
	(civ-selected italian)
	(escrow-amount gold > 180)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 23)
	(not (civ-selected italian))
	(not (civ-selected byzantine))
	(escrow-amount food > 1010)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 23)
	(not (civ-selected italian))
	(not (civ-selected byzantine))
	(escrow-amount gold > 810)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 23)
	(civ-selected italian)
	(escrow-amount food > 860)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 23)
	(civ-selected italian)
	(escrow-amount gold > 690)
=>
	(up-modify-escrow gold c:- 10)
)

(defrule
	(goal gl-food-saving 23)
	(civ-selected byzantine)
	(escrow-amount food > 677)
=>
	(up-modify-escrow food c:- 10)
)

(defrule
	(goal gl-gold-saving 23)
	(civ-selected byzantine)
	(escrow-amount gold > 546)
=>
	(up-modify-escrow gold c:- 10)
)

;endregion

;region Retreat Rules new (Thanks to Esty for the "Esty the Tuto Master's" AI tutorial!) ================================

;loop through enemy tcs

(defrule
	(players-building-type-count focus-player town-center >= 1)
=>
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: town-center c: 10)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-tcs g:= gl-remote-total)
	;(up-chat-data-to-self "Nr enemy tcs: %d" g: gl-tcs)
	;(up-chat-data-to-self "Current Focus TC: %d" g: gl-tc-loop-counter)
)

(defrule
	(up-compare-goal split-rule-goal g:>= 0)
=>
	(set-goal split-rule-goal 0)
)

(defrule
	(players-building-type-count focus-player town-center >= 1)
	(up-set-target-object search-remote g: gl-tc-loop-counter) ;enemy tc was found?
=>
	(up-get-point position-object enemy-point-x) ;get position of first tc in the list
	(up-set-target-point enemy-point-x) 
	;(up-get-search-state gl-local-total)
)

(defrule ;pre castle-age rules
	(or (current-age >= castle-age)
	(or (unit-type-count-total militiaman-line >= 20)
	(unit-type-count-total battering-ram-line >= 1)))
=>
	(up-jump-rule 8)
)

(defrule ;if tc is garrisoned, jump next code section
	(players-building-type-count focus-player town-center >= 1)
	(up-set-target-object search-remote g: gl-tc-loop-counter)
	(or (up-object-data object-data-garrison-count >= 3)
	(up-object-data object-data-hitpoints <= 450))
=>
	(up-jump-rule 3)
)	
	
(defrule ;tc ungarrisoned
	(goal split-rule-goal 0)
	(players-building-type-count focus-player town-center > 0)
=>
	(up-full-reset-search)
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 9) ;distance from which units shall retreat
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(set-goal split-rule-goal 47)
)

(defrule	
	(goal split-rule-goal 47)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-point-x c: -8) 
	(up-cross-tiles object-point-x enemy-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 3)
	(set-goal split-rule-goal 48)
)

(defrule
	(goal split-rule-goal 48)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 9)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(up-find-local c: -1 c: 20)	;how many units should retreat?
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)

(defrule ; if tc is garrisoned
	(players-building-type-count focus-player town-center >= 1)
	(up-set-target-object search-remote g: gl-tc-loop-counter)
	(or (up-object-data object-data-garrison-count < 3)
	(up-object-data object-data-hitpoints <= 450))
=>
	(up-jump-rule 3)
)	
	
(defrule
	(goal split-rule-goal 0) ;tc garrisoned
	(players-building-type-count focus-player town-center > 0)
=>
	(up-full-reset-search)
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 10)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(set-goal split-rule-goal 47)
)

(defrule	
	(goal split-rule-goal 47)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-point-x c: -8)
	(up-cross-tiles object-point-x enemy-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 4)
	(set-goal split-rule-goal 48)
)

(defrule
	(goal split-rule-goal 48)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 10)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(up-find-local c: -1 c: 40)	
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)


(defrule ;castle-age rules
	(or	(current-age != castle-age)																
	(or	(unit-type-count infantry-class > 24)	
	(or	(unit-type-count eagle-warrior-line > 9)
	(or	(unit-type-count huskarl-set > 9)
	(or	(unit-type-count ghulam-line > 9)
	(or (unit-type-count cavalry-class > 14)
	(or (unit-type-count battering-ram-line > 0)
	(or (unit-type-count armored-elephant-line > 0)
	(military-population > 34)))))))))	
=>	
	(up-jump-rule 8)
)
	
(defrule ;if tc is garrisoned, jump next code section
	(players-building-type-count focus-player town-center >= 1)
	(up-set-target-object search-remote g: gl-tc-loop-counter)
	(or (up-object-data object-data-garrison-count >= 3)
	(up-object-data object-data-hitpoints <= 450))
=>
	(up-jump-rule 3)
)	
	
(defrule ;tc ungarrisoned
	(goal split-rule-goal 0)
	(players-building-type-count focus-player town-center > 0)
=>
	(up-full-reset-search)
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 8) ;distance from which units shall retreat
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class) ;does not work
	(up-filter-exclude -1 -1 -1 armored-elephant-line) ;does not work
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(up-filter-exclude -1 -1 -1 scout-cavalry-class)
	(set-goal split-rule-goal 47)
)

(defrule	
	(goal split-rule-goal 47)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-point-x c: -8) 
	(up-cross-tiles object-point-x enemy-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 3)
	(set-goal split-rule-goal 48)
)

(defrule
	(goal split-rule-goal 48)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 8)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class) ;does not work
	(up-filter-exclude -1 -1 -1 armored-elephant-line) ;does not work
	(up-filter-exclude -1 -1 -1 cavalry-class) 
	(up-filter-exclude -1 -1 -1 scout-cavalry-class) 
	(up-find-local c: -1 c: 40)	
	(up-remove-objects search-local object-data-class == cavalry-class)
	(up-remove-objects search-local object-data-class == siege-weapon-class)
	(up-remove-objects search-local object-data-class == scout-cavalry-class)
	(up-remove-objects search-local object-data-type == armored-elephant)
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)

(defrule ; if tc is garrisoned
	(players-building-type-count focus-player town-center >= 1)
	(up-set-target-object search-remote g: gl-tc-loop-counter)
	(or (up-object-data object-data-garrison-count < 3)
	(up-object-data object-data-hitpoints <= 450))
=>
	(up-jump-rule 3)
)	
	
(defrule ;tc garrisoned
	(goal split-rule-goal 0) 
	(players-building-type-count focus-player town-center > 0)
=>
	(up-full-reset-search)
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 9)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class) ;does not work
	(up-filter-exclude -1 -1 -1 armored-elephant-line) ;does not work
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(set-goal split-rule-goal 47)
)

(defrule	
	(goal split-rule-goal 47)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-point-x c: -8)
	(up-cross-tiles object-point-x enemy-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 4)
	(set-goal split-rule-goal 48)
)

(defrule
	(goal split-rule-goal 48)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-point-x)
	(up-filter-distance c: -1 c: 9)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class) ;does not work
	(up-filter-exclude -1 -1 -1 armored-elephant-line) ;does not work
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(up-find-local c: -1 c: 40)	
	(up-remove-objects search-local object-data-class == cavalry-class)
	(up-remove-objects search-local object-data-class == siege-weapon-class)
	(up-remove-objects search-local object-data-type == armored-elephant)
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)

;go through the list

(defrule
	(players-building-type-count focus-player town-center >= 1)
	;(up-set-target-object search-remote g: gl-loop-counter) ;did we run through the list?
	(up-compare-goal gl-tc-loop-counter g:>= gl-tcs)
=>
	(set-goal gl-tc-loop-counter 0)
	(up-jump-rule 1) ;end loop
)

(defrule
	(players-building-type-count focus-player town-center >= 1) 
	(up-point-contains enemy-point-x c: town-center)
	(up-compare-goal gl-tc-loop-counter g:< gl-tcs)
=>
	(up-modify-goal gl-tc-loop-counter c:+ 1) ;go to next list-entry
)

;region old tc retreat rule
;Retreating from TCs      

; (defrule										
	; (or	(current-age > castle-age)						
	; (or	(unit-type-count infantry-class > 19)				
	; (or (unit-type-count cavalry-class > 15)
	; (or (unit-type-count battering-ram-line > 0)
	; (or (unit-type-count armored-elephant-line > 0)
	; (military-population > 34))))))	
; =>	
	; (up-jump-rule 13)
; )	

; ;loop through enemy tcs

; (defrule
	; (players-building-type-count focus-player town-center >= 1)
; =>
	; (up-full-reset-search)
	; (up-filter-status c: status-ready c: list-active)
	; (up-find-status-remote c: town-center c: 10)
	; (up-get-search-state gl-local-total)
	; (up-modify-goal gl-tcs g:= gl-remote-total)
	; ;(up-chat-data-to-self "Nr enemy tcs: %d" g: gl-tcs)
	; ;(up-chat-data-to-self "Current Focus TC: %d" g: gl-tc-loop-counter)
; )

; (defrule
	; (up-compare-goal split-rule-goal g:>= 0)
; =>
	; (set-goal split-rule-goal 0)
; )

; (defrule
	; (players-building-type-count focus-player town-center >= 1)
	; (up-set-target-object search-remote g: gl-tc-loop-counter) ;enemy tc was found?
; =>
	; (up-get-point position-object enemy-point-x) ;get position of first tc in the list
	; (up-set-target-point enemy-point-x) 
	; ;(up-get-search-state gl-local-total)
; )

; (defrule ;if tc is garrisoned, jump next code section
	; (players-building-type-count focus-player town-center >= 1)
	; (up-set-target-object search-remote g: gl-tc-loop-counter)
	; (or (up-object-data object-data-garrison-count >= 3)
	; (up-object-data object-data-hitpoints <= 450))
; =>
	; (up-jump-rule 3)
; )	
	
; (defrule ;tc ungarrisoned
	; (goal split-rule-goal 0)
	; (players-building-type-count focus-player town-center > 0)
; =>
	; (up-full-reset-search)
	; (up-set-target-point enemy-point-x)
	; (up-filter-distance c: -1 c: 9) ;distance from which units shall retreat
	; (up-filter-include cmdid-military -1 -1 -1)
	; (up-filter-exclude -1 -1 -1 siege-weapon-class)
	; (up-filter-exclude -1 -1 -1 armored-elephant-line)
	; (set-goal split-rule-goal 47)
; )

; (defrule	
	; (goal split-rule-goal 47)
	; (up-find-local c: -1 c: 1)
	; (up-set-target-object search-local c: 0)
; =>
	; (up-set-target-object search-local c: 0)
	; (up-get-point position-object object-point-x)
	; (up-lerp-tiles object-point-x enemy-point-x c: -8) 
	; (up-cross-tiles object-point-x enemy-point-x c: 9)
	; (up-bound-point object-point-x object-point-x)	
	; (set-goal retreating-goal YES)
	; (enable-timer retreating-timer 3)
	; (set-goal split-rule-goal 48)
; )

; (defrule
	; (goal split-rule-goal 48)
; =>	
	; (up-full-reset-search)	
	; (up-set-target-point enemy-point-x)
	; (up-filter-distance c: -1 c: 9)
	; (up-filter-include cmdid-military -1 -1 -1)	
	; (up-filter-exclude -1 -1 -1 siege-weapon-class)
	; (up-filter-exclude -1 -1 -1 armored-elephant-line)
	; (up-find-local c: -1 c: 40)	
	; (up-target-point object-point-x action-move formation-line stance-no-attack)
	; ;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	; (enable-timer split-stance-timer 6)
; )

; (defrule ; if tc is garrisoned
	; (players-building-type-count focus-player town-center >= 1)
	; (up-set-target-object search-remote g: gl-tc-loop-counter)
	; (or (up-object-data object-data-garrison-count < 3)
	; (up-object-data object-data-hitpoints <= 450))
; =>
	; (up-jump-rule 3)
; )	
	
; (defrule
	; (goal split-rule-goal 0) ;tc garrisoned
	; (players-building-type-count focus-player town-center > 0)
; =>
	; (up-full-reset-search)
	; (up-set-target-point enemy-point-x)
	; (up-filter-distance c: -1 c: 10)
	; (up-filter-include cmdid-military -1 -1 -1)
	; (up-filter-exclude -1 -1 -1 siege-weapon-class)
	; (up-filter-exclude -1 -1 -1 armored-elephant-line)
	; (set-goal split-rule-goal 47)
; )

; (defrule	
	; (goal split-rule-goal 47)
	; (up-find-local c: -1 c: 1)
	; (up-set-target-object search-local c: 0)
; =>
	; (up-set-target-object search-local c: 0)
	; (up-get-point position-object object-point-x)
	; (up-lerp-tiles object-point-x enemy-point-x c: -8)
	; (up-cross-tiles object-point-x enemy-point-x c: 9)
	; (up-bound-point object-point-x object-point-x)	
	; (set-goal retreating-goal YES)
	; (enable-timer retreating-timer 4)
	; (set-goal split-rule-goal 48)
; )

; (defrule
	; (goal split-rule-goal 48)
; =>	
	; (up-full-reset-search)	
	; (up-set-target-point enemy-point-x)
	; (up-filter-distance c: -1 c: 10)
	; (up-filter-include cmdid-military -1 -1 -1)	
	; (up-filter-exclude -1 -1 -1 siege-weapon-class)
	; (up-filter-exclude -1 -1 -1 armored-elephant-line)
	; (up-find-local c: -1 c: 40)	
	; (up-target-point object-point-x action-move formation-line stance-no-attack)
	; ;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	; (enable-timer split-stance-timer 6)
; )

; (defrule
	; (players-building-type-count focus-player town-center >= 1)
	; ;(up-set-target-object search-remote g: gl-loop-counter) ;did we run through the list?
	; (up-compare-goal gl-tc-loop-counter g:>= gl-tcs)
; =>
	; (set-goal gl-tc-loop-counter 0)
	; (up-jump-rule 1) ;end loop
; )

; (defrule
	; (players-building-type-count focus-player town-center >= 1) 
	; (up-point-contains enemy-point-x c: town-center)
	; (up-compare-goal gl-tc-loop-counter g:< gl-tcs)
; =>
	; (up-modify-goal gl-tc-loop-counter c:+ 1) ;go to next list-entry
; )
;endregion
	
; Retreating from Castle 

(defrule
	(players-building-type-count focus-player castle >= 1)
=>	
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
    (up-find-status-remote c: castle c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(players-building-type-count focus-player castle >= 1)
	(up-compare-goal gl-remote-total > 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-jump-rule 8)
)

;loop through enemy castles

(defrule													
	(or (unit-type-count-total trebuchet-set > 0)
	(or (unit-type-count-total armored-elephant-line >= 1)
	(or (unit-type-count-total battering-ram-line >= 1)
	(unit-type-count-total bombard-cannon >= 1))))
=>	
	(up-jump-rule 8)
)

(defrule
	(players-building-type-count focus-player castle >= 1)
=>
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: castle c: 20)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-castles g:= gl-remote-total)
)

(defrule
	(up-compare-goal split-rule-goal g:>= 0)
=>
	(set-goal split-rule-goal 0)
)

(defrule
	(players-building-type-count focus-player castle >= 1)
	(up-set-target-object search-remote g: gl-castle-loop-counter)
=>
	(up-get-point position-object enemy-castle-point-x)
	(up-set-target-point enemy-castle-point-x)
	;(up-get-search-state gl-local-total)
)

(defrule
	(players-building-type-count focus-player castle > 0)
	(goal split-rule-goal 0)
=>
	(up-full-reset-search)
	(up-set-target-point enemy-castle-point-x)
	(up-filter-distance c: -1 c: 14)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class) ;does not work
	(up-filter-exclude -1 -1 -1 armored-elephant-line) ;does not work
	(set-goal split-rule-goal 3)
)

(defrule	
	(goal split-rule-goal 3)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-castle-point-x c: -8)
	(up-cross-tiles object-point-x enemy-castle-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 5)
	(set-goal split-rule-goal 4)
)

(defrule
	(goal split-rule-goal 4)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-castle-point-x)
	(up-filter-distance c: -1 c: 14)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class) ;does not work
	(up-filter-exclude -1 -1 -1 armored-elephant-line) ;does not work
	(up-find-local c: -1 c: 40)	
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)

(defrule
	(players-building-type-count focus-player castle >= 1)
	;(up-set-target-object search-remote g: gl-loop-counter)
	(up-compare-goal gl-castle-loop-counter g:>= gl-castles)
=>
	(set-goal gl-castle-loop-counter 0)
	(up-jump-rule 1)
)

(defrule
	(players-building-type-count focus-player castle >= 1)
	(up-point-contains enemy-castle-point-x c: castle)
	(up-compare-goal gl-remote-total > 0)
	(up-compare-goal gl-castle-loop-counter g:< gl-castles)
=>
	(up-modify-goal gl-castle-loop-counter c:+ 1) ;go to next list-entry
)

; Retreating from Enemy Towers

(defrule															
	(or	(military-population > 34)					
	(or (unit-type-count battering-ram-line > 0)
	(or (unit-type-count armored-elephant-line > 0)		
	(or (unit-type-count trebuchet > 0)
	(or (unit-type-count bombard-cannon > 0)
	(or (unit-type-count cavalry-class >= 4)
	(unit-type-count infantry-class >= 6)))))))
=>	
	(up-jump-rule 13)
)	

(defrule
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
=>	
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active) ;don't retreat if enemy is building a tower
    (up-find-status-remote c: tower-type c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
	(up-compare-goal gl-remote-total > 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-jump-rule 11)
)

;loop through enemy towers

(defrule
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
=>
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: tower-type c: 10)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-enemy-towers g:= gl-remote-total)
)

(defrule
	(up-compare-goal split-rule-goal g:>= 0)
=>
	(set-goal split-rule-goal 0)
)

(defrule
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
	(up-set-target-object search-remote g: gl-tower-loop-counter)
=>
	(up-get-point position-object enemy-tower-point-x)
	(up-set-target-point enemy-tower-point-x)
	;(up-get-search-state gl-local-total)
)

(defrule ; skip if tower is not garrisoned
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
	(up-set-target-object search-remote g: gl-tower-loop-counter)
	(or (up-object-data object-data-garrison-count < 2)
	(up-object-data object-data-hitpoints <= 170))
=>
	(up-jump-rule 3)
)	

(defrule
	(goal split-rule-goal 0)
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
=>
	(up-full-reset-search)
	(up-set-target-point enemy-tower-point-x)
	(up-filter-distance c: -1 c: 10)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(up-filter-exclude -1 -1 -1 scout-cavalry-class)
	(up-filter-exclude -1 -1 -1 infantry-class)
	(set-goal split-rule-goal 6)
)

(defrule	
	(goal split-rule-goal 6)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-tower-point-x c: -8)
	(up-cross-tiles object-point-x enemy-tower-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 4)
	(set-goal split-rule-goal 7)
)

(defrule
	(goal split-rule-goal 7)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-tower-point-x)
	(up-filter-distance c: -1 c: 10)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(up-filter-exclude -1 -1 -1 scout-cavalry-class)
	(up-filter-exclude -1 -1 -1 infantry-class)
	(up-find-local c: -1 c: 40)	
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)

(defrule ; skip if tower is garrisoned
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
	(up-set-target-object search-remote g: gl-tower-loop-counter)
	(up-object-data object-data-garrison-count >= 2)
=>
	(up-jump-rule 3)
)	

(defrule
	(goal split-rule-goal 0)
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
=>
	(up-full-reset-search)
	(up-set-target-point enemy-tower-point-x)
	(up-filter-distance c: -1 c: 9)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(up-filter-exclude -1 -1 -1 scout-cavalry-class)
	(up-filter-exclude -1 -1 -1 infantry-class)
	(set-goal split-rule-goal 6)
)

(defrule	
	(goal split-rule-goal 6)
	(up-find-local c: -1 c: 1)
	(up-set-target-object search-local c: 0)
=>
	(up-set-target-object search-local c: 0)
	(up-get-point position-object object-point-x)
	(up-lerp-tiles object-point-x enemy-tower-point-x c: -8)
	(up-cross-tiles object-point-x enemy-tower-point-x c: 9)
	(up-bound-point object-point-x object-point-x)	
	(set-goal retreating-goal YES)
	(enable-timer retreating-timer 4)
	(set-goal split-rule-goal 7)
)

(defrule
	(goal split-rule-goal 7)
=>	
	(up-full-reset-search)	
	(up-set-target-point enemy-tower-point-x)
	(up-filter-distance c: -1 c: 9)
	(up-filter-include cmdid-military -1 -1 -1)	
	(up-filter-exclude -1 -1 -1 siege-weapon-class)
	(up-filter-exclude -1 -1 -1 armored-elephant-line)
	(up-filter-exclude -1 -1 -1 cavalry-class)
	(up-filter-exclude -1 -1 -1 scout-cavalry-class)
	(up-filter-exclude -1 -1 -1 infantry-class)
	(up-find-local c: -1 c: 40)	
	(set-strategic-number sn-disable-attack-groups 1)
	(up-target-point object-point-x action-move formation-line stance-no-attack)
	;(up-target-point object-point-x action-move formation-line stance-stand-ground)
	(enable-timer split-stance-timer 6)
)

(defrule
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
	;(up-set-target-object search-remote g: gl-loop-counter)
	(up-compare-goal gl-tower-loop-counter g:>= gl-enemy-towers)
=>
	(set-goal gl-tower-loop-counter 0)
	(up-jump-rule 1)
)

(defrule
	(or (players-building-type-count focus-player watch-tower >= 1)
	(players-building-type-count focus-player donjon >= 1))
	(up-point-contains enemy-tower-point-x c: tower-type)
	(up-compare-goal gl-tower-loop-counter g:< gl-enemy-towers)
=>
	(up-modify-goal gl-tower-loop-counter c:+ 1) ;go to next list-entry
)

;retreat with scout from enemy villagers
(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(or (unit-type-count scout-cavalry-line >= 1)
	(or (unit-type-count eagle-warrior-line >= 1)
	(unit-type-count camel-scout >= 1)))
	(not (goal strategy-goal sg-towerrush))
=>
	(up-full-reset-search)
	(up-find-local c: scout-type c: 1)
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(or (unit-type-count scout-cavalry-line >= 1)
	(or (unit-type-count eagle-warrior-line >= 1)
	(unit-type-count camel-scout >= 1)))
	(not (goal strategy-goal sg-towerrush))
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-scout-x)
	(up-set-target-point gl-scout-x)
	(up-filter-distance c: -1 c: 3)
	(up-find-remote c: villager-class c: 5)
	(up-find-remote c: spearman-line c: 5)
	;(up-remove-objects search-remote object-data-hitpoints < 7)
	(up-get-search-state gl-local-total)
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(or (unit-type-count scout-cavalry-line >= 1)
	(or (unit-type-count eagle-warrior-line >= 1)
	(unit-type-count camel-scout >= 1)))
	(not (goal strategy-goal sg-towerrush))
	(up-compare-goal gl-remote-total >= 2)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 0)
	;(up-object-data object-data-action == actionid-attack)
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: scout-type c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-scout-x)
	(up-lerp-tiles gl-scout-x enemy-point-x c: -8) 
	(up-cross-tiles gl-scout-x enemy-point-x c: 9)
	(up-bound-point gl-scout-x gl-scout-x)	
	(enable-timer retreating-timer 3)
	(up-target-point gl-scout-x action-move formation-line stance-no-attack)
	(chat-local-to-self "Scout in danger, retreat with scout")
)

;region Militia Retreat Rules

;retreat with militia from enemy villagers
(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line >= 1)
=>
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line >= 1)
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-militia-x)
	(up-set-target-point gl-militia-x)
	(up-filter-distance c: -1 c: 3)
	(up-find-remote c: villager-class c: 5)
	;(up-remove-objects search-remote object-data-hitpoints < 7)
	(up-get-search-state gl-local-total)
)



;1 militia
(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 1)
	(up-compare-goal gl-remote-total >= 1)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 0)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 1")
)

;2 militias

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 2)
	(up-compare-goal gl-remote-total >= 2)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 0)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 2.1")
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 2)
	(up-compare-goal gl-remote-total >= 2)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 1)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 2.2")
)

;3 militias

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 3)
	(up-compare-goal gl-remote-total >= 3)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 0)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 3.1")
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 3)
	(up-compare-goal gl-remote-total >= 3)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 1)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 3.2")
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 3)
	(up-compare-goal gl-remote-total >= 3)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 2)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 3.3")
)

;4 militias

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 4)
	(up-compare-goal gl-remote-total >= 4)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 0)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 4.1")
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 4)
	(up-compare-goal gl-remote-total >= 4)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 1)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 4.2")
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 4)
	(up-compare-goal gl-remote-total >= 4)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 2)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 4.3")
)

(defrule
	(current-age < castle-age)
	(up-compare-goal attack-now-goal == 1)
	(unit-type-count militiaman-line == 4)
	(up-compare-goal gl-remote-total >= 4)
	(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-remote c: 3)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	(up-find-local c: militiaman-line c: 4)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-militia-x)
	(up-lerp-tiles gl-militia-x enemy-point-x c: -5) 
	(up-cross-tiles gl-militia-x enemy-point-x c: 6)
	(up-bound-point gl-militia-x gl-militia-x)	
	(enable-timer retreating-timer 2)
	(up-target-point gl-militia-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with militia 4.4")
)

;endregion

;region Scout Retreat Rules

;retreat with scouts from enemy spearmen

(defrule
	(current-age < castle-age)
	(goal attack-now-goal 1)
	(unit-type-count scout-cavalry-line >= 1)
	(unit-type-count scout-cavalry-line < 10)
=>
	(up-full-reset-search)
	(up-find-local c: scout-cavalry-line c: 9)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-number-scouts g:= gl-local-total)
	(up-modify-goal gl-number-scouts c:- 1)
	;(up-chat-data-to-player my-player-number "Number of scouts: %d" g: gl-number-scouts)
)

(defrule
	(current-age < castle-age)
	(goal attack-now-goal 1)
	(unit-type-count scout-cavalry-line >= 1)
	(unit-type-count scout-cavalry-line < 10)
	(up-set-target-object search-local g: gl-scout-index)
	(up-object-data object-data-attacker-id > 0)
=>
	(up-set-target-object search-local g: gl-scout-index)
	(up-get-object-data object-data-id gl-temp-scout-id)
	(up-get-point position-object gl-unit-x)
	;(up-send-flare gl-unit-x)
	(up-full-reset-search)
	(up-set-target-point gl-unit-x)
	(up-filter-distance c: -1 c: 4)
	(up-find-remote c: spearman-line c: 10)
	;(up-set-target-object search-remote c: 0)
	(up-find-local c: scout-cavalry-line c: 10)
	(up-remove-objects search-local object-data-id g:== gl-temp-scout-id)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-scout-spear-ratio g:= gl-local-last)
	(up-modify-goal gl-scout-spear-ratio g:/ gl-remote-last)
	;(up-remove-objects search-remote object-data-hitpoints < 7)
	(up-chat-data-to-player my-player-number "Nearby scouts: %d" g: gl-local-last)
	(up-chat-data-to-player my-player-number "Nearby spears: %d" g: gl-remote-last)
	(up-chat-data-to-player my-player-number "Scouts : Spears: %d" g: gl-scout-spear-ratio)
)

(defrule
	(current-age < castle-age)
	(goal attack-now-goal 1)
	(unit-type-count scout-cavalry-line >= 1)
	(unit-type-count scout-cavalry-line < 10)
	(up-compare-goal gl-scout-spear-ratio < 3)
	(up-compare-goal gl-remote-last > 0)
	(up-compare-goal gl-unit-x > 2)
	(up-compare-goal gl-unit-y > 2)
	;(up-compare-goal gl-unit-x g:< FULL-MAP-SIZE)
	;(up-compare-goal gl-unit-y g:< FULL-MAP-SIZE)
	;(up-object-data object-data-tasks-count > 0)
	(up-set-target-object search-local g: gl-temp-scout-id)
	(up-object-data object-data-attacker-id > 0)
	;(up-object-data object-data-action == actionid-attack)
	;(or (up-object-data object-data-order == orderid-attack)
	;(up-object-data object-data-order == orderid-defend))
=>
	(set-goal retreating-goal YES)
	(up-full-reset-search)
	;(up-find-local c: scout-cavalry-line c: 9)
	;(up-set-target-object search-local c: gl-scout-index)
	;(up-set-target-by-id g: gl-temp-scout-id)
	;(up-get-point position-object gl-unit-x)
	(up-lerp-tiles gl-unit-x enemy-point-x c: -5) 
	(up-cross-tiles gl-unit-x enemy-point-x c: 6)
	(up-bound-point gl-unit-x gl-unit-x)	
	(enable-timer retreating-timer 4)
	(up-target-point gl-unit-x action-move formation-line stance-no-attack)
	(chat-local-to-self "retreat with scout from spearman")
)

(defrule
	(current-age < castle-age)
	(goal attack-now-goal 1)
	(unit-type-count scout-cavalry-line >= 1)
	(unit-type-count scout-cavalry-line < 10)
	(up-compare-goal gl-scout-index g:>= gl-number-scouts) ;reached end of list, reset
=>
	(set-goal gl-scout-index 0)
	;(up-chat-data-to-player my-player-number "Scout: %d" g: gl-scout-index)
	(up-jump-rule 1)
)

(defrule
	(current-age < castle-age)
	(goal attack-now-goal 1)
	(unit-type-count scout-cavalry-line >= 1)
	(unit-type-count scout-cavalry-line < 10)
	(up-compare-goal gl-scout-index g:< gl-number-scouts)
=>
	(up-modify-goal gl-scout-index c:+ 1) ;go to next list-entry
	;(up-chat-data-to-player my-player-number "Scout: %d" g: gl-scout-index)
	;(up-jump-rule -5)
)

;endregion

	;resetting

(defrule
	(timer-triggered retreating-timer)
=>	(up-full-reset-search)
	(up-reset-unit c: infantry-class)
	(up-reset-unit c: cavalry-class)
	(up-reset-unit c: scout-cavalry-class)
	(up-reset-unit c: cavalry-archer-class)
	(up-reset-unit c: archery-class)
	;(up-reset-target-priorities priority-offense 1)
	(up-set-attack-stance -1 c: stance-aggressive)
	;(set-strategic-number sn-disable-defend-groups 0)
	(set-strategic-number sn-disable-attack-groups 0)
	(disable-timer retreating-timer)
)


(defrule
	(timer-triggered split-stance-timer)
=>	(up-full-reset-search)
	(up-find-local c: -1 c: 240)
	(up-set-attack-stance -1 c: stance-aggressive)
	(disable-timer split-stance-timer)
	(up-reset-unit c: archery-class)
;	(up-reset-target-priorities priority-offense 1)
)

;endregion

;region Retreat Rules (old, inactive) ==============================


; (defrule
	; (true)
; =>
	; (enable-timer 15 1)
	; (set-goal reset 0)
	; (set-goal retreat-now-goal 0)
	; (enable-timer 38 1)
	; (disable-self)
; )

; (defrule
	; (not(enemy-buildings-in-town))
	; (current-age >= feudal-age)
	; (current-age < imperial-age)
	; (or(unit-type-count-total packed-trebuchet-class <= 0)
		; (or(unit-type-count-total unpacked-trebuchet-class <= 0)
			; (or(unit-type-count-total armored-elephant-line <= 1)
				; (or(unit-type-count-total battering-ram-line <= 1)
					; (or(unit-type-count-total bombard-cannon < 1)
						; (unit-type-count-total cannon-galleon-line < 1))))))
	; ;(players-unit-type-count focus-player castle-arrow > 0)
	; (up-projectile-detected projectile-castle < 2000)
; =>
    ; (set-goal retreat-now-goal 1)
	; (enable-timer 15 5)
	; (set-goal reset 1)
	; ;(chat-to-player my-player-number "Retreating from enemy castle.")
; )

; (defrule
	; (not	(enemy-buildings-in-town))
	; (current-age >= dark-age)
	; (current-age < castle-age)
	; ;(players-unit-type-count focus-player watch-tower-arrow > 0)
	; (up-projectile-detected projectile-watch-tower < 2000)
	; (or (unit-type-count battering-ram-line <= 0)
		; (or (unit-type-count armored-elephant-line <= 0)
			; (or (unit-type-count scout-cavalry-line < 6)
				; (unit-type-count militiaman-line < 6))))
; =>
	; (set-goal retreat-now-goal 1)
	; (enable-timer 15 5)
	; (set-goal reset 1); to avoid reset-spamming
	; ;(chat-to-player my-player-number "Retreating from enemy watch-tower.")
; )

; (defrule
	; (not	(enemy-buildings-in-town))
	; (current-age >= castle-age)
	; (up-projectile-detected projectile-watch-tower < 2000)
	; ;(players-unit-type-count focus-player watch-tower-arrow > 0)
	; (or(unit-type-count packed-trebuchet-class <= 0)
		; (or(unit-type-count unpacked-trebuchet-class <= 0)
			; (or (unit-type-count battering-ram-line <= 0)
				; (or (unit-type-count armored-elephant-line <= 0)
					; (or (unit-type-count bombard-cannon <= 0)
						; (or (unit-type-count cavalry-class < 4)
							; (unit-type-count infantry-class < 6)))))))
; =>
	; (set-goal retreat-now-goal 1)
	; (enable-timer 15 5)
	; (set-goal reset 1); to avoid reset-spamming
	; ;(chat-to-player my-player-number "Retreating from enemy watch-tower. 2")
; )

; (defrule
	; (not	(enemy-buildings-in-town))
	; (current-age >= dark-age)
	; (current-age < castle-age)
	; ;(players-unit-type-count focus-player tc-arrow > 0)
	; (up-projectile-detected projectile-town-center < 2000)
	; (or (unit-type-count battering-ram-line <= 0)
		; (or (unit-type-count armored-elephant-line <= 0)
			; (unit-type-count militiaman-line <= 20)))
; =>
	; (set-goal retreat-now-goal 1)
	; (enable-timer 15 5)
	; (set-goal reset 1); to avoid reset-spamming
	; ;(chat-to-player my-player-number "Retreating from enemy town-center. 1")

; )
; (defrule
	; (not	(enemy-buildings-in-town))
	; (current-age == castle-age)
	; ;(players-unit-type-count focus-player tc-arrow > 0)
	; (up-projectile-detected projectile-town-center < 2000)
	; (or (unit-type-count cavalry-class <= 18)
		; (or (unit-type-count battering-ram-line <= 0)
			; (or (unit-type-count armored-elephant-line <= 0)
				; (unit-type-count infantry-class <= 20))))
; =>
	; (set-goal retreat-now-goal 1)
	; (enable-timer 15 5)
	; (set-goal reset 1); to avoid reset-spamming
	; ;(chat-to-player my-player-number "Retreating from enemy town-center. 2")
; )

; (defrule
	; (not	(enemy-buildings-in-town))
	; (current-age >= imperial-age)
	; ; (game-time > 600); not when rushing in PIDM
	; (or(unit-type-count packed-trebuchet-class <= 0)
		; (or(unit-type-count unpacked-trebuchet-class <= 0)
			; (or (unit-type-count cavalry-class <= 18)
				; (or (unit-type-count battering-ram-line <= 0)
					; (or (unit-type-count armored-elephant-line <= 0)
						; (or (unit-type-count infantry-class <= 20)
							; (unit-type-count bombard-cannon <= 0)))))))
	; ;(cc-players-unit-type-count focus-player tc-arrow > 0)
	; (up-projectile-detected projectile-town-center < 2000)
	; (players-military-population focus-player > 5)
; =>
	; (set-goal retreat-now-goal 1)
	; (enable-timer 15 5)
	; (set-goal reset 1)
	; ;(chat-to-player my-player-number "Retreating from enemy town-center. 3")
; )

; (defrule
	; (nor (up-projectile-detected projectile-town-center < 2000)
		; (nor (up-projectile-detected projectile-watch-tower < 2000)
			 ; (up-projectile-detected projectile-town-center < 2000)))
	; (timer-triggered retreat-timer); test
	; (goal retreat-now-goal 1); test
	; (goal reset 1); to avoid spamming
; =>
	; (up-reset-unit c: -1)
	; (set-goal reset 0)
	; (set-goal retreat-now-goal 0)
	; (chat-to-player my-player-number "Reset: Out of range.")
; )

; (defrule
	; (up-timer-status retreat-timer == timer-running)
	; (goal retreat-now-goal 1)
	; (goal reset 1)
; =>
	; (up-reset-attack-now)
	; (up-retreat-now)
	; (chat-to-player my-player-number "Rueckzug!")
; )

; (defrule
	; (timer-triggered retreat-timer)
	; (goal retreat-now-goal 0)
	; (goal reset 1)
; =>
	; (set-goal retreat-now-goal 0)
	; (set-goal reset 0)
	; (up-reset-unit c: -1)
	; (chat-local-to-self "Reset units.")
; )

;endregion 

;region Build Order Dark-Age =======================================

(defrule
	(game-time > 15)
=>
	(chat-to-all "glhf")
	(disable-self)
)

;saving center-point of the map

(defrule
	(true)
=>
	(up-get-point position-center gl-center-x)
	(disable-self)
)

#load-if-defined UP-ALLY-IN-GAME

;region Finding Enemy TC x/y position (not working on Nomad)


(defrule
	(players-building-type-count any-enemy town-center > 0)
	;(timer-triggered t-3-sec)
	;(up-compare-goal enemy-point-x == -1) ;todo
=>	
	;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	; (up-filter-status c: status-ready c: list-active)
	; (up-find-status-remote c: town-center c: 1)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-point-x)
	;(up-send-flare enemy-point-x)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(game-time > 5)
	(players-building-type-count any-enemy town-center > 0)
=>
	(up-full-reset-search)
	; (up-filter-status c: status-ready c: list-active)
	; (up-find-status-remote c: town-center c: 1)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-point-x)
	(up-send-flare enemy-point-x)
	; (up-store-player-name focus-player)
	; (up-chat-data-to-player every-ally text-enemy-located-here c: 7031232)
	(chat-to-allies " 16 Enemy Town Center here")
	(up-chat-data-to-all "Mein Gegner ist Spieler %d" s: sn-target-player-number)
	(up-chat-data-to-all "Mein Gegner ist %s" c: 7031232)
	(disable-self)
)
;endregion

;region Finding all Enemy TCs x/y position (not working on Nomad)


; (defrule
	; (players-building-type-count any-enemy town-center > 0)
; =>	
	; ;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	; (up-full-reset-search)
	; (up-find-remote c: town-center c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tc-point-x)
	; ;(up-send-flare enemy-point-x)
; )

; (defrule
	; (up-set-target-object search-remote c: 0)
	; (game-time > 5)
	; (players-building-type-count any-enemy town-center > 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: town-center c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tc-point-x)
	; ; (up-send-flare enemy-point-x)
	; ; (up-store-player-name focus-player)
	; ; (up-chat-data-to-player every-ally text-enemy-located-here c: 7031232)
	; ; (chat-to-allies "Enemy Town Center here")
; )
;endregion

;region Finding Enemy Castle x/y position

(defrule
	(players-building-type-count any-enemy castle > 0)
	(timer-triggered t-3-sec)
=>	
	;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: castle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-castle-point-x)
	;(up-send-flare enemy-point-x)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(game-time > 5)
	(players-building-type-count any-enemy castle > 0)
=>
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: castle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-castle-point-x)
	(up-send-flare enemy-castle-point-x)
	(chat-to-allies "Enemy Castle here")
	(disable-self)
)

;endregion

;region Finding all Enemy Castles x/y position

; (defrule
	; (players-building-type-count any-enemy castle > 0)
; =>	
	; ;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	; (up-full-reset-search)
	; (up-find-remote c: castle c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-castle-point-x)
	; ;(up-send-flare enemy-point-x)
; )

; (defrule
	; (up-set-target-object search-remote c: 0)
	; (game-time > 5)
	; (players-building-type-count any-enemy castle > 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: castle c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-castle-point-x)
	; ; (up-send-flare enemy-castle-point-x)
	; ; (chat-to-allies "Enemy Castle here")
; )
;endregion

;region Finding Enemy Towers x/y position

(defrule
	(players-building-type-count any-enemy watch-tower-line > 0)
	(timer-triggered t-3-sec)
=>	
	;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: tower-type c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-tower-point-x)
	;(up-send-flare enemy-point-x)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(game-time > 5)
	(players-building-type-count any-enemy watch-tower-line > 0)
=>
	(up-full-reset-search)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: tower-type c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-tower-point-x)
	(up-send-flare enemy-tower-point-x)
	(chat-to-allies "Enemy Tower here")
	(disable-self)
)

;endregion

;region Finding all Enemy Towers x/y position

; (defrule
	; (players-building-type-count any-enemy watch-tower > 0)
; =>	
	; ;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	; (up-full-reset-search)
	; (up-find-remote c: watch-tower c: 50)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tower-point-x)
	; ;(up-send-flare enemy-point-x)
; )

; (defrule
	; (up-set-target-object search-remote c: 0)
	; (game-time > 5)
	; (players-building-type-count any-enemy watch-tower > 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: watch-tower c: 50)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tower-point-x)
	; ; (up-send-flare enemy-tower-point-x)
	; ; (chat-to-allies "Enemy Tower here")
; )
;endregion

;region Finding TC x/y position

#load-if-defined UP-NOMAD-STYLE

(defrule
	(building-type-count town-center > 0)
	(timer-triggered t-3-sec)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-id gl-main-tc-id)
	(up-get-point position-object gl-starting-tc-x) ; Finding and saving starting TC x/y coordinates
	(disable-self)
)

(defrule
	(game-time > 5)
	(building-type-count town-center > 0)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-starting-tc-x)
	(up-send-flare gl-starting-tc-x)
	(chat-to-allies "Ich bin hier!")
	(disable-self)
)

#end-if

#load-if-not-defined UP-NOMAD-STYLE

(defrule
	(building-type-count town-center > 0)
	(timer-triggered t-3-sec)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-id gl-main-tc-id)
	(up-get-point position-object gl-starting-tc-x) ; Finding and saving starting TC x/y coordinates
	(disable-self)
)

(defrule
	(game-time > 5)
	(building-type-count town-center > 0)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-starting-tc-x)
	;(up-send-flare gl-starting-tc-x)
	;(chat-to-allies "Ich bin hier!")
	(disable-self)
)

#end-if

;endregion

#end-if

#load-if-not-defined UP-ALLY-IN-GAME

;region Finding Enemy TC x/y position (not working on Nomad)


(defrule
	(players-building-type-count any-enemy town-center > 0)
	;(timer-triggered t-3-sec)
	;(up-compare-goal enemy-point-x == -1) ;todo
=>	
	;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	; (up-filter-status c: status-ready c: list-active)
	; (up-find-status-remote c: town-center c: 1)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-point-x)
	;(up-send-flare enemy-point-x)
)

(defrule
	;(up-set-target-object search-remote c: 0)
	(game-time > 5)
	(players-building-type-count any-enemy town-center > 0)
=>
	(up-full-reset-search)
	; (up-filter-status c: status-ready c: list-active)
	; (up-find-status-remote c: town-center c: 1)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-point-x)
	(up-send-flare enemy-point-x)
	; (up-store-player-name focus-player)
	; (up-chat-data-to-player every-ally text-enemy-located-here c: 7031232)
	;(chat-to-allies " 16 Enemy Town Center here")
	(up-chat-data-to-all "Mein Gegner ist Spieler %d" s: sn-target-player-number)
	(up-chat-data-to-all "Mein Gegner ist %s" c: 7031232)
	(disable-self)
)
;endregion

;region Finding all Enemy TCs x/y position (not working on Nomad)


; (defrule
	; (players-building-type-count any-enemy town-center > 0)
; =>	
	; ;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	; (up-full-reset-search)
	; (up-find-remote c: town-center c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tc-point-x)
	; ;(up-send-flare enemy-point-x)
; )

; (defrule
	; (game-time > 5)
	; (players-building-type-count any-enemy town-center > 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: town-center c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tc-point-x)
	; ; (up-send-flare enemy-point-x)
	; ; (up-store-player-name focus-player)
	; ; (up-chat-data-to-player every-ally text-enemy-located-here c: 7031232)
	; ; (chat-to-allies "Enemy Town Center here")
; )
;endregion

;region Finding Enemy Castle x/y position

(defrule
	(players-building-type-count any-enemy castle > 0)
	(timer-triggered t-3-sec)
=>	
	;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-find-remote c: castle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-castle-point-x)
	;(up-send-flare enemy-point-x)
)

(defrule
	(game-time > 5)
	(players-building-type-count any-enemy castle > 0)
=>
	(up-full-reset-search)
	(up-find-remote c: castle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-castle-point-x)
	(up-send-flare enemy-castle-point-x)
	(chat-to-allies "21 Enemy Castle here")
	(disable-self)
)

;endregion

;region Finding all Enemy Castles x/y position

; (defrule
	; (players-building-type-count any-enemy castle > 0)
; =>	
	; ;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	; (up-full-reset-search)
	; (up-find-remote c: castle c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-castle-point-x)
	; ;(up-send-flare enemy-point-x)
; )

; (defrule
	; (game-time > 5)
	; (players-building-type-count any-enemy castle > 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: castle c: 10)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-castle-point-x)
	; ;(up-send-flare enemy-castle-point-x)
	; ;(chat-to-allies "Enemy Castle here")
; )

;endregion

;region Finding Enemy Tower x/y position

(defrule
	(players-building-type-count any-enemy watch-tower-line > 0)
	(timer-triggered t-3-sec)
=>	
	;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-find-remote c: watch-tower c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-tower-point-x)
	;(up-send-flare enemy-point-x)
)

(defrule
	(game-time > 5)
	(players-building-type-count any-enemy watch-tower-line > 0)
=>
	(up-full-reset-search)
	(up-find-remote c: watch-tower c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object enemy-tower-point-x)
	(up-send-flare enemy-tower-point-x)
	(chat-to-allies "21 Enemy Tower here")
	(disable-self)
)

;endregion

;region Finding all Enemy Towers x/y position

; (defrule
	; (players-building-type-count any-enemy watch-tower > 0)
; =>	
	; ;(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	; (up-full-reset-search)
	; (up-find-remote c: watch-tower c: 50)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tower-point-x)
	; ;(up-send-flare enemy-point-x)
; )

; (defrule
	; (game-time > 5)
	; (players-building-type-count any-enemy watch-tower > 0)
; =>
	; (up-full-reset-search)
	; (up-find-remote c: watch-tower c: 50)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object enemy-tower-point-x)
	; ;(up-send-flare enemy-tower-point-x)
	; ;(chat-to-allies "Enemy Tower here")
; )

;endregion

;region Finding TC x/y position

(defrule
	(building-type-count town-center > 0)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-id gl-main-tc-id)
	(up-get-point position-object gl-starting-tc-x) ; Finding and saving starting TC x/y coordinates
	(disable-self)
)

(defrule
	(game-time > 5)
	(building-type-count town-center > 0)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object gl-starting-tc-x)
	;(up-send-flare gl-starting-tc-x)
	;(chat-to-allies "Ich bin hier!")
	(disable-self)
)

;endregion

#end-if

;region finding explored & uncaptured sheep

(defrule
	(current-age == dark-age)
	(up-gaia-type-count c: livestock-class > 0)
	(or (unit-type-count scout-cavalry-line > 0)
	(or (unit-type-count eagle-warrior-line > 0)
	(unit-type-count camel-scout > 0)))
=>
	(up-full-reset-search)
	(up-find-local c: scout-type c: 1)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-scout-x)
	(up-set-target-point gl-scout-x)
	(up-get-search-state gl-local-total)
	;(chat-to-all "a scout was found")
)

(defrule
	(current-age == dark-age)
	(up-gaia-type-count c: livestock-class > 0)
	(or (unit-type-count scout-cavalry-line > 0)
	(or (unit-type-count eagle-warrior-line > 0)
	(unit-type-count camel-scout > 0)))
	(up-compare-goal gl-local-total > 0)
=>
	;(up-full-reset-search)
	(up-set-target-point gl-scout-x)
	(up-filter-distance c: -1 c: 22)
	(up-modify-sn sn-focus-player-number c:= 0)
	(up-find-remote c: livestock-class c: 1)
)

(defrule
	(up-set-target-object search-remote c: 0)
=>
	(up-get-point position-object sheep-point-x)
	(up-set-target-point sheep-point-x)
	;(up-send-flare sheep-point-x)	
	;(chat-to-player my-player-number "Test")
)

(defrule
	(up-set-target-object search-remote c: 0)
	(up-compare-goal sheep-point-x c:== 0)
=>
	(up-modify-goal sheep-point-x c:+ 1)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(up-compare-goal sheep-point-x g:== FULL-MAP-SIZE)
=>
	(up-modify-goal sheep-point-x c:- 1)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(up-compare-goal sheep-point-y c:== 0)
=>
	(up-modify-goal sheep-point-y c:+ 1)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(up-compare-goal sheep-point-y g:== FULL-MAP-SIZE)
=>
	(up-modify-goal sheep-point-y c:- 1)
)

(defrule
	(up-set-target-object search-remote c: 0)
	(current-age == dark-age)
=>
	(up-target-point sheep-point-x action-move -1 -1)
	;(chat-to-player my-player-number "Found sheep: sending scout to collect")
	;(up-modify-goal gl-gaia-sheep-found c:= 0)
)

;endregion

;region Snipe enemy villagers without loom with scout (Deactivated, not working properly)

; (defrule
	; (current-age == dark-age)
	; (civilian-population >= 14)
	; (timer-triggered t-3-sec)
	; (or (unit-type-count scout-cavalry-line > 0)
	; (or (unit-type-count eagle-warrior-line > 0)
	; (unit-type-count camel-scout > 0)))
; =>
	; (up-full-reset-search)
	; (up-find-local c: scout-type c: 1)
	; (up-get-search-state gl-local-total)
; )

; (defrule
	; (current-age == dark-age)
	; (civilian-population >= 14)
	; (up-set-target-object search-local c: 0)
; =>
	; (up-get-point position-object gl-scout-x)
	; (up-set-target-point gl-scout-x)
	; ;(chat-to-all "a scout was found")
; )

; (defrule
	; (current-age == dark-age)
	; (civilian-population >= 14)
	; (up-compare-goal gl-local-total > 0)
; =>
	; (up-reset-search 0 0 1 1)
	; (up-set-target-point gl-scout-x)
	; (up-filter-distance c: -1 c: 4)
	; (up-find-remote c: villager-class c: 1)
	; (up-remove-objects search-remote object-data-hitpoints > 25)
	; ;(up-remove-objects search-remote object-data-player any-ally)
	; (up-get-search-state gl-local-total)
; )

; (defrule
	; (current-age == dark-age)
	; (civilian-population >= 14)
	; (up-compare-goal gl-remote-total == 1)
; =>
	; (up-get-point position-object gl-temp-x)
	; (up-set-target-point gl-temp-x)
	; ;(up-send-flare sheep-point-x)	
	; ;(chat-to-player my-player-number "Test")
; )

; (defrule
	; (current-age == dark-age)
	; (civilian-population >= 14)
	; (up-compare-goal gl-remote-total == 1)
; =>
	; (set-strategic-number sn-number-explore-groups 0)
	; (set-strategic-number sn-total-number-explorers 0)
	; (up-reset-scouts)
	; (up-target-point gl-temp-x action-default -1 -1)
	; (chat-to-player my-player-number "Found low-hp enemy villager")
	; ;(up-modify-goal gl-gaia-sheep-found c:= 0)
; )

;endregion

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age >= castle-age)
=>
	(set-strategic-number sn-dock-training-filter 2)
	(disable-self)
)

#load-if-defined UP-NOMAD-STYLE

(defrule
	(current-age == dark-age)
	(building-type-count-total town-center == 0)
	(nand(resource-found wood)
	(civilian-population == 3))
=>
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-cap-civilian-explorers 100)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(chat-to-player my-player-number "Suche Wald fuer TC")
)

; (defrule
	; (resource-found wood)
	; (building-type-count-total town-center == 0)
; =>
	; (chat-to-player my-player-number "Wald gefunden")
; )

(defrule
	(current-age >= dark-age)
	(can-build town-center)
	(building-type-count town-center == 0)
	(resource-found wood)
	(game-time > 5)
=>
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-cap-civilian-gatherers 0)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 3)
	(build town-center)
	(chat-to-player my-player-number "Baue mein Dorfzentrum")
)

(defrule
	(building-type-count town-center >= 1)
=>
	(set-strategic-number sn-cap-civilian-gatherers -1)
	(disable-self)
)

(defrule
	(current-age == dark-age)
	(can-build farm)
	(unit-type-count fishing-ship == 0)
	(idle-farm-count < 1)
=>
	(build farm)
)

#end-if


#load-if-not-defined UP-NOMAD-STYLE
(defrule
	(current-age >= dark-age)
	(can-build town-center)
	(building-type-count-total town-center == 0)
=>
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center c: 6)
	(up-assign-builders c: town-center-foundation c: 6)
	(build town-center)
)
#end-if

(defrule
	(current-age == dark-age)
	(can-train villager)
	(unit-type-count-total villager g:< d-villager-goal)
=>
	(up-modify-escrow food c:- 50)
	(train villager)
	(up-get-fact civilian-population 0 civilian-pop) 
	;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
)


(defrule
	(not (goal strategy-goal sg-drush))
	(not (goal strategy-goal sg-towerrush))
	(not (goal strategy-goal sg-archerrush))
	(not (goal strategy-goal sg-scoutrush))
	(can-research ri-loom)
	(nor(civ-selected mayan)
		(civ-selected chinese))
	(civilian-population > 5)
	(goal drush-goal 0)
=>
	(research ri-loom)
)

(defrule
	(or (goal strategy-goal sg-drush)
	(or (goal strategy-goal sg-towerrush)
	(or (goal strategy-goal sg-archerrush)
	(goal strategy-goal sg-scoutrush))))
	(can-research ri-loom)
	(nor(civ-selected mayan)
		(civ-selected chinese))
	(civilian-population > 17)
	(goal drush-goal 0)
=>
	(research ri-loom)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(can-research ri-loom)
	(nor(civ-selected mayan)
		(civ-selected chinese))
	(civilian-population > 17)
	(goal drush-goal 1)
=>
	(research ri-loom)
)


(defrule
	(can-research ri-loom)
	(or(civ-selected mayan)
		(civ-selected chinese))
=>
	(research ri-loom)
)

(defrule
	(not (civ-selected hun))
	(unit-type-count villager <= 4)
	(building-type-count-total house < 2)
=>
	(up-modify-sn sn-percent-civilian-explorers c:= 0)
	(up-modify-sn sn-percent-civilian-gatherers c:= 0)
	(up-modify-sn sn-percent-civilian-builders c:= 100)
	(set-strategic-number sn-enable-new-building-system 1)
	(disable-self)
)

(defrule
	(not (civ-selected hun))
	(building-type-count-total house >= 2)
=>
	(up-modify-sn sn-percent-civilian-builders c:= 30)
	(up-modify-sn sn-percent-civilian-gatherers c:= 70)
	;(set-strategic-number sn-enable-new-building-system 0)
	(disable-self)
)


;first house

(defrule
	(or (current-age >= feudal-age)
	(or (civ-selected hun)
	(civ-selected chinese)))
=>
	(up-jump-rule 12)
)

(defrule
	(building-type-count-total town-center >= 1)
	(building-type-count-total house < 1)
    (up-pending-objects c: house < 1)
	(housing-headroom < 3)
	(population-headroom > 0)
    (can-build house)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1) ;search for tc
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-starting-tc-x)
	(up-set-target-point gl-starting-tc-x)
	;(up-chat-data-to-all "tc-x: %d" g: gl-starting-tc-x)
	;(up-chat-data-to-all "tc-y: %d" g: gl-starting-tc-y)
	(up-full-reset-search)
	(up-modify-goal gl-starting-tc-x c:- 2)
	(up-modify-goal gl-starting-tc-y c:+ 1)
	(up-filter-exclude -1 -1 orderid-build -1)
	(up-find-local c: villager-class c: 3) ;search for villager
	(up-remove-objects search-local object-data-point-x g:== gl-starting-tc-x)
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-temp-x)
	(up-set-target-point gl-temp-x)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "vil-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "vil-y: %d" g: gl-temp-y)
	(set-goal gl-temp 0)
	(set-goal gl-temp-two 0)
	(disable-self)
)

(defrule
	(building-type-count-total town-center >= 1)
	(building-type-count-total house < 1)
    (up-pending-objects c: house < 1)
	(housing-headroom < 3)
	(population-headroom > 0)
    (can-build house)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1) ;search for tc
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-starting-tc-x)
	(up-set-target-point gl-starting-tc-x)
	;(up-chat-data-to-all "tc-x: %d" g: gl-starting-tc-x)
	;(up-chat-data-to-all "tc-y: %d" g: gl-starting-tc-y)	
	(up-modify-goal gl-temp-x g:- gl-starting-tc-x)
	(up-modify-goal gl-temp-y g:- gl-starting-tc-y)
	(up-modify-goal gl-temp g:= gl-temp-x)
	(up-modify-goal gl-temp-two g:= gl-temp-y)
	;(up-chat-data-to-all "temp1: %d" g: gl-temp)
	;(up-chat-data-to-all "temp2: %d" g: gl-temp-two)
	(up-full-reset-search)
	(up-modify-goal gl-starting-tc-x c:- 2)
	(up-modify-goal gl-starting-tc-y c:+ 1)
	(up-filter-exclude -1 -1 orderid-build -1)
	(up-find-local c: villager-class c: 3)
	(up-remove-objects search-local object-data-point-x g:== gl-starting-tc-x)
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-temp-x)
	(up-set-target-point gl-temp-x)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two >= 0)
=>
	(up-modify-goal gl-temp-x c:+ 3)
	(up-modify-goal gl-temp-y c:+ 3)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0)
=>
	(up-modify-goal gl-temp-x c:- 3)
	(up-modify-goal gl-temp-y c:+ 3)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0)
=>
	(up-modify-goal gl-temp-x c:+ 3)
	(up-modify-goal gl-temp-y c:- 3)
	;(up-send-flare gl-temp-x)
;	(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0)
=>
	(up-modify-goal gl-temp-x c:- 3)
	(up-modify-goal gl-temp-y c:- 3)
	;(up-send-flare gl-temp-x)
;	(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
;	(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(building-type-count-total town-center >= 1)
	(building-type-count-total house < 1)
    (up-pending-objects c: house < 1)
	(housing-headroom < 3)
	(population-headroom > 0)
    (can-build house)
	(up-can-build-line 0 gl-temp-x c: house)
=>
	(up-assign-builders c: house c: 2)
    (up-build-line gl-temp-x gl-temp-x c: house)
	;(up-set-placement-data my-player-number town-center c: -10)
    ;(up-build place-control 0 c: house)
	;(chat-to-player my-player-number "Building first house")
)

(defrule
	(building-type-count-total town-center >= 1)
	(building-type-count-total house < 1)
    (up-pending-objects c: house < 1)
	(housing-headroom < 3)
	(population-headroom > 0)
	(not (up-can-build-line 0 gl-temp-x c: house))
=>
	(up-assign-builders c: house c: 2)
    (build house)
	;(up-set-placement-data my-player-number town-center c: -10)
    ;(up-build place-control 0 c: house)
	;(chat-to-player my-player-number "Building first house after failed attempt")
)


;second house

(defrule
	(or (game-time < 2)
	(or (current-age >= feudal-age)
	(or (civ-selected hun)
	(civ-selected chinese))))
=>
	(up-jump-rule 11)
)

(defrule
	(building-type-count-total town-center >= 1)
    (building-type-count-total house < 2)
    (up-pending-objects c: house < 2)
	(housing-headroom < 3)
	(population-headroom > 0)
    (can-build house)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1) ;search for tc
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-starting-tc-x)
	(up-set-target-point gl-starting-tc-x)
	;(up-chat-data-to-all "tc-x: %d" g: gl-starting-tc-x)
	;(up-chat-data-to-all "tc-y: %d" g: gl-starting-tc-y)
	(up-full-reset-search)
	(up-modify-goal gl-starting-tc-x c:- 2)
	(up-modify-goal gl-starting-tc-y c:+ 1)
	(up-filter-exclude -1 -1 orderid-build -1)
	(up-find-local c: villager-class c: 4) ;search for villager
	(up-remove-objects search-local object-data-point-x g:== gl-starting-tc-x) ;mayan extra starting villager under tc
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-temp-x)
	(up-set-target-point gl-temp-x)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "vil-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "vil-y: %d" g: gl-temp-y)
	(set-goal gl-temp 0)
	(set-goal gl-temp-two 0)
	(disable-self)
)

(defrule
	(building-type-count-total town-center >= 1)
    (building-type-count-total house < 2)
    (up-pending-objects c: house < 2)
	(housing-headroom < 3)
	(population-headroom > 0)
    (can-build house)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1) ;search for tc
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-starting-tc-x)
	(up-set-target-point gl-starting-tc-x)
	;(up-chat-data-to-all "tc-x: %d" g: gl-starting-tc-x)
	;(up-chat-data-to-all "tc-y: %d" g: gl-starting-tc-y)	
	(up-modify-goal gl-temp-x g:- gl-starting-tc-x)
	(up-modify-goal gl-temp-y g:- gl-starting-tc-y)
	(up-modify-goal gl-temp g:= gl-temp-x)
	(up-modify-goal gl-temp-two g:= gl-temp-y)
	;(up-chat-data-to-all "temp1: %d" g: gl-temp)
	;(up-chat-data-to-all "temp2: %d" g: gl-temp-two)
	(up-full-reset-search)
	(up-modify-goal gl-starting-tc-x c:- 2)
	(up-modify-goal gl-starting-tc-y c:+ 1)
	(up-filter-exclude -1 -1 orderid-build -1)
	(up-find-local c: villager-class c: 4)
	(up-remove-objects search-local object-data-point-x g:== gl-starting-tc-x)
	(disable-self)
)

(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object gl-temp-x)
	(up-set-target-point gl-temp-x)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two >= 0)
=>
	(up-modify-goal gl-temp-x c:+ 3)
	(up-modify-goal gl-temp-y c:+ 3)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two >= 0)
=>
	(up-modify-goal gl-temp-x c:- 3)
	(up-modify-goal gl-temp-y c:+ 3)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp >= 0)
	(up-compare-goal gl-temp-two < 0)
=>
	(up-modify-goal gl-temp-x c:+ 3)
	(up-modify-goal gl-temp-y c:- 3)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(up-compare-goal gl-temp < 0)
	(up-compare-goal gl-temp-two < 0)
=>
	(up-modify-goal gl-temp-x c:- 3)
	(up-modify-goal gl-temp-y c:- 3)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
	(disable-self)
)

(defrule
	(building-type-count-total town-center >= 1)
    (building-type-count-total house < 2)
    (up-pending-objects c: house < 2)
	(housing-headroom < 3)
	(population-headroom > 0)
    (can-build house)
	(up-can-build-line 0 gl-temp-x c: house)
=>
	(up-assign-builders c: house c: 1)
    (up-build-line gl-temp-x gl-temp-x c: house)
	;(up-set-placement-data my-player-number town-center c: -10)
    ;(up-build place-control 0 c: house)
	;(chat-to-player my-player-number "Building second house")
	(disable-self)
)

; (defrule
	; (building-type-count-total town-center >= 1)
    ; (building-type-count-total house < 2)
    ; (up-pending-objects c: house < 2)
	; (housing-headroom < 3)
	; (population-headroom > 0)
	; (not (up-can-build-line 0 gl-temp-x c: house))
; =>
	; (up-assign-builders c: house c: 1)
    ; (build house)
	; ;(up-set-placement-data my-player-number town-center c: -10)
    ; ;(up-build place-control 0 c: house)
	; (chat-to-player my-player-number "Building second house after failed attempt")
	; (disable-self)
; )

;end 2. house

;general house rules

(defrule
	(current-age == dark-age)
	(not (goal strategy-goal sg-drush))
	(can-build house)
	(game-time > 10)
	(civilian-population > 5)
	(housing-headroom < 4)
	(building-type-count-total town-center > 0)
	(up-pending-objects c: house < 1)
=>
	(set-goal gl-house 1)
)

(defrule
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
	(can-build house)
	(game-time > 10)
	(civilian-population > 5)
	(housing-headroom < 5)
	(building-type-count-total town-center > 0)
	(up-pending-objects c: house < 1)
=>
	(set-goal gl-house 1)
)

(defrule
	(or (civ-selected hun)
	(current-age >= feudal-age))
=>
	(up-jump-rule 11)
)

(defrule
	(goal gl-house 1)
	(up-pending-objects c: house < 1)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 1)
	(set-goal gl-temp 0)
)	
	
(defrule
	(goal gl-house 1)
	(goal gl-temp 0)
	(up-pending-objects c: house < 1)
	(up-set-target-object search-local c: 0)
=>
	(generate-random-number 100)
	(up-get-point position-object gl-temp-x)
	(up-set-target-point gl-temp-x)
	(up-modify-goal gl-temp-x c:- 1)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
)

(defrule
	(goal gl-house 1)
	(goal gl-temp 0)
	(up-pending-objects c: house < 1)
	(random-number < 25)
=>
	(up-modify-goal gl-temp-x c:+ 8)
	(up-modify-goal gl-temp-y c:+ 8)
	(set-goal gl-temp 1)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
)

(defrule
	(goal gl-house 1)
	(goal gl-temp 1)
	(up-pending-objects c: house < 1)
	(random-number < 25)
	(not (up-can-build-line 0 gl-temp-x c: house))
=>
	(up-modify-goal gl-temp-x c:+ 2)
	(up-modify-goal gl-temp-y c:+ 2)
)

; (defrule
	; (goal gl-house 1)
	; (goal gl-temp 1)
	; (random-number < 25)
	; (not (up-can-build-line 0 gl-temp-x c: house))
; =>
	; (up-jump-rule -2)
; )

(defrule
	(goal gl-house 1)
	(goal gl-temp 0)
	(up-pending-objects c: house < 1)
	(random-number >= 25)
	(random-number < 50)
=>
	(up-modify-goal gl-temp-x c:- 8)
	(up-modify-goal gl-temp-y c:+ 8)
	(set-goal gl-temp 2)
	;(up-send-flare gl-temp-x)
	;(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
)

(defrule
	(goal gl-house 1)
	(goal gl-temp 2)
	(up-pending-objects c: house < 1)
	(random-number >= 25)
	(random-number < 50)
	(not (up-can-build-line 0 gl-temp-x c: house))
=>
	(up-modify-goal gl-temp-x c:- 2)
	(up-modify-goal gl-temp-y c:+ 2)
)

; (defrule
	; (goal gl-house 1)
	; (goal gl-temp 2)
	; (random-number >= 25)
	; (random-number < 50)
	; (not (up-can-build-line 0 gl-temp-x c: house))
; =>
	; (up-jump-rule -2)
; )

(defrule
	(goal gl-house 1)
	(goal gl-temp 0)
	(up-pending-objects c: house < 1)
	(random-number >= 50)
	(random-number < 75)
=>
	(up-modify-goal gl-temp-x c:+ 8)
	(up-modify-goal gl-temp-y c:- 8)
	(set-goal gl-temp 3)
	;(up-send-flare gl-temp-x)
;	(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
	;(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
)

(defrule
	(goal gl-house 1)
	(goal gl-temp 3)
	(up-pending-objects c: house < 1)
	(random-number >= 50)
	(random-number < 75)
	(not (up-can-build-line 0 gl-temp-x c: house))
=>
	(up-modify-goal gl-temp-x c:+ 2)
	(up-modify-goal gl-temp-y c:- 2)
)

; (defrule
	; (goal gl-house 1)
	; (goal gl-temp 3)
	; (random-number >= 50)
	; (random-number < 75)
	; (not (up-can-build-line 0 gl-temp-x c: house))
; =>
	; (up-jump-rule -2)
; )

(defrule
	(goal gl-house 1)
	(goal gl-temp 0)
	(up-pending-objects c: house < 1)
	(random-number >= 75)
	(random-number < 100)
=>
	(up-modify-goal gl-temp-x c:- 8)
	(up-modify-goal gl-temp-y c:- 8)
	(set-goal gl-temp 4)
	;(up-send-flare gl-temp-x)
;	(up-chat-data-to-all "house-x: %d" g: gl-temp-x)
;	(up-chat-data-to-all "house-y: %d" g: gl-temp-y)
)

(defrule
	(goal gl-house 1)
	(goal gl-temp 4)
	(up-pending-objects c: house < 1)
	(random-number >= 75)
	(random-number < 100)
	(not (up-can-build-line 0 gl-temp-x c: house))
=>
	(up-modify-goal gl-temp-x c:- 2)
	(up-modify-goal gl-temp-y c:- 2)
)

; (defrule
	; (goal gl-house 1)
	; (goal gl-temp 4)
	; (random-number >= 75)
	; (random-number < 100)
	; (not (up-can-build-line 0 gl-temp-x c: house))
; =>
	; (up-jump-rule -2)
; )

(defrule
	(goal gl-house 1)
	(up-pending-objects c: house < 1)
	(up-can-build-line 0 gl-temp-x c: house)
=>
	;(chat-to-all "255")
    (up-build-line gl-temp-x gl-temp-x c: house)
	(set-goal gl-house 0)
	(set-goal gl-temp 0)
	(up-assign-builders c: house c: 1)
	;(chat-to-player my-player-number "Building a house")
	;(up-set-placement-data my-player-number town-center c: -10)
    ;(up-build place-control 0 c: house)
)

; (defrule
	; (research-completed ri-loom)
	; (current-age >= dark-age)
; =>
	; (set-strategic-number sn-enable-training-queue 1)
; )

(defrule
	(current-age == dark-age)
	(civilian-population >= 7)
	(building-type-count-total lumber-camp == 0)
	(resource-found wood)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
	(building-type-count-total town-center > 0)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

;#load-if-defined UP-NOMAD-STYLE

; (defrule
	; (not (goal strategy-goal sg-waterplay))
	; (current-age <= feudal-age)
	; (can-build dock)
	; (building-type-count town-center >= 1)
	; (building-type-count-total dock < 1)
; =>
	; (build dock)
	; (chat-to-player my-player-number "Baue einen Hafen")
; )

#load-if-defined UP-NOMAD-STYLE

(defrule
	;(goal strategy-goal sg-waterplay)
	;(goal gl-water-on-map 1)
	(current-age <= feudal-age)
	(can-build dock)
	;(building-type-count-total town-center >= 1)
	(building-type-count-total dock < 1)
	(up-pending-objects c: dock < 1)
	(up-gaia-type-count c: shore-fish-class > 0)
=>
	(up-full-reset-search)
	(up-find-local c: villager c: 1)
	(up-modify-sn sn-focus-player-number c:= 0)
	(up-find-remote c: shore-fish-class c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object shorefish-point-x)
	(up-set-target-point shorefish-point-x)
	;(set-strategic-number sn-placement-zone-size 0)
	(up-build place-point 0 c: dock)
	;(up-send-flare shorefish-point-x)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

(defrule
	;(goal strategy-goal sg-waterplay)
	;(goal gl-water-on-map 1)
	(up-research-status c: feudal-age >= research-pending)
	(can-build dock)
	(building-type-count town-center >= 1)
	(building-type-count-total dock < 2)
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)
#end-if

#load-if-not-defined UP-NOMAD-STYLE

(defrule
	;(goal strategy-goal sg-waterplay)
	(up-compare-goal gl-water-on-map == 1)
	(current-age < feudal-age)
	(can-build dock)
	(civilian-population >= 12)
	(building-type-count town-center >= 1)
	(building-type-count-total dock < 1)
	(or (up-gaia-type-count c: ocean-fish-class > 0)
	(up-gaia-type-count c: shore-fish-class > 0))
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

(defrule
	;(goal strategy-goal sg-waterplay)
	(up-compare-goal gl-water-on-map == 1)
	(current-age >= feudal-age)
	(can-build dock)
	(civilian-population >= 12)
	(building-type-count town-center >= 1)
	(building-type-count mining-camp >= 1)
	(building-type-count mill >= 1)
	(building-type-count-total dock < 1)
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

(defrule
	;(goal strategy-goal sg-waterplay)
	(up-compare-goal gl-water-on-map == 1)
	(current-age == feudal-age)
	(can-build dock)
	(civilian-population >= 12)
	(building-type-count town-center >= 1)
	(building-type-count mining-camp >= 1)
	(building-type-count mill >= 1)
	(building-type-count-total dock < 2)
	(unit-type-count-total fishing-ship >= 4)
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

#end-if

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-build dock)
	(civilian-population >= 15)
	(building-type-count-total dock < 4)
	(unit-type-count-total fishing-ship >= 4)
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age >= imperial-age)
	(can-build dock)
	(civilian-population >= 100)
	(wood-amount > 500)
	(building-type-count-total dock < 6)
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(game-time > 3600)
	(current-age >= imperial-age)
	(can-build dock)
	(wood-amount > 500)
	(civilian-population >= 100)
	(building-type-count-total dock < 8)
=>
	(build dock)
	;(chat-to-player my-player-number "Baue einen Hafen")
)

; (defrule
	; (current-age == dark-age)
	; (civilian-population <= 10)
	; (can-train fishing-ship)
	; (unit-type-count fishing-ship < 5)
; =>
	; (train fishing-ship)
	; (chat-to-player my-player-number "Erschaffe Fischkutter")
; )

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == dark-age)
	(civilian-population <= 10)
	(wood-amount < 75)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources wood c: 5)
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == dark-age)
	; (civilian-population > 10)
	(can-train fishing-ship)
	(up-compare-goal gl-military-advantage >= -2)
	(wood-amount > 75)
	(unit-type-count-total fishing-ship < 5)
=>
	(train fishing-ship)
	;(chat-to-player my-player-number "Erschaffe Fischkutter")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == feudal-age)
	(can-train fishing-ship)
	(up-compare-goal gl-military-advantage >= -2)
	(wood-amount > 75)
	(unit-type-count-total fishing-ship < 10)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
=>
	(train fishing-ship)
	(up-modify-goal f-villager-goal c:+ 1)
	;(chat-to-player my-player-number "Erschaffe Fischkutter")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train fishing-ship)
	(up-compare-goal gl-military-advantage >= -2)
	(wood-amount > 200)
	(unit-type-count-total fishing-ship < 20)
=>
	(train fishing-ship)
	;(chat-to-player my-player-number "Erschaffe Fischkutter")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train fishing-ship)
	(up-compare-goal gl-military-advantage >= -2)
	(wood-amount > 300)
	(unit-type-count-total fishing-ship < 15)
=>
	(train fishing-ship)
	;(chat-to-player my-player-number "Erschaffe Fischkutter")
)

(defrule
	(game-time > 3000)
=>
	(up-delete-idle-units idle-type-fishing-ship)
	(chat-local-to-self "Deleting idle fishing-ships.")
	(disable-self)
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count-total fishing-ship >= 5)
=>
	(set-strategic-number sn-number-boat-explore-groups 1)
	(set-strategic-number sn-minimum-boat-explore-group-size 1)
	(set-strategic-number sn-maximum-boat-explore-group-size 1)
	(disable-self)
)

; (defrule
	; (goal gl-water-on-map 1)
	; (unit-type-count fishing-ship >= 1)
; =>
	; (up-full-reset-search)
    ; (up-find-local c: fishing-ship c: 1)
	; (up-modify-sn sn-focus-player-number c:= 0)
	; (up-find-remote c: ocean-fish-class c: 1)
    ; (up-set-target-object search-remote c: 0)
    ; (up-set-group search-local c: 1)
    ; (up-target-objects 1 action-default -1 -1)
    ; (chat-to-all "Fishing ship")
; )

; (defrule
	; (goal gl-water-on-map 1)
	; (unit-type-count fishing-ship > 1)
; =>
	
	; (chat-to-player my-player-number "Assigning 1st fishing ship to fish")
	; (disable-self)
; )


(defrule
	(game-time > 3000)
	(unit-type-count villager > 130)
	(population >= 180)
	(population-headroom <= 20)
	(current-age >= imperial-age)
=>
	(delete-unit villager)
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age >= castle-age)
	(can-research ri-gillnets)
	(unit-type-count fishing-ship >= 5)
=>
	(research ri-gillnets)
)

; (defrule
	; (goal gl-water-on-map 1)
	; (current-age >= castle-age)
	; (can-build fish-trap)
	; (building-type-count-total fish-trap < 10)
	; (unit-type-count-total fishing-ship >= 1)
; =>
	; (up-assign-builders c: fish-trap c: -1)
	; (up-set-placement-data my-player-number dock c: 2)
	; (build fish-trap)
	; (chat-to-player my-player-number "Baue Reuse")
; )

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == feudal-age)
	(can-train galley-line)
	(unit-type-count galley-line < 8)
	(wood-amount > 200)
	(gold-amount > 75)
	(civilian-population g:< f-villager-goal)
	(food-amount < 800)
=>
	(train galley-line)
	; (chat-to-player my-player-number "Erschaffe Galeere")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age >= castle-age)
	(unit-type-count-total warship-class g:> enemy-warship-pop)
	(can-train transport-ship)
	(unit-type-count-total transport-ship < 1)
	(wood-amount > 500)
=>
	(train transport-ship)
	; (chat-to-player my-player-number "Erschaffe Transportschiff")
)


(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == feudal-age)
	(can-train fire-ship-line)
	(civilian-population g:< f-villager-goal)
	(unit-type-count fire-ship-line < 4)
	(wood-amount > 200)
	(gold-amount > 75)
	(food-amount < 800)
=>
	(train fire-ship-line)
	; (chat-to-player my-player-number "Erschaffe Feuerschiff")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train galley-line)
	(unit-type-count galley-line < 1)
	(not (research-completed ri-war-galley))
	(wood-amount > 200)
	(gold-amount > 75)
	(civilian-population g:< c-villager-goal)
=>
	(train galley-line)
	; (chat-to-player my-player-number "Erschaffe Galeere")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train galley-line)
	(unit-type-count galley-line < 20)
	(research-completed ri-war-galley)
	(wood-amount > 200)
	(gold-amount > 75)
	(civilian-population g:< c-villager-goal)
=>
	(train galley-line)
	; (chat-to-player my-player-number "Erschaffe Galeere")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train fire-ship-line)
	(civilian-population g:< c-villager-goal)
	(not (research-completed ri-war-galley))
	(unit-type-count fire-ship-line < 1)
	(wood-amount > 200)
	(gold-amount > 75)
=>
	(train fire-ship-line)
	; (chat-to-player my-player-number "Erschaffe Feuerschiff")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train fire-ship-line)
	(civilian-population g:< c-villager-goal)
	(research-completed ri-war-galley)
	(unit-type-count fire-ship-line < 20)
	(wood-amount > 200)
	(gold-amount > 75)
=>
	(train fire-ship-line)
	; (chat-to-player my-player-number "Erschaffe Feuerschiff")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age >= castle-age)
	(can-research ri-war-galley)
	(or (unit-type-count galley-line > 0)
	(unit-type-count fire-ship-line > 0))
=>
	(research ri-war-galley)
	;(chat-to-player my-player-number "Entwickle Kriegsgaleere")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train longboat-line)
	(unit-type-count longboat-line < 20)
	(civilian-population g:< c-villager-goal)
=>
	(train longboat-line)
	;(chat-to-player my-player-number "Baue Langschiff")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train thirisadai)
	(unit-type-count thirisadai < 60)
	(military-population g:> enemy-military-pop)
	(civilian-population g:< c-villager-goal)
=>
	(train thirisadai)
	;(chat-to-player my-player-number "Baue Thirisadai")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train caravel-line)
	(unit-type-count caravel-line < 20)
	(civilian-population g:< c-villager-goal)
=>
	(train caravel-line)
	;(chat-to-player my-player-number "Baue Karavelle")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train longboat-line)
	(research-completed ri-elite-longboat)
	(unit-type-count longboat-line < 30)
=>
	(train longboat-line)
	;(chat-to-player my-player-number "Baue Langschiff")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train longboat-line)
	(not (research-completed ri-elite-longboat))
	(unit-type-count longboat-line < 5)
=>
	(train longboat-line)
	;(chat-to-player my-player-number "Baue Langschiff")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train caravel-line)
	(research-completed ri-elite-caravel)
	(unit-type-count caravel-line < 30)
=>
	(train caravel-line)
	;(chat-to-player my-player-number "Baue Karavelle")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train caravel-line)
	(not (research-completed ri-elite-caravel))
	(unit-type-count caravel-line < 5)
=>
	(train caravel-line)
	;(chat-to-player my-player-number "Baue Karavelle")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == castle-age)
	(can-train turtle-ship-line)
	(unit-type-count turtle-ship-line < 2)
=>
	(train turtle-ship-line)
;	(chat-to-player my-player-number "Baue Schildkroetenschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-research ri-elite-turtle-ship)
	(unit-type-count turtle-ship-line > 0)
=>
	(research ri-elite-turtle-ship)
;	(chat-to-player my-player-number "Entwickle Elite Schildkroetenschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train turtle-ship-line)
	(unit-type-count turtle-ship-line < 4)
=>
	(train turtle-ship-line)
;	(chat-to-player my-player-number "Baue Schildkroetenschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train galley-line)
	(unit-type-count galley-line < 20)
	(research-completed ri-galleon)
=>
	(train galley-line)
	;(chat-to-player my-player-number "Baue Kriegsgaleeren")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train fire-ship-line)
	(unit-type-count fire-ship-line < 20)
	(research-completed ri-fast-fire-ship)
=>
	(train fire-ship-line)
;	(chat-to-player my-player-number "Baue Feuerschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-train cannon-galleon-line)
	(unit-type-count cannon-galleon-line < 8)
	(or (unit-type-count fire-ship-line >= 8)
	(unit-type-count galley-line >= 8))
=>
	(train cannon-galleon-line)
	;(chat-to-player my-player-number "Baue Kanonenschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-research ri-galleon)
	(unit-type-count galley-line > 0)
=>
	(research ri-galleon)
	;(chat-to-player my-player-number "Entwickle Kriegsgaleone")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-research ri-deck-guns)
	(unit-type-count cannon-galleon-line >= 3)
=>
	(research ri-deck-guns)
;	(chat-to-player my-player-number "Entwickle Elite-Kanonenschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-research ri-fast-fire-ship)
	(unit-type-count fire-ship-line > 0)
=>
	(research ri-fast-fire-ship)
;	(chat-to-player my-player-number "Entwickle Schnelle Feuerschiffe")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-research ri-elite-longboat)
	(unit-type-count longboat-line > 0)
=>
	(research ri-elite-longboat)
;	(chat-to-player my-player-number "Entwickle zu Elite-Langschiffen")
)

(defrule
	(up-compare-goal gl-water-on-map == 1)
	(current-age == imperial-age)
	(can-research ri-elite-caravel)
	(unit-type-count caravel-line > 0)
=>
	(research ri-elite-caravel)
;	(chat-to-player my-player-number "Entwickle zu Elite-Karavelle")
)

;#end-if

; #load-if-defined UP-SCENARIO-GAME

; (defrule
	; ; (not (goal strategy-goal sg-waterplay))
	; (current-age <= feudal-age)
	; (can-build dock)
	; (building-type-count town-center >= 1)
	; (building-type-count-total lumber-camp >= 1)
	; (building-type-count-total dock < 1)
; =>
	; (build dock)
	; (chat-to-player my-player-number "Baue einen Hafen")
; )

; ; (defrule
	; ; (goal strategy-goal sg-waterplay)
	; ; (current-age <= feudal-age)
	; ; (can-build dock)
	; ; (building-type-count town-center >= 1)
	; ; (building-type-count-total dock < 2)
; ; =>
	; ; (build dock)
	; ; (chat-to-player my-player-number "Baue einen Hafen")
; ; )

; (defrule
	; (current-age >= castle-age)
	; (can-build dock)
	; (civilian-population >= 15)
	; (building-type-count-total dock < 3)
; =>
	; (build dock)
	; (chat-to-player my-player-number "Baue einen Hafen")
; )

; ; (defrule
	; ; (current-age == dark-age)
	; ; (civilian-population <= 10)
	; ; (can-train fishing-ship)
	; ; (unit-type-count fishing-ship < 5)
; ; =>
	; ; (train fishing-ship)
	; ; (chat-to-player my-player-number "Erschaffe Fischkutter")
; ; )

; (defrule
	; (current-age == dark-age)
	; (civilian-population <= 10)
	; (wood-amount < 75)
; =>
	; ;(chat-local-to-self "Forced drop")
	; (up-drop-resources wood c: 5)
; )

; (defrule
	; (current-age == dark-age)
	; ; (civilian-population > 10)
	; (can-train fishing-ship)
	; (wood-amount > 110)
	; (unit-type-count fishing-ship < 5)
; =>
	; (train fishing-ship)
	; (chat-to-player my-player-number "Erschaffe Fischkutter")
; )

; (defrule
	; (current-age == feudal-age)
	; (can-train fishing-ship)
	; (wood-amount > 210)
	; (unit-type-count fishing-ship < 10)
	; (civilian-population g:< f-villager-goal)
; =>
	; (train fishing-ship)
	; (chat-to-player my-player-number "Erschaffe Fischkutter")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train fishing-ship)
	; (wood-amount > 300)
	; (unit-type-count fishing-ship < 10)
	; (unit-type-count-total warship-class >= 5)
; =>
	; (train fishing-ship)
	; (chat-to-player my-player-number "Erschaffe Fischkutter")
; )

; (defrule
	; (current-age >= castle-age)
	; (can-research ri-gillnets)
	; (unit-type-count fishing-ship >= 5)
; =>
	; (research ri-gillnets)
; )

; (defrule
	; (current-age >= castle-age)
	; (can-build fish-trap)
	; (building-type-count-total fish-trap < 10)
	; (unit-type-count-total fishing-ship > 5)
	; (up-idle-unit-count idle-type-fishing-ship > 0)
; =>
	; (build fish-trap)
	; (chat-to-player my-player-number "Baue Reuse")
; )

; (defrule
	; (current-age == feudal-age)
	; (can-train galley-line)
	; (unit-type-count galley-line < 8)
	; (wood-amount > 200)
	; (gold-amount > 75)
	; (civilian-population g:< f-villager-goal)
	; (food-amount < 800)
; =>
	; (train galley-line)
	; ; (chat-to-player my-player-number "Erschaffe Galeere")
; )

; (defrule
	; (current-age == feudal-age)
	; (can-train fire-ship-line)
	; (civilian-population g:< f-villager-goal)
	; (unit-type-count fire-ship-line < 4)
	; (wood-amount > 200)
	; (gold-amount > 75)
	; (food-amount < 800)
; =>
	; (train fire-ship-line)
	; ; (chat-to-player my-player-number "Erschaffe Feuerschiff")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train galley-line)
	; (unit-type-count galley-line < 1)
	; (not (research-completed ri-war-galley))
	; (wood-amount > 200)
	; (gold-amount > 75)
	; (civilian-population g:< c-villager-goal)
; =>
	; (train galley-line)
	; ; (chat-to-player my-player-number "Erschaffe Galeere")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train galley-line)
	; (unit-type-count galley-line < 10)
	; (research-completed ri-war-galley)
	; (wood-amount > 200)
	; (gold-amount > 75)
	; (civilian-population g:< c-villager-goal)
; =>
	; (train galley-line)
	; ; (chat-to-player my-player-number "Erschaffe Galeere")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train fire-ship-line)
	; (civilian-population g:< c-villager-goal)
	; (not (research-completed ri-war-galley))
	; (unit-type-count fire-ship-line < 1)
	; (wood-amount > 200)
	; (gold-amount > 75)
; =>
	; (train fire-ship-line)
	; ; (chat-to-player my-player-number "Erschaffe Feuerschiff")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train fire-ship-line)
	; (civilian-population g:< c-villager-goal)
	; (research-completed ri-war-galley)
	; (unit-type-count fire-ship-line < 10)
	; (wood-amount > 200)
	; (gold-amount > 75)
; =>
	; (train fire-ship-line)
	; ; (chat-to-player my-player-number "Erschaffe Feuerschiff")
; )

; (defrule
	; (current-age >= castle-age)
	; (can-research ri-war-galley)
	; (or (unit-type-count galley-line > 0)
	; (unit-type-count fire-ship-line > 0))
; =>
	; (research ri-war-galley)
	; (chat-to-player my-player-number "Entwickle Kriegsgaleere")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train longboat-line)
	; (unit-type-count longboat-line < 20)
	; (civilian-population g:< c-villager-goal)
; =>
	; (train longboat-line)
	; (chat-to-player my-player-number "Baue Langschiff")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train caravel-line)
	; (unit-type-count caravel-line < 20)
	; (civilian-population g:< c-villager-goal)
; =>
	; (train caravel-line)
	; (chat-to-player my-player-number "Baue Karavelle")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train longboat-line)
	; (research-completed ri-elite-longboat)
	; (unit-type-count longboat-line < 30)
; =>
	; (train longboat-line)
	; (chat-to-player my-player-number "Baue Langschiff")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train longboat-line)
	; (not (research-completed ri-elite-longboat))
	; (unit-type-count longboat-line < 5)
; =>
	; (train longboat-line)
	; (chat-to-player my-player-number "Baue Langschiff")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train caravel-line)
	; (research-completed ri-elite-caravel)
	; (unit-type-count caravel-line < 30)
; =>
	; (train caravel-line)
	; (chat-to-player my-player-number "Baue Karavelle")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train caravel-line)
	; (not (research-completed ri-elite-caravel))
	; (unit-type-count caravel-line < 5)
; =>
	; (train caravel-line)
	; (chat-to-player my-player-number "Baue Karavelle")
; )

; (defrule
	; (current-age == castle-age)
	; (can-train turtle-ship-line)
	; (unit-type-count turtle-ship-line < 2)
; =>
	; (train turtle-ship-line)
	; (chat-to-player my-player-number "Baue Schildkroetenschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-research ri-elite-turtle-ship)
	; (unit-type-count turtle-ship-line > 0)
; =>
	; (research ri-elite-turtle-ship)
	; (chat-to-player my-player-number "Entwickle Elite Schildkroetenschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train turtle-ship-line)
	; (unit-type-count turtle-ship-line < 4)
; =>
	; (train turtle-ship-line)
	; (chat-to-player my-player-number "Baue Schildkroetenschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train galley-line)
	; (unit-type-count galley-line < 10)
	; (research-completed ri-galleon)
; =>
	; (train galley-line)
	; ;(chat-to-player my-player-number "Baue Kriegsgaleeren")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train fire-ship-line)
	; (unit-type-count fire-ship-line < 10)
	; (research-completed ri-fast-fire-ship)
; =>
	; (train fire-ship-line)
	; (chat-to-player my-player-number "Baue Feuerschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-train cannon-galleon-line)
	; (unit-type-count cannon-galleon-line < 4)
; =>
	; (train cannon-galleon-line)
	; (chat-to-player my-player-number "Baue Kanonenschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-research ri-galleon)
	; (unit-type-count galley-line >= 0)
; =>
	; (research ri-galleon)
	; ;(chat-to-player my-player-number "Entwickle Kriegsgaleone")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-research ri-deck-guns)
	; (unit-type-count cannon-galleon-line >= 3)
; =>
	; (research ri-deck-guns)
	; (chat-to-player my-player-number "Entwickle Elite-Kanonenschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-research ri-fast-fire-ship)
	; (unit-type-count fire-ship-line >= 0)
; =>
	; (research ri-fast-fire-ship)
	; (chat-to-player my-player-number "Entwickle Schnelle Feuerschiffe")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-research ri-elite-longboat)
	; (unit-type-count longboat-line > 0)
; =>
	; (research ri-elite-longboat)
	; (chat-to-player my-player-number "Entwickle zu Elite-Langschiffen")
; )

; (defrule
	; (current-age == imperial-age)
	; (can-research ri-elite-caravel)
	; (unit-type-count caravel-line > 0)
; =>
	; (research ri-elite-caravel)
	; (chat-to-player my-player-number "Entwickle zu Elite-Karavelle")
; )

; #end-if

(defrule
	(current-age >= dark-age)
	(civilian-population >= 15)
	(not(resource-found food))
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(chat-to-player my-player-number "Keine Nahrungsquellen gefunden - Baue Mühle")
	(build mill)
)

(defrule
	(current-age >= dark-age)
	(civ-selected gurjaras)
	(civilian-population >= 3)
	(building-type-count-total mill == 0)
	(up-gaia-type-count c: forage-class > 2)
	(can-build mill)
=>
	(chat-to-player my-player-number "Building early mill to garrison sheeps")
	(build mill)
)

(defrule
	(current-age == dark-age)
	(civ-selected gurjaras)
	(or (civilian-population < 8)
	(building-type-count mill < 1))
	(up-gaia-type-count c: forage-class > 0)
	(building-type-count-total house >= 2)
=>
	(up-full-reset-search)
	(up-find-local c: 590 c: 7) ;female forager
	(up-find-local c: 592 c: 7) ;male forager
	(up-remove-objects search-local object-data-class == 118) ;male builder
	(up-remove-objects search-local object-data-class == 212) ;female builder
	;(up-remove-objects search-local object-data-class == 974) ;forager-class
	(up-remove-objects search-local object-data-class == 982) ;builder-class
)

(defrule
	(up-set-target-object search-local c: 0)
	(current-age == dark-age)
	(civ-selected gurjaras)
	(or (civilian-population < 8)
	(building-type-count mill < 1))
	(up-gaia-type-count c: forage-class > 0)
	(building-type-count-total house >= 2)
=>
	(up-find-remote c: forage-class c: 1)
	(up-target-objects 0 action-default -1 -1)
)

(defrule
	(current-age == dark-age)
	(civilian-population >= 15)
	(not(resource-found food))
	(can-build farm)
	(idle-farm-count < 1)
=>
	(chat-to-player my-player-number "Keine Nahrungsquellen gefunden - Baue Feld")
	(build farm)
)

; (defrule
	; (current-age == dark-age)
	; (civilian-population == 11)
; =>
	; (up-retask-gatherers food c: 2)
	; (chat-to-player my-player-number "Retasking vills from food to wood")
	; (disable-self)
; )

(defrule
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
	(civilian-population == 14)
=>
	(up-retask-gatherers food c: 1)
	(chat-to-player my-player-number "Retasking 1 villager to gather gold")
	(disable-self)
)

; (defrule
	; (current-age == dark-age)
	; (goal strategy-goal sg-drush)
	; (civilian-population == 14)
; =>
	; (up-full-reset-search)
	; (up-find-local c: 590 c: 1)
	; (up-find-local c: 592 c: 1)
	; (up-remove-objects search-local object-data-index > 0)
	; (up-set-target-by-id g: gl-main-tc-id)
	; (up-target-objects 1 action-garrison -1 -1)
	; (chat-to-player my-player-number "Retasking 1 villager to gather gold")
	; (disable-self)
; )

(defrule
	(current-age >= dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population >= 12)
	(building-type-count-total mill == 0)
	(resource-found food)
	(can-build mill)
	(building-type-count-total town-center > 0)
	(or
		(building-type-count-total house > 0)
		(civ-selected hun)
	)
=>
	(set-strategic-number sn-mill-max-distance 16)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build mill)
)

(defrule
	(current-age >= dark-age)
	(up-compare-goal gl-water-on-map == 1)
	(civilian-population >= 15)
	(up-gaia-type-count c: ocean-fish-class < 1)
	(up-gaia-type-count c: shore-fish-class < 1)
	(resource-found food)
	(building-type-count-total mill == 0)
	(can-build mill)
	(building-type-count-total town-center > 0)
	(or
		(building-type-count-total house > 0)
		(civ-selected hun)
	)
=>
	(set-strategic-number sn-mill-max-distance 16)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(up-assign-builders c: mill c: 2)
	(build mill)
)

(defrule
	(up-research-status c: feudal-age >= research-pending)
	(up-compare-goal gl-water-on-map == 1)
	(building-type-count-total mill == 0)
	(building-type-count-total town-center > 0)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build mill)
)

#load-if-defined UP-NOMAD-STYLE
(defrule
	(current-age >= castle-age)
	(building-type-count-total mill < 3)
	(resource-found food)
	(can-build mill)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build mill)
)
#end-if

(defrule
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
	(civilian-population >= 22)
	(can-build farm)
	(idle-farm-count < 1)
=>
	(build farm)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(not(goal strategy-goal sg-towerrush))
	(current-age >= dark-age)
	(civilian-population >= 19)
	(building-type-count-total lumber-camp == 1)
	(resource-found wood)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
	(building-type-count-total town-center > 0)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age >= dark-age)
	(civilian-population >= 15)
	(building-type-count-total lumber-camp == 1)
	(resource-found wood)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
	(building-type-count-total town-center > 0)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age < castle-age)
	(civilian-population >= 21)
	(building-type-count-total mining-camp == 0)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
;	(up-gaia-type-count c: gold-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age >= dark-age)
	(civilian-population >= 21)
	(building-type-count-total mining-camp == 0)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
;	(up-gaia-type-count c: gold-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age < castle-age)
	(civilian-population >= 18)
	(building-type-count-total mining-camp == 0)
	(resource-found stone)
	(dropsite-min-distance stone < 255)
;	(up-gaia-type-count c: gold-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

(defrule
	(or (goal strategy-goal sg-boom-imp)
	(goal strategy-goal sg-drush))
	(current-age == dark-age)
	(civilian-population >= 25)
	(building-type-count-total mining-camp == 0)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
	;(up-gaia-type-count c: gold-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(current-age == dark-age)
	(goal strategy-goal sg-fastcastle-gu)
	(civilian-population >= 22)
	(building-type-count-total mining-camp == 0)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
	;(up-gaia-type-count c: gold-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(current-age == dark-age)
	(goal strategy-goal sg-fastcastle-uu)
	(civilian-population >= 22)
	(building-type-count-total mining-camp < 1)
	(resource-found stone)
	(dropsite-min-distance stone < 255)
	;(up-gaia-type-count c: stone-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

#load-if-defined EMPIRE-WARS

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-fastcastle-uu)
	(civilian-population >= 22)
	(building-type-count-total mining-camp < 2)
	(resource-found stone)
	(dropsite-min-distance stone < 255)
	;(up-gaia-type-count c: stone-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

#end-if

#load-if-not-defined EMPIRE-WARS

(defrule
	(current-age >= dark-age)
	(goal strategy-goal sg-fastcastle-uu)
	(civilian-population >= 24)
	(building-type-count-total mining-camp < 2)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
	;(up-gaia-type-count c: gold-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
;	(chat-to-all "Baue mining camp auf Gold")
	(build mining-camp)
)
#end-if

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age >= dark-age)
	(current-age < castle-age)
	(enemy-buildings-in-town)
	(civilian-population >= 22)
	(building-type-count-total mining-camp < 2)
	(resource-found stone)
	(dropsite-min-distance stone < 255)
	;(up-gaia-type-count c: stone-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	;(chat-to-all "Baue mining camp auf Stein")
	(build mining-camp)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-boom-imp)))
	(current-age >= dark-age)
	(current-age < castle-age)
	(enemy-buildings-in-town)
	(civilian-population >= 24)
	(building-type-count-total mining-camp < 2)
	(resource-found stone)
	(dropsite-min-distance stone < 255)
	;(up-gaia-type-count c: stone-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
	;(chat-to-all "Baue mining camp auf Stein")
)

(defrule
	(building-type-count-total town-center >= 1)
	(goal strategy-goal sg-archerrush)
	(can-build-with-escrow barracks)
	(civilian-population >= 21)
	(building-type-count-total barracks < 1)
	(goal gl-wood-saving 2)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 16)
    (up-build place-control with-escrow c: barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 3")
)

(defrule
	(building-type-count-total town-center >= 1)
	(goal strategy-goal sg-scoutrush)
	(can-build-with-escrow barracks)
	(not (civ-selected khmer))
	(civilian-population >= 20)
	(building-type-count-total barracks < 1)
	(goal gl-wood-saving 2)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 11)
    (up-build place-control with-escrow c: barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 4") 
)

(defrule
	(building-type-count-total town-center >= 1)
	(goal strategy-goal sg-scoutrush)
	(can-build-with-escrow barracks)
	(civilian-population >= 20)
	(building-type-count-total barracks < 1)
	(goal meso-civ YES)
	(goal gl-wood-saving 5)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control with-escrow c: barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 5")
)

(defrule
	(building-type-count-total town-center >= 1)
	(goal strategy-goal sg-fastcastle-gu)
	(can-build-with-escrow barracks)
	(civilian-population >= 16)
	(building-type-count-total barracks < 1)
	(goal gl-wood-saving 2)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control with-escrow c: barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 6")
)

(defrule
	(current-age == dark-age)
	(can-research-with-escrow feudal-age)
	(not (research-completed ri-loom))
	(gold-amount < 50)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(research feudal-age)
	(chat-to-allies "Gehe in die Feudalzeit")
	(set-goal gl-food-saving 0)
)
	
(defrule
	(can-research-with-escrow feudal-age)
	(unit-type-count-total villager g:>= d-villager-goal)
	(research-completed ri-loom)
	(goal gl-food-saving 21)
=>
	;(set-strategic-number sn-maximum-town-size 12)
	(release-escrow food)
	(set-escrow-percentage food 0)
	(research feudal-age)
	(chat-to-allies "Gehe in die Feudalzeit")
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research-with-escrow feudal-age)
	(unit-type-count-total villager g:>= d-villager-goal)
	(goal gl-food-saving 21)
=>
	;(set-strategic-number sn-maximum-town-size 12)
	(release-escrow food)
	(set-escrow-percentage food 0)
	(research feudal-age)
	(chat-to-allies "Gehe in die Feudalzeit")
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research feudal-age)
	(unit-type-count-total villager g:>= d-villager-goal)
	(and (research-completed ri-loom)
	(not (goal strategy-goal sg-drush)))
=>
	;(set-strategic-number sn-maximum-town-size 12)
	(research feudal-age)
	(chat-to-allies "Gehe in die Feudalzeit")
)

(defrule
	(can-research feudal-age)
	(unit-type-count-total villager g:>= d-villager-goal)
	(goal strategy-goal sg-drush)
=>
	;(set-strategic-number sn-maximum-town-size 12)
	(research feudal-age)
	(chat-to-allies "Gehe in die Feudalzeit")
)

(defrule
	(current-age == dark-age)
	(food-amount < 50)
	(up-research-status c: feudal-age != research-pending)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(current-age == dark-age)
	(food-amount < 60)
	(goal gl-food-saving 1)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(current-age == feudal-age)
	(not (goal strategy-goal sg-scoutrush))
	(food-amount < 50)
	(up-research-status c: castle-age != research-pending)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-scoutrush)
	(unit-type-count-total villager < 32)
	(food-amount < 80)
	(up-research-status c: castle-age != research-pending)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-scoutrush)
	(unit-type-count-total villager >= 32)
	(food-amount < 50)
	(up-research-status c: castle-age != research-pending)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(current-age == castle-age)
	(food-amount < 50)
	(up-research-status c: imperial-age != research-pending)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(civilian-population g:>= d-villager-goal)
	(research-available feudal-age)
	(up-research-status c: feudal-age != research-pending)
	(food-amount < 500)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(civilian-population g:>= f-villager-goal)
	(research-available castle-age)
	(up-research-status c: castle-age != research-pending)
	(food-amount < 800)
	(food-amount >= 680)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(civilian-population g:>= f-villager-goal)
	(research-available castle-age)
	(up-research-status c: castle-age != research-pending)
	(food-amount > 800)
	(gold-amount < 200)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources gold c: 4)
)

(defrule
	(civilian-population g:>= c-villager-goal)
	(research-available imperial-age)
	(up-research-status c: castle-age != research-pending)
	(food-amount < 1000)
	(food-amount >= 700)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources food c: 4)
)

(defrule
	(civilian-population g:>= c-villager-goal)
	(research-available imperial-age)
	(up-research-status c: castle-age != research-pending)
	(food-amount > 1000)
	(gold-amount < 800)
=>
	;(chat-local-to-self "Forced drop")
	(up-drop-resources gold c: 4)
)

#load-if-defined UP-2-PLAYER-GAME
(defrule 
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush))
	(civilian-population >= 14)
	(players-building-count any-enemy < 1)
=>
	;(enable-timer 19 5)
	(up-send-scout group-type-land-explore scout-flank)
	(set-goal gl-scout-map YES)
	(chat-to-player my-player-number "Scouting opponent for my upcoming attack")
	(disable-self)
)

; (defrule 
	; (or (goal strategy-goal sg-drush)
	; (goal strategy-goal sg-towerrush))
	; (civilian-population >= 14)
	; (players-building-count any-enemy < 1)
; =>
	; ;(enable-timer 19 5)
	; (up-send-scout group-type-land-explore scout-mirror)
	; (set-goal gl-scout-map YES)
	; (chat-to-player my-player-number "Scouting opponent for my upcoming attack")
	; (disable-self)
; )

(defrule 
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush))
	(current-age == dark-age)
	(civilian-population >= 14)
	(players-building-count any-enemy >= 1)
=>
	;(enable-timer 19 5)
	(set-goal gl-scout-map YES)
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scouting opponent for my upcoming attack")
	(disable-self)
)

#end-if

#load-if-not-defined UP-2-PLAYER-GAME

(defrule 
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush))
	(civilian-population >= 14)
	(players-building-count any-enemy < 1)
=>
	;(enable-timer 19 5)
	(up-send-scout group-type-land-explore scout-flank)
	(chat-to-player my-player-number "Scouting opponent for my upcoming attack")
	(disable-self)
)

(defrule 
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush))
	(current-age == dark-age)
	(civilian-population >= 14)
	(players-building-count focus-player >= 1)
=>
	;(enable-timer 19 5)
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scouting opponent for my upcoming attack")
	(disable-self)
)

#end-if

#load-if-defined UP-2-PLAYER-GAME

(defrule 
	(civilian-population >= 18)
	(players-building-count any-enemy < 1)
=>
	;(enable-timer 19 5)
	(set-goal gl-scout-map YES)
	(up-send-scout group-type-land-explore scout-flank)
	(chat-to-player my-player-number "Scouting opponent")
	(disable-self)
)

; (defrule 
	; (civilian-population >= 18)
	; (players-building-count any-enemy < 1)
; =>
	; ;(enable-timer 19 5)
	; (set-goal gl-scout-map YES)
	; (up-send-scout group-type-land-explore scout-mirror)
	; (chat-to-player my-player-number "Scouting opponent")
	; (disable-self)
; )

(defrule 
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush))
	(current-age == dark-age)
	(civilian-population >= 18)
	(players-building-count any-enemy >= 1)
=>
	;(enable-timer 19 5)
	(set-goal gl-scout-map YES)
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scouting opponent for my upcoming attack")
	(disable-self)
)

#end-if

#load-if-not-defined UP-2-PLAYER-GAME
(defrule 
	(civilian-population >= 18)
	(players-building-count any-enemy < 1)
=>
	;(enable-timer 19 5)
	(up-send-scout group-type-land-explore scout-flank)
	(chat-to-player my-player-number "Looking for enemy")
	(disable-self)
)

(defrule 
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush))
	(current-age == dark-age)
	(civilian-population >= 18)
	(players-building-count focus-player >= 1)
=>
	;(enable-timer 19 5)
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scouting opponent base")
	(disable-self)
)

#end-if

(defrule
	;(goal strategy-goal sg-drush)
	(goal attack-now-goal 1)
	(current-age == dark-age)
	;(civilian-population g:< d-villager-goal)
	(unit-type-count militiaman-line g:>= gl-drush-militia-count)
	;(unit-type-count-total militiaman-line g:== gl-drush-militia-count)
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-ungarrison c: barracks)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
)

(defrule	
	(up-research-status c: feudal-age == research-pending)
	(town-under-attack)
=>
	(up-ungarrison c: town-center)
	(chat-to-player my-player-number "Debug garrisoned Town-Center during age-up")
	(disable-self)
)

(defrule	
	(up-research-status c: castle-age == research-pending)
	(town-under-attack)
=>
	(up-ungarrison c: town-center)
	(chat-to-player my-player-number "Debug garrisoned Town-Center during age-up")
	(disable-self)
)

(defrule	
	(up-research-status c: imperial-age == research-pending)
	(town-under-attack)
=>
	(up-ungarrison c: town-center)
	(chat-to-player my-player-number "Debug garrisoned Town-Center during age-up")
	(disable-self)
)

(defrule	
	(up-research-status c: ri-wheel-barrow == research-pending)
	(town-under-attack)
=>
	(up-ungarrison c: town-center)
	(chat-to-player my-player-number "Debug garrisoned Town-Center during age-up")
	(disable-self)
)

(defrule	
	(up-research-status c: ri-hand-cart == research-pending)
	(town-under-attack)
=>
	(up-ungarrison c: town-center)
	(chat-to-player my-player-number "Debug garrisoned Town-Center during age-up")
	(disable-self)
)


;endregion

;region Deer Luring (To-Do) ========================================

; (defrule
	; (game-time < 420)
	; (goal remote-total 1)
	; (goal current-deer -1)
	; (dropsite-min-distance deer-hunting < 30)
; =>
	; (chat-local-to-self "Found deer")
	; (up-set-target-object search-remote c: 0)
	; (up-get-object-data object-data-id current-deer)
	; (up-copy-point saved-point-x position-self-x)
	; (up-modify-goal saved-point-x c:* 100)
	; (up-modify-goal saved-point-y c:* 100)
	; (up-get-object-data object-data-precise-x object-point-x)
	; (up-get-object-data object-data-precise-y object-point-y)
	; (up-get-point-distance saved-point-x object-point deer-distance)
	; (up-modify-goal deer-distance c:/ 100)
	; (set-goal deer-luring 1)
; )


; (defrule
	; (goal deer-luring 1)
	; (up-set-target-by-id g: current-deer)
	; (up-compare-goal current-deer != -1)
; =>
	; (up-full-reset-search)
	; (up-add-object-by-id search-local g: scouting-unit)
	; (up-set-target-object search-local c: 0)
	; (up-copy-point saved-point-x position-self-x)
	; (up-modify-goal saved-point-x c:* 100)
	; (up-modify-goal saved-point-y c:* 100)
	; (up-set-target-by-id g: current-deer)
	; (up-get-object-data object-data-precise-x object-point-x)
	; (up-get-object-data object-data-precise-y object-point-y)
	; (up-get-point-distance saved-point-x object-point deer-distance)
	; (up-modify-goal deer-distance c:/ 100)
	; (up-lerp-tiles object-point-x saved-point-x c: -75)
; )

; (defrule
	; (goal deer-luring 1)
	; (up-set-target-by-id g: current-deer)
	; (up-compare-goal current-deer != -1)
; =>
	; (up-bound-precise-point object-point-x 1 c: 0)
	; (up-set-precise-target-point object-point-x)
	; (up-modify-goal object-point-x c:/ 100)
	; (up-modify-goal object-point-y c:/ 100)
	; (up-send-flare object-point-x)
	; (set-strategic-number sn-target-point-adjustment adjust precise)
	; (up-target-point 0 action-move -1 stance-defensive)
; )

; (defrule
	; (goal deer-luring 1)
	; (up-set-target-by-id g: current-deer)
	; (up-compare-goal current-deer != -1)
	; (up-timer-status deer-reset-timer != timer-running)
	; (up-compare-goal deer-distance < 5)
; =>
	; (up-set-target-point position-self-x)
	; (up-full-reset-search)
	; (up-filter-distance c: -1 c: 17)
	; (up-filter-exclude -1 actionid-attack orderid-build -1)
	; (up-find-local c: villager-class g: villagercount)
	; (up-remove-objects search-local object-data-gather-type != food)
	; (up-remove-objects search-local object-data-target-id g:== current-deer)
	; (up-remove-objects search-local object-data-target-id g:== current-boar)
	; (up-clean-search search-local object-data-precise-distance searc-order-asc)
	; (up-remove-objects search-local object-data-index >= 3)
	; (up-get-search-state gl-local-total)
; )

; (defrule
	; (goal deer-luring 1)
	; (up-compare-goal local-total >= 1)
	; (up-set-target-by-id g: current-deer)
	; (up-compare-goal current-deer != -1)
	; (up-timer-status deer-reset-timer != timer-running)
	; (up-compare-goal deer-distance < 5)
; =>
	; (up-set-target-by-id g: current-deer)
	; (up-target-objects 1 action-default -1 -1)
	; (set-goal deer-distance -1)
	; (enable-timer deer-reset-timer 9)
; )


	
;endregion

;region Hunting Boar =============================================== 
	
(defrule
	(current-age == dark-age)
	(up-research-status c: feudal-age != research-pending)
=>
	(up-jump-rule 5)
)

; (defrule
	; (dropsite-min-distance live-boar < 32)
	; (dropsite-min-distance live-boar > 0)
	; (game-time >= 55)
	; (nand	(death-match-game)
	; (game-time < 300))
	; (up-compare-sn sn-enable-boar-hunting != 2)
	; (or (unit-type-count villager >= 9); 10
	; (up-remaining-boar-amount < 45))
	; (up-timer-status boar-timer != timer-running)	
; =>
	; (up-full-reset-search)
    ; (up-modify-sn sn-focus-player-number c: 0)
	; (up-filter-status c: status-gather c: list-inactive)
	; (up-find-status-remote c: boar-class c: 1)
	; (up-get-search-state gl-local-total)
	; ;(up-chat-data-to-player my-player-number "Number of dead boars: %d" g: gl-remote-total)
; )

; (defrule ;reset boar-hunting settings
	; (up-set-target-object search-remote c: 0)
	; (dropsite-min-distance live-boar < 32)
	; (dropsite-min-distance live-boar > 0)
	; (up-object-data object-data-carry < 100)
	; (game-time >= 55)
	; (nand	(death-match-game)
	; (game-time < 300))
	; (up-compare-sn sn-enable-boar-hunting != 2)
	; (or (unit-type-count villager >= 9); 10
	; (up-remaining-boar-amount < 45))
	; (up-timer-status boar-timer != timer-running)	
; =>
	; (enable-timer boar-timer 3)
	; (set-strategic-number sn-enable-boar-hunting 2)
	; (set-strategic-number sn-minimum-boar-hunt-group-size 1)
	; (set-strategic-number sn-minimum-number-hunters 1)
	; (set-strategic-number sn-maximum-food-drop-distance 15); 16
	; (set-strategic-number sn-maximum-hunt-drop-distance 32)
	; (chat-local-to-self "Hunting a boar.")
; )
	
(defrule
	(up-timer-status boar-timer != timer-running)	
	(game-time >= 55)
	(nand	(death-match-game)
	(game-time < 300))
	(up-compare-sn sn-enable-boar-hunting != 2)
	(or (unit-type-count villager >= 9); 10
	(up-remaining-boar-amount < 45))
	(dropsite-min-distance live-boar <= 32)
	(dropsite-min-distance live-boar >= 0)
=>
	(enable-timer boar-timer 3)
	(set-strategic-number sn-enable-boar-hunting 2)
	(set-strategic-number sn-minimum-boar-hunt-group-size 1)
	(set-strategic-number sn-minimum-number-hunters 1)
	(set-strategic-number sn-maximum-food-drop-distance 15); 16
	(set-strategic-number sn-maximum-hunt-drop-distance 32)
	(chat-local-to-self "Hunting a boar.")
)

(defrule
	(up-timer-status boar-timer != timer-running)
	(dropsite-min-distance live-boar <= 7) ;14
	(strategic-number sn-enable-boar-hunting >= 2); 1
	(unit-type-count 216 <= 2) ;hunter female
	(unit-type-count 122 <= 2) ;hunter male
(nand	(unit-type-count 216 >= 1)
	(unit-type-count 122 >= 1))
(or	(unit-type-count 216 >= 1)
	(unit-type-count 122 >= 1))
=>
	(enable-timer boar-timer 6)
	(set-strategic-number sn-minimum-number-hunters 6)
	(up-request-hunters c: 6)
;	(chat-local-to-self "Requesting support hunter.")
)
(defrule
	(up-timer-status boar-timer != timer-running)
	(dropsite-min-distance live-boar <= 8)
	(dropsite-min-distance live-boar >= 0)
	(unit-type-count 216 <= 2)
	(unit-type-count 122 <= 2)
	(strategic-number sn-enable-boar-hunting >= 1)
=>
	(enable-timer boar-timer 12); 18
	(set-strategic-number sn-minimum-boar-hunt-group-size 4)
	(set-strategic-number sn-minimum-number-hunters 4)
;	(up-retask-gatherers food c: 1)
	(up-request-hunters c: 4); 5
;	(chat-local-to-self "Adding more hunters.")
)

(defrule
	(up-timer-status boar-timer != timer-running)
(or	(dropsite-min-distance live-boar s:> sn-maximum-hunt-drop-distance)
	(and	(or	(unit-type-count 216 >= 3); male hunter
			(unit-type-count 122 >= 3)); female hunter
		(and	(dropsite-min-distance live-boar >= 10)
			(dropsite-min-distance boar-hunting <= 9)))); eating a boar right now
	(strategic-number sn-minimum-number-hunters > 1)
=>
	(set-strategic-number sn-minimum-boar-hunt-group-size 1)
	(set-strategic-number sn-minimum-number-hunters 1)
;	(chat-local-to-self "Lowering min-hunters.")
)

(defrule
(or	(unit-type-count villager >= 30); test
(or	(dropsite-min-distance live-boar > 32)
	(dropsite-min-distance live-boar <= -1)))
(or	(building-type-count-total mill >= 2)
	(unit-type-count villager >= 12))
	;(unit-type-count villager >= 18) ;18
	;(game-time > 390); 420
	;(up-remaining-boar-amount < 110)
;(or	(unit-type-count villager >= 18)
;	(and	(cc-players-unit-type-count 0 48 == 0); no boar on the map
;		(cc-players-unit-type-count 0 822 == 0)))
	(up-compare-sn sn-enable-boar-hunting != 1)
	(current-age == dark-age)
=>
	(set-goal boar-hunting 0)
	(set-strategic-number sn-enable-boar-hunting 1); enable hunting of all kinds
	(set-strategic-number sn-minimum-boar-hunt-group-size 1)
	(set-strategic-number sn-minimum-number-hunters 2)
	(set-strategic-number sn-disable-villager-garrison 0)
;	(set-strategic-number sn-maximum-hunt-drop-distance 20)
;	(up-modify-sn sn-maximum-hunt-drop-distance c:max 20)
	(chat-local-to-self "Disabling hunting restrictions.")
)

; (defrule
; (or	(unit-type-count villager >= 30); test
; (or	(dropsite-min-distance live-boar > 32)
	; (dropsite-min-distance live-boar <= -1)))
; (or	(building-type-count-total mill >= 2)
	; (unit-type-count villager >= 12))
	; ;(unit-type-count villager >= 18) ;18
	; ;(game-time > 390); 420
	; ;(up-remaining-boar-amount < 110)
; ;(or	(unit-type-count villager >= 18)
; ;	(and	(cc-players-unit-type-count 0 48 == 0); no boar on the map
; ;		(cc-players-unit-type-count 0 822 == 0)))
	; (strategic-number sn-enable-boar-hunting != 1)
; =>
	; (set-strategic-number sn-enable-boar-hunting 1); enable hunting of all kinds
	; (set-strategic-number sn-minimum-boar-hunt-group-size 1)
	; (set-strategic-number sn-minimum-number-hunters 2)
; ;	(set-strategic-number sn-maximum-hunt-drop-distance 20)
; ;	(up-modify-sn sn-maximum-hunt-drop-distance c:max 20)
	; ;(chat-local-to-self "Disabling hunting restrictions.")
; )


;endregion

;region Hunting Boar (NEW, Still has some bugs) ====================

;shooting boar with tc code

(defrule
	(up-research-status c: feudal-age >= research-pending)
=>
	(up-jump-rule 16) ;18 
)

(defrule
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
=>
	(up-full-reset-search)	
	(up-modify-sn sn-focus-player-number c:= 0)
	(up-find-remote c: boar-class c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-carry boar-food-amount)
	(up-chat-data-to-self "Boars on this map have %d food" g: boar-food-amount) 
	(disable-self)
)
	
(defrule
	(up-compare-goal g-boar-id != -1)						
	(up-group-size c: 3 > 0)						
=>	
	(up-full-reset-search)					
	(up-set-target-by-id g: g-boar-id)					
	(up-get-object-data object-data-carry remaining-boar-food) ;get amount of food out target boar currently has
	;(up-chat-data-to-self "Boar food remaining: %d" g: remaining-boar-food) 
)	
	
(defrule
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(or (and (unit-type-count villager-hunter < 1) ;for hunting 1st boar
		(up-compare-goal g-boar-id == -1))	
		(and (up-compare-goal remaining-boar-food c:<= 100) ; hunting after 1st boar
		(up-compare-goal remaining-boar-food > -1)))
=>
	(up-full-reset-search)
	(up-modify-sn sn-focus-player-number c:= 0)
	(up-set-target-point gl-starting-tc-x)
	(up-filter-distance c: -1 c: 32)
	(up-find-remote c: boar-class c: 4) ;find a boar
	(up-remove-objects search-remote object-data-carry < 1) ;remove objects not carrying food
	(up-clean-search search-remote object-data-distance search-order-desc)	;sort list to get most far away boar as first object
	(up-remove-objects search-remote -1 > 0) ;remove all other boars in the list
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-id g-boar-id) ;Store the boars ID in a goal
	(chat-to-player my-player-number "Found a boar")
	(up-chat-data-to-self "Boar id is: %d" g: g-boar-id) 
)

(defrule
	(up-group-size c: 3 == 1)
	(up-compare-goal g-boar-id != -1)	
	(up-object-data object-data-action != actionid-attack)
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(up-compare-goal remaining-boar-food c:<= 100)
	(up-compare-goal remaining-boar-food > -1)
	(unit-type-count villager >= 8) 
=>
	(up-full-reset-search)
	(up-set-group search-local c: 3)
	(up-find-local c: 590 c: 240) ;female shepherd
	(up-find-local c: 592 c: 240) ;male shepherd
	(up-find-local c: 216 c: 240) ;female hunter
	(up-find-local c: 122 c: 240) ;male hunter
	(up-find-local c: 354 c: 240) ;female forager
	(up-find-local c: 120 c: 240) ;male forager
	(up-remove-objects search-local object-data-group-flag == 2)
	(up-remove-objects search-local object-data-hitpoints < 25)
	(up-remove-objects search-local -1 > 0) ;find one shepherd/hunter
	(up-reset-group c: 3)
	(up-create-group 0 0 c: 3) ;boar-lurer ctrl-group
	(up-modify-group-flag 1 c: 3)
	(up-chat-data-to-player my-player-number "Number of boar lurers a: %d" g: gl-local-total) 
)

(defrule
	(up-group-size c: 3 != 1)
	(up-compare-goal g-boar-id != -1)	
	(up-object-data object-data-action != actionid-attack)
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(unit-type-count villager >= 8) 
=>
	(up-full-reset-search)
	(up-find-local c: 590 c: 240) ;female shepherd
	(up-find-local c: 592 c: 240) ;male shepherd
	(up-find-local c: 216 c: 240) ;female hunter
	(up-find-local c: 122 c: 240) ;male hunter
	(up-find-local c: 354 c: 240) ;female forager
	(up-find-local c: 120 c: 240) ;male forager
	(up-remove-objects search-local object-data-group-flag == 2)
	(up-remove-objects search-local object-data-hitpoints < 25)
	(up-remove-objects search-local -1 > 0) ;find one shepherd
	(up-reset-group c: 3)
	(up-create-group 0 0 c: 3) ;boar-lurer ctrl-group
	(up-modify-group-flag 1 c: 3)
	(up-get-search-state gl-local-total)
	(up-chat-data-to-player my-player-number "Number of boar lurers b: %d" g: gl-local-total) 
)

(defrule
	(or (goal strategy-goal sg-drush)
	(or (goal strategy-goal sg-scoutrush)
	(or (goal strategy-goal sg-towerrush)
	(or (civ-selected gurjaras)
	(civ-selected briton)))))
	(up-group-size c: 3 == 1) 
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(up-compare-goal g-boar-id != -1)		
	(unit-type-count villager >= 9) 
=>
	(up-full-reset-search)
	(up-set-group search-local c: 3)
)

(defrule
	(or (goal strategy-goal sg-drush)
	(or (goal strategy-goal sg-scoutrush)
	(or (goal strategy-goal sg-towerrush)
	(or (civ-selected gurjaras)
	(civ-selected briton)))))
	(up-group-size c: 3 == 1) 
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(up-compare-goal g-boar-id != -1)	
	;(up-set-target-by-id g: g-boar-id)	
	(up-object-data object-data-action != actionid-attack)	
	(up-set-target-object search-local c: 0)
	(unit-type-count villager >= 9) 
=>
	(up-full-reset-search)
	(up-set-group search-local c: 3)
	(up-remove-objects search-local object-data-tasks-count > 0)		
	(up-remove-objects search-local object-data-next-attack > 0)		
	(up-remove-objects search-local object-data-action == actionid-build)
	(up-set-target-by-id g: g-boar-id)
	(up-target-objects 1 action-default -1 -1)
	;(chat-to-player my-player-number "enable boar-luring") 
)

(defrule
	(nor (goal strategy-goal sg-drush)
	(or (goal strategy-goal sg-scoutrush)
	(or (goal strategy-goal sg-towerrush)
	(or (civ-selected gurjaras)
	(civ-selected briton)))))
	(up-group-size c: 3 == 1) 
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(up-compare-goal g-boar-id != -1)		
	(unit-type-count villager >= 10) 
=>
	(up-full-reset-search)
	(up-set-group search-local c: 3)
	;(chat-to-player my-player-number "Test")
)

(defrule
	(nor (goal strategy-goal sg-drush)
	(or (goal strategy-goal sg-scoutrush)
	(or (goal strategy-goal sg-towerrush)
	(or (civ-selected gurjaras)
	(civ-selected briton)))))
	(up-group-size c: 3 == 1) 
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	(up-compare-goal g-boar-id != -1)
	(up-object-data object-data-action != actionid-attack)	
	(up-set-target-object search-local c: 0)
	(unit-type-count villager >= 10) 
=>
	(enable-timer 6 1)
	(up-full-reset-search)
	(up-set-group search-local c: 3)
	(up-remove-objects search-local object-data-tasks-count > 0)		
	(up-remove-objects search-local object-data-next-attack > 0)		
	(up-remove-objects search-local object-data-action == actionid-build)
	(up-set-target-by-id g: g-boar-id)
	(up-target-objects 1 action-default -1 -1)
	;(chat-to-player my-player-number "enable boar-luring")
)

(defrule ;find boar close to tc
	(up-compare-goal gl-garrison-tc-two < 1)
	(dropsite-min-distance live-boar < 10)
	(dropsite-min-distance live-boar > 0)
=>
	(set-strategic-number sn-disable-villager-garrison 3)
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-filter-distance c: -1 c: 5)
	(up-find-remote c: boar-class c: 20)
	(up-get-search-state gl-local-total)
	;(chat-to-player my-player-number "Boar Test")
)

(defrule ;find villagers close to tc
	(up-set-target-object search-remote c: 0)
	(up-compare-goal gl-garrison-tc-two < 1)
	(dropsite-min-distance live-boar < 10)
	(dropsite-min-distance live-boar > 0)
	(timer-triggered 6)
=>
    (up-set-target-point gl-starting-tc-x)
    (up-filter-distance c: -1 c: 6)
	;(up-filter-exclude -1 -1 orderid-hunt -1)
	(up-find-local c: villager-class c: 10)
	(up-remove-objects search-local object-data-group-flag == 3)
	(up-remove-objects search-local -1 > 3)
	(up-reset-group c: 2)
	(up-create-group 0 0 c: 2) ;boar-hunter ctrl-group
	(up-modify-group-flag 1 c: 2)
	(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Found %d villagers to garrison" g: gl-local-total)
	;(up-chat-data-to-player my-player-number "TC garrison goal: %d" g: gl-garrison-tc-two)
	;(up-chat-data-to-player my-player-number "boar hunting goal: %d" g: boar-hunting)
	(chat-to-player my-player-number "Villagers Test")
)

(defrule ;find tc and garrison vills from local search
	(up-set-target-object search-remote c: 0)
	(up-compare-sn sn-disable-villager-garrison == 3)
	;(up-compare-goal gl-local-total >= 4)
	(up-compare-goal gl-garrison-tc-two < 1)
	(timer-triggered 6)
=>
	(disable-timer 6)
	(up-reset-search 0 0 1 1)
    (set-strategic-number sn-focus-player-number my-player-number)
	(up-find-remote c: town-center c: 1)
	(up-target-objects 0 action-garrison -1 -1)
	(up-gather-inside c: town-center c: -1)
	(chat-to-player my-player-number "Garrison Test")
	(set-goal gl-garrison-tc-two 1)
	(enable-timer 6 15)
)

; (defrule
	; (goal boar-hunting 2)
	; (up-compare-sn sn-disable-villager-garrison == 3)
; =>
	; (up-full-reset-search)
	; (up-set-group search-local c: 3)
	; ;(chat-to-player my-player-number "Saving hunter") 
; )

; (defrule
	; (goal boar-hunting 2)
	; (up-compare-sn sn-disable-villager-garrison == 3)
	; (up-set-target-object search-local c: 0)
	; (up-object-data object-data-hitpoints < 10)
	; (dropsite-min-distance live-boar < 7)
	; (dropsite-min-distance live-boar > 0)
; =>
	; (set-strategic-number sn-focus-player-number my-player-number)
	; (up-find-remote c: town-center c: 1)
	; (up-target-objects 0 action-garrison -1 -1)
	; ;(up-gather-inside c: town-center c: -1)
	; (chat-to-player my-player-number "Saving hunter") 
; )

(defrule ;find tc and shoot boar
	(dropsite-min-distance live-boar < 32)
	(dropsite-min-distance live-boar > 0)
	;(up-set-target-object search-remote c: 0)
	;(timer-triggered 6)
	(goal gl-garrison-tc-two 1)
=>
    (up-reset-search 0 0 1 1)
	(set-strategic-number sn-focus-player-number 0)
	(up-set-target-point gl-starting-tc-x)
	;(up-filter-distance c: -1 c: 6)
	;(up-find-remote c: boar-class c: 20)
	(up-set-target-by-id g: g-boar-id)
	;(up-remove-objects search-remote object-data-hitpoints <= 20)
	(up-find-local c: town-center c: 1) 
	;(up-add-object-by-id search-remote g: g-boar-id)
	(up-target-objects 1 action-default -1 -1)
	;(chat-to-player my-player-number "Shooting Boar")
	;(set-goal g-boar-status 2)
)

(defrule ;ungarrison villagers after boar has been hit
	(goal gl-garrison-tc-two 1)
	;(up-set-target-object search-remote c: 0)
	(up-set-target-by-id g: g-boar-id)
	(up-object-data object-data-hitpoints <= 25)
=>
	(up-gather-inside c: town-center c: 0)
    (up-ungarrison c: town-center)
	(set-goal gl-garrison-tc-two 0)
	(chat-to-player my-player-number "ungarrison")
)

(defrule ;ungarrison villagers after boar has been hit
	(goal gl-garrison-tc-two 0)
	(up-set-target-by-id g: g-boar-id)
	(up-object-data object-data-hitpoints <= 25)
	(up-object-data object-data-hitpoints > 0)
=>
	(up-full-reset-search)
	(up-set-group search-local c: 2)
	(up-set-target-by-id g: g-boar-id)
	(up-target-objects 1 action-default -1 -1)
	(chat-to-player my-player-number "finish the boar")
)

; (defrule
	; (dropsite-min-distance live-boar < 32)
	; (dropsite-min-distance live-boar > 0)
; =>
	; (up-full-reset-search)
    ; (up-modify-sn sn-focus-player-number c: 0)
	; (up-filter-status c: status-gather c: list-inactive)
	; (up-find-status-remote c: boar-class c: 1)
	; (up-get-search-state gl-local-total)
	; ;(up-chat-data-to-player my-player-number "Number of dead boars: %d" g: gl-remote-total)
; )

(defrule ;reset boar-hunting settings
	;(up-set-target-object search-remote c: 0)
	(up-compare-goal remaining-boar-food g:< boar-food-amount)
	;(up-object-data object-data-hitpoints < 1)
	(up-compare-goal remaining-boar-food > 0)
	(up-compare-sn sn-disable-villager-garrison != 0)
=>
	(set-strategic-number sn-disable-villager-garrison 0)
	(chat-to-player my-player-number "villager garrisoning allowed")
)

; (defrule ;reset boar-hunting settings
	; (up-set-target-object search-remote c: 0)
	; (dropsite-min-distance live-boar < 32)
	; (dropsite-min-distance live-boar > 0)
	; (goal boar-hunting 2)
	; ;(up-set-target-by-id g: g-boar-id)
	; (up-object-data object-data-carry < 95)
	; (up-compare-sn sn-minimum-number-hunters != 1)
	; (up-compare-sn sn-disable-villager-garrison == 0) ;are we currently luring a boar?
; =>
	; (set-strategic-number sn-minimum-number-hunters 1)
	; (set-goal boar-hunting 0)
	; (set-goal g-boar-status 0)
	; (enable-timer 5 1)
	; (chat-to-player my-player-number "resetting")
; )

(defrule
(or	(unit-type-count villager >= 30); test
(or	(dropsite-min-distance live-boar >= 32)
	(dropsite-min-distance live-boar <= -1)))
(or	(building-type-count-total mill >= 2)
	(unit-type-count villager >= 12))
	;(unit-type-count villager >= 18) ;18
	;(game-time > 390); 420
	;(up-remaining-boar-amount < 110)
;(or	(unit-type-count villager >= 18)
;	(and	(cc-players-unit-type-count 0 48 == 0); no boar on the map
;		(cc-players-unit-type-count 0 822 == 0)))
	(up-compare-sn sn-enable-boar-hunting != 1)
	(current-age == dark-age)
=>
	(up-ungarrison c: town-center)
	(set-goal boar-hunting 0)
	(set-strategic-number sn-enable-boar-hunting 1); enable hunting of all kinds
	(set-strategic-number sn-minimum-boar-hunt-group-size 1)
	(set-strategic-number sn-minimum-number-hunters 2)
	(set-strategic-number sn-disable-villager-garrison 0)
;	(set-strategic-number sn-maximum-hunt-drop-distance 20)
;	(up-modify-sn sn-maximum-hunt-drop-distance c:max 20)
	(chat-local-to-self "Disabling hunting restrictions.")
)

;endregion

;region Build Order Feudal =========================================


(defrule
	(current-age == feudal-age)
=>
	(set-strategic-number sn-enable-research-queue 1)
	(set-strategic-number sn-disable-builder-assistance 0)
	(disable-self)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(up-compare-sn sn-enable-training-queue == 1)
	(unit-type-count-total scout-cavalry-line < 4)
=>
	(set-strategic-number sn-enable-training-queue 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(up-compare-sn sn-enable-training-queue == 0)
	(unit-type-count-total scout-cavalry-line >= 4)
=>
	(set-strategic-number sn-enable-training-queue 1)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == castle-age)
	(up-compare-sn sn-enable-training-queue == 0)
=>
	(set-strategic-number sn-enable-training-queue 1)
)



(defrule
	(current-age == feudal-age)
	(up-compare-sn sn-number-explore-groups != 1)
	(up-compare-sn sn-total-number-explorers != 1)
	(or (unit-type-count scout-cavalry-line > 0)
	(or (unit-type-count eagle-warrior-line > 0)
	(or (unit-type-count camel-scout > 0)
	(unit-type-count spearman-line > 0))))
	(up-compare-goal attack-now-goal != 1)
=>
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
)

(defrule
	(current-age == feudal-age)
	(up-compare-sn sn-number-explore-groups == 1)
	(up-compare-sn sn-total-number-explorers == 1)
	(nor (unit-type-count scout-cavalry-line > 0)
	(or (unit-type-count eagle-warrior-line > 0)
	(or (unit-type-count camel-scout > 0)
	(unit-type-count spearman-line > 0))))
=>
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
)

#load-if-defined UP-2-PLAYER-GAME
(defrule 
	(up-research-status c: feudal-age == research-pending)
	(players-building-count focus-player <= 0)
=>
	;(enable-timer 19 45)
	(up-send-scout group-type-land-explore scout-opposite)
	(chat-to-player my-player-number "Suche nach Gegner")
	(disable-self)
)

(defrule 
	(current-age >= feudal-age)
	(players-building-count focus-player <= 0)
=>
	;(enable-timer 19 45)
	(up-send-scout group-type-land-explore scout-opposite)
	(chat-to-player my-player-number "Suche nach Gegner")
	(disable-self)
)

#end-if

#load-if-not-defined UP-2-PLAYER-GAME

#load-if-defined UP-POCKET-POSITION
(defrule 
	(up-research-status c: feudal-age == research-pending)
	(players-building-count focus-player <= 0)
=>
	;(enable-timer 19 45)
	(up-send-scout group-type-land-explore scout-opposite)
	(chat-to-player my-player-number "Suche nach Gegner")
	(disable-self)
)

(defrule 
	(current-age >= feudal-age)
	(players-building-count focus-player <= 0)
=>
	;(enable-timer 19 45)
	(up-send-scout group-type-land-explore scout-opposite)
	(chat-to-player my-player-number "Suche nach Gegner")
	(disable-self)
)
#end-if

#load-if-not-defined UP-POCKET-POSITION
(defrule 
	(up-research-status c: feudal-age == research-pending)
	(players-building-count focus-player <= 0)
=>
	;(enable-timer 19 45)
	(up-send-scout group-type-land-explore scout-flank)
	(chat-to-player my-player-number "Suche nach Gegner")
	(disable-self)
)

(defrule 
	(current-age >= feudal-age)
	(players-building-count focus-player <= 0)
=>
	;(enable-timer 19 45)
	(up-send-scout group-type-land-explore scout-flank)
	(chat-to-player my-player-number "Suche nach Gegner")
	(disable-self)
)
#end-if

#end-if

(defrule 
	(current-age == feudal-age)
	(players-building-count focus-player > 0)
=>
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scoute gegnerische Base")
	(disable-self)
)

(defrule 
	(current-age == castle-age)
	(players-building-count focus-player > 0)
=>
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scoute gegnerische Base")
	(disable-self)
)

(defrule 
	(current-age == imperial-age)
	(players-building-count focus-player > 0)
=>
	(up-send-scout group-type-land-explore scout-enemy)
	(chat-to-player my-player-number "Scoute gegnerische Base")
	(disable-self)
)


(defrule 
	(current-age >= feudal-age)
=>
	(disable-timer scouting-timer)
)

(defrule
	(current-age >= feudal-age)
=>
	(set-strategic-number sn-enable-new-building-system 1)
	(set-strategic-number sn-preferred-mill-placement 1)
	(disable-self)
)

(defrule
    (unit-type-count villager > 18)
    (game-time > 5)
=>
    (set-strategic-number sn-camp-max-distance 16)
	;(up-modify-goal gl-camp-distance-setter s:= sn-camp-max-distance)
	(chat-local-to-self "Camp distance 16.")
    (disable-self)
)

(defrule
    (unit-type-count villager > 23)
    (building-type-count-total mining-camp < 1)
    (game-time > 5)
	(strategic-number sn-camp-max-distance < 45)
=>
    (up-modify-sn sn-camp-max-distance c:+ 4)
	(up-chat-data-to-self "Camp distance: %d." s: sn-camp-max-distance)
    (disable-self)
)
			
(defrule
    (building-type-count-total mining-camp > 3)
    (or(up-players-in-game enemy <= 2)
        (building-type-count town-center > 2))
	(game-time > 5)
=>
    (up-modify-sn sn-camp-max-distance c:+ 8)
	(up-chat-data-to-self "Camp distance: %d." s: sn-camp-max-distance)
	(disable-self)
)

(defrule
    (strategic-number sn-camp-max-distance < HALF-MAP-SIZE)
    (game-time > 1950)
    (or	(game-time > 2500)
        (building-type-count-total mining-camp >= 4))
=>
    (set-strategic-number sn-camp-max-distance HALF-MAP-SIZE)
	(chat-local-to-self "Camp distance half of the map size.")
    (disable-self)
)
			
(defrule
    (strategic-number sn-camp-max-distance < FULL-MAP-SIZE)
    (game-time > 2500)
    (or	(game-time > 3600)
        (population >= 120))
=>
    (set-strategic-number sn-camp-max-distance FULL-MAP-SIZE)
	(chat-local-to-self "Camp distance full map size.")
	(disable-self)
)



(defrule
	(true)
=>
	(enable-timer 35 1)
	(disable-self)
)

;gold

(defrule
	(up-gaia-type-count c: gold-mine-class < 1)
=>
	(up-jump-rule 4)
)

(defrule
	(building-type-count-total town-center >= 1)
	(game-time > 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 s: sn-camp-max-distance)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: gold c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: gold c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count-total town-center >= 1)
	(not (up-set-target-object search-remote c: 0))
	(up-compare-sn sn-camp-max-distance < 50)
	(current-age <= castle-age)
	(game-time > 5)
=>
	(up-modify-sn sn-camp-max-distance c:+ 1)
	(up-chat-data-to-self "Gold-camp distance: %d" s: sn-camp-max-distance)
)

(defrule
	(building-type-count-total town-center >= 1)
	(game-time > 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 s: sn-camp-max-distance)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: gold c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: gold c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count-total town-center >= 1)
	(up-compare-goal gl-remote-total < 1)
	(up-compare-sn sn-camp-max-distance < 255)
	(current-age > castle-age)
	(game-time > 5)
=>
	(up-modify-sn sn-camp-max-distance c:+ 1)
	(up-chat-data-to-self "Gold-camp distance: %d" s: sn-camp-max-distance)
)

;wood

(defrule
	(up-gaia-type-count c: tree-class < 1)
=>
	(up-jump-rule 4)
)

(defrule
	(building-type-count-total town-center >= 1)
	(game-time > 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 s: sn-camp-max-distance)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: wood c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: wood c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count-total town-center >= 1)
	(not (up-set-target-object search-remote c: 0))
	(up-compare-sn sn-camp-max-distance < 50)
	(current-age <= castle-age)
	(game-time > 5)
=>
	(up-modify-sn sn-camp-max-distance c:+ 1)
	(up-chat-data-to-self "Lumbercamp distance: %d" s: sn-camp-max-distance)
)

(defrule
	(building-type-count-total town-center >= 1)
	(game-time > 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 s: sn-camp-max-distance)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: wood c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: wood c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count-total town-center >= 1)
	(up-compare-goal gl-remote-total < 1)
	(current-age > castle-age)
	(up-compare-sn sn-camp-max-distance < 255)
	(game-time > 5)
=>
	(up-modify-sn sn-camp-max-distance c:+ 1)
	(up-chat-data-to-self "Lumbercamp distance: %d" s: sn-camp-max-distance)
)

;stone

(defrule
	(up-gaia-type-count c: stone-mine-class < 1)
=>
	(up-jump-rule 4)
)

(defrule
	(building-type-count-total town-center >= 1)
	(game-time > 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 s: sn-camp-max-distance)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: stone c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: stone c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count-total town-center >= 1)
	(not (up-set-target-object search-remote c: 0))
	(up-compare-sn sn-camp-max-distance < 50)
	(current-age <= castle-age)
	(game-time > 5)
=>
	(up-modify-sn sn-camp-max-distance c:+ 1)
	(up-chat-data-to-self "Stone-camp distance: %d" s: sn-camp-max-distance)
)

(defrule
	(building-type-count-total town-center >= 1)
	(game-time > 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-filter-distance c: -1 s: sn-camp-max-distance)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: stone c: 1)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: stone c: 1)
	(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count-total town-center >= 1)
	(up-compare-goal gl-remote-total < 1)
	(current-age > castle-age)
	(up-compare-sn sn-camp-max-distance < 255)
	(game-time > 5)
=>
	(up-modify-sn sn-camp-max-distance c:+ 1)
	(up-chat-data-to-self "Stone-camp distance: %d" s: sn-camp-max-distance)
)

; (defrule
	; (timer-triggered 35)
	; (up-compare-sn sn-wood-gatherer-percentage > 10)
    ; (building-type-count-total town-center >= 1)
    ; (not(resource-found wood))
; =>
	; (disable-timer 35)
    ; (up-modify-sn sn-camp-max-distance c:+ 2)
    ; (up-chat-data-to-self "Camp distance: %d." s: sn-camp-max-distance)
	; (enable-timer 35 20)
; )

; (defrule
	; (timer-triggered 35)
	; (up-compare-sn sn-gold-gatherer-percentage > 7)
    ; (building-type-count-total town-center >= 1)
    ; (not(resource-found gold))
; =>
	; (disable-timer 35)
    ; (up-modify-sn sn-camp-max-distance c:+ 2)
    ; (up-chat-data-to-self "Camp distance: %d." s: sn-camp-max-distance)
	; (enable-timer 35 20)
; )

; (defrule
	; (timer-triggered 35)
	; (current-age >= castle-age)
	; (up-compare-sn sn-stone-gatherer-percentage > 0)
    ; (building-type-count-total town-center >= 1)
    ; (not(resource-found stone))
; =>
	; (disable-timer 35)
    ; (up-modify-sn sn-camp-max-distance c:+ 2)
    ; (up-chat-data-to-self "Camp distance: %d." s: sn-camp-max-distance)
	; (enable-timer 35 20)
; )

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(goal gl-house 0)
=>
	(generate-random-number 100)
	(disable-self)
)

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(random-number <= 35)
	(goal gl-house 0)
=>
	(set-goal strategy-goal sg-archerrush)
	(set-goal d-villager-goal 23)
	(set-goal f-villager-goal 40)
	(set-goal c-villager-goal 100)
	(up-modify-goal gl-feudalage-safe g:= f-villager-goal)
	(up-modify-goal gl-feudalage-safe c:- 5)
	(up-chat-data-to-self "Saving resources for castle-age at %d villagers" g: gl-feudalage-safe)
	;(chat-to-all "Switching to archers and skirms")
	(chat-to-player my-player-number "Switching to archers and skirms")
	(disable-self)
)

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(random-number > 35)
	(random-number <= 60)
	(goal gl-house 0)
=>
	(set-goal strategy-goal sg-scoutrush)
	(set-goal d-villager-goal 22)
	(set-goal f-villager-goal 34)
	(set-goal c-villager-goal 100)
	(up-modify-goal gl-feudalage-safe g:= f-villager-goal)
	(up-modify-goal gl-feudalage-safe c:- 6)
	(up-chat-data-to-self "Saving resources for castle-age at %d villagers" g: gl-feudalage-safe)
	;(chat-to-all "Switching to scouts")
	(chat-to-player my-player-number "Switching to scouts")
	(disable-self)
)

; (defrule
	; (building-type-count-total barracks > 0)
	; (goal strategy-goal sg-drush)
	; (random-number > 50)
	; (random-number <= 70)
	; (goal gl-house 0)
; =>
	; (set-goal strategy-goal sg-towerrush)	
	; (set-goal d-villager-goal 20)
	; (set-goal f-villager-goal 34)
	; (set-goal c-villager-goal 100)
	; (up-modify-goal gl-feudalage-safe g:= f-villager-goal)
	; (up-modify-goal gl-feudalage-safe c:- 6)
	; (up-chat-data-to-self "Saving resources for castle-age at %d villagers" g: gl-feudalage-safe)
	; ;(chat-to-all "Switching to towerrush")
	; (chat-to-player my-player-number "Switching to towerrush")
	; (disable-self)
; )

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(random-number > 60)
	(random-number <= 85)
	(goal gl-house 0)
=>
	(set-goal strategy-goal sg-fastcastle-gu)
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(up-modify-goal gl-feudalage-safe g:= f-villager-goal)
	(up-modify-goal gl-feudalage-safe c:- 2)
	(up-chat-data-to-self "Saving resources for castle-age at %d villagers" g: gl-feudalage-safe)
	;(chat-to-all "Trying to go fast castle-age")
	(chat-to-player my-player-number "Trying to go fast castle-age")
	(disable-self)
)

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(random-number > 85)
	(goal gl-house 0)
=>
	(set-goal strategy-goal sg-fastcastle-uu)
	(set-goal d-villager-goal 26)
	(set-goal f-villager-goal 28)
	(set-goal c-villager-goal 100)
	(up-modify-goal gl-feudalage-safe g:= f-villager-goal)
	(up-modify-goal gl-feudalage-safe c:- 2)
	(up-chat-data-to-self "Saving resources for castle-age at %d villagers" g: gl-feudalage-safe)
	;(chat-to-all "Trying to go fast castle-age and drop a castle")
	(chat-to-player my-player-number "Trying to go fast castle-age and drop a castle")
	(disable-self)
)

#load-if-defined MALAY-CIV

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(random-number > 0)
	(goal gl-house 0)
=>
	(up-modify-goal d-villager-goal c:+ 2)
	(up-modify-goal f-villager-goal c:+ 2)
	(up-modify-goal c-villager-goal c:+ 2)
	(disable-self)
)

#end-if


#load-if-defined BENGALIS-CIV

(defrule
	(building-type-count-total barracks > 0)
	(goal strategy-goal sg-drush)
	(random-number > 0)
	(goal gl-house 0)
=>
	(up-modify-goal f-villager-goal c:+ 2)
	(up-modify-goal c-villager-goal c:+ 2)
	(disable-self)
)

#end-if

(defrule
	(building-type-count-total town-center >= 1)
	(goal drush-goal 1)
	(can-build-with-escrow barracks)
	(civilian-population >= 15)
	(building-type-count-total barracks < 1)
	(goal gl-wood-saving 2)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 28)
    (up-build place-control with-escrow c: barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 7")
)

(defrule
	(building-type-count-total town-center >= 1)
	(goal strategy-goal sg-towerrush)
	(can-build barracks)
	(civilian-population >= 18)
	(building-type-count-total barracks < 1)
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 34)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 7")
)

; (defrule
	; (building-type-count-total town-center >= 1)
	; (goal strategy-goal sg-drush)
	; (can-build-with-escrow barracks)
	; (civilian-population >= 16)
	; (building-type-count-total barracks < 1)
	; (goal gl-wood-saving 2)
; =>
	; (release-escrow wood)
	; (set-escrow-percentage wood 0)
	; ;(set-strategic-number sn-placement-zone-size 0)
	; (build barracks)
	; (set-goal gl-wood-saving 0)
	; (chat-to-player my-player-number "Barracks 7")
; )

; (defrule 
	; (building-type-count-total barracks == 1)
; =>
	; (up-chat-data-to-all "Drush Goal %d" g: drush-goal)
	; (disable-self)
; )

(defrule
	(unit-type-count-total militiaman-line g:< gl-drush-militia-count)
	(goal drush-goal 1)
	(gold-amount < 20)
=>
	(up-modify-goal gl-drush-militia-count c:- 1)
	(up-chat-data-to-player my-player-number "Not enough gold to make more militias, stop at %d units" g: gl-drush-militia-count)
)

(defrule 
	(unit-type-count-total militiaman-line g:== gl-drush-militia-count)
	(goal drush-goal 1)
=>
	(set-goal drush-goal 0)
	(up-chat-data-to-player my-player-number "Anzahl Milizsoldaten: %d - Produziere keine weiteren mehr" g: gl-drush-militia-count)
	(disable-self)
)

(defrule ;drush-feudal
	(goal drush-goal 1)
	(up-research-status c: feudal-age >= research-pending)
	(goal strategy-goal sg-towerrush)
	(unit-type-count militiaman-line g:< gl-drush-militia-count)
	(building-type-count barracks >= 1)
	(current-age == dark-age)
	(can-train militiaman-line)
=>
	(train militiaman-line)
	;(chat-to-player my-player-number "militia 1")
)

(defrule ;drush-fc
	(goal drush-goal 1)
	(unit-type-count militiaman-line g:< gl-drush-militia-count)
	(not (goal strategy-goal sg-towerrush))
	(building-type-count barracks >= 1)
	(current-age == dark-age)
	(can-train militiaman-line)
=>
	(train militiaman-line)
	;(chat-to-player my-player-number "militia 1")
)

(defrule
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow barracks)
	(current-age < castle-age)
	(unit-type-count-total militiaman-line >= 10)
	(building-type-count-total barracks < 2)
=>
	(up-modify-escrow wood c:- 175)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 34)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 7.1")
)

(defrule
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow barracks)
	(current-age == castle-age)
	(unit-type-count-total militiaman-line >= 10)
	(building-type-count-total barracks < 4)
=>
	(up-modify-escrow wood c:- 175)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 34)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 7.2")
)

(defrule
	(current-age == feudal-age)
	(unit-type-count militiaman-line >= 6)
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu))
=>
	(set-goal strategy-goal sg-archerrush)
	(chat-to-player my-player-number "Getting the initiative, will stop going fc and go for archers instead")
)

(defrule
	(current-age == feudal-age)
	(unit-type-count-total militiaman-line >= 3)
	(players-unit-type-count focus-player archer-line < 3)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age == feudal-age)
	(unit-type-count-total militiaman-line >= 5)
	(food-amount >= 125)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age == feudal-age)
	(unit-type-count-total militiaman-line >= 3)
	(not (goal strategy-goal sg-towerrush))
	(research-completed ri-man-at-arms)
	(can-train militiaman-line)
	(food-amount >= 110)
	(players-unit-type-count focus-player archer-line <= 3)
	(civilian-population g:< f-villager-goal)
=>
	(train militiaman-line)
)

(defrule
	(current-age == castle-age)
	(unit-type-count-total militiaman-line >= 8)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)


(defrule
	(current-age == castle-age)
	(unit-type-count-total militiaman-line >= 8)
	(research-completed ri-long-swordsman)
	(can-train militiaman-line)
	(players-unit-type-count focus-player archer-line <= 10)
	(civilian-population g:< c-villager-goal)
=>
	(train militiaman-line)
)

(defrule
	(current-age == feudal-age)
	(not (goal strategy-goal sg-fastcastle-gu))
	(not (goal strategy-goal sg-fastcastle-uu))
	(players-building-type-count focus-player watch-tower >= 4)
	(players-current-age focus-player == feudal-age)
	(enemy-buildings-in-town)
=>
	(set-goal strategy-goal sg-fastcastle-gu)
	(chat-to-allies "I'll try to go fast to castle age to make siege against those damn towers")
	(chat-to-player my-player-number "I'll try to go fast to castle age to make siege")
)

(defrule
	(current-age == castle-age)
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu))
	(players-building-type-count focus-player watch-tower >= 4)	
	(enemy-buildings-in-town)
	(can-build-with-escrow siege-workshop)
	(building-type-count-total siege-workshop < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build siege-workshop)
)


; (defrule
	; (current-age == feudal-age)
	; (or (goal strategy-goal sg-archerrush)
	; (unit-type-count militiaman-line >= 2))
	; (up-compare-goal gl-military-advantage >= 8)
	; (can-build-with-escrow watch-tower)
	; (building-type-count-total watch-tower < 1)
	; (not (goal gl-stone-saving 7))
; =>
	; (up-full-reset-search)
	; (up-find-remote c: mining-camp c: 1)
	; (up-find-remote c: lumber-camp c: 1)
	; (up-find-remote c: mill c: 1)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object object-point-x)
	; (up-lerp-tiles object-point-x enemy-point-x c: -5) 
	; (up-cross-tiles object-point-x enemy-point-x c: 5)
	; (up-bound-point object-point-x object-point-x)	
; )

; (defrule
	; (current-age == feudal-age)
	; (or (goal strategy-goal sg-archerrush)
	; (unit-type-count militiaman-line >= 2))
	; (up-compare-goal gl-military-advantage >= 8)
	; (building-type-count-total watch-tower < 1)
	; (not (goal gl-stone-saving 7))
	; (up-can-build-line with-escrow object-point-x c: watch-tower)
; =>
	; (up-modify-escrow wood c:- 50)
	; (up-modify-escrow stone c:- 125)
	; (up-assign-builders c: watch-tower c: 3)
	; (up-build-line object-point-x object-point-x c: watch-tower)
	; (chat-to-player my-player-number "Building offensive tower")	
; )
	
; (defrule
	; (current-age == feudal-age)
	; (or (goal strategy-goal sg-archerrush)
	; (unit-type-count militiaman-line >= 2))
	; (up-compare-goal gl-military-advantage >= 8)
	; (can-build-with-escrow donjon)
	; (building-type-count-total donjon < 1)
	; (not (goal gl-stone-saving 7))
; =>
	; (up-full-reset-search)
	; (up-find-remote c: mining-camp c: 1)
	; (up-find-remote c: lumber-camp c: 1)
	; (up-find-remote c: mill c: 1)
	; (up-set-target-object search-remote c: 0)
	; (up-get-point position-object object-point-x)
	; (up-lerp-tiles object-point-x enemy-point-x c: -5) 
	; (up-cross-tiles object-point-x enemy-point-x c: 5)
	; (up-bound-point object-point-x object-point-x)	
; )

; (defrule
	; (current-age == feudal-age)
	; (or (goal strategy-goal sg-archerrush)
	; (unit-type-count militiaman-line >= 2))
	; (up-compare-goal gl-military-advantage >= 8)
	; (building-type-count-total donjon < 1)
	; (not (goal gl-stone-saving 7))
	; (up-can-build-line with-escrow object-point-x c: donjon)
; =>
	; (up-modify-escrow wood c:- 75)
	; (up-modify-escrow stone c:- 175)
	; (up-assign-builders c: donjon c: 3)
	; (up-build-line object-point-x object-point-x c: donjon)
	; (chat-to-player my-player-number "Building offensive donjon")	
; )	

(defrule
	(current-age == feudal-age)
	(enemy-buildings-in-town)
	(players-building-type-count focus-player watch-tower >= 2)
	(or (military-population < 5)
	(up-compare-goal gl-military-advantage <= -5))
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower-line < 1)
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-set-placement-data focus-player watch-tower c: -8)
	(up-assign-builders c: watch-tower c: 9)
    (up-build place-control 0 c: watch-tower)
	(chat-to-player my-player-number "Baue Counter Tower")
)

(defrule
	(current-age == feudal-age)
	(enemy-buildings-in-town)
	(players-building-type-count focus-player watch-tower >= 2)
	(or (military-population < 5)
	(up-compare-goal gl-military-advantage <= -5))
	(can-build-with-escrow donjon)
	(building-type-count-total donjon < 1)
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-set-placement-data focus-player watch-tower c: -8)
	(up-assign-builders c: donjon c: 9)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Baue Counter Tower")
)


(defrule
	(current-age == feudal-age)
	(enemy-buildings-in-town)
	(players-building-type-count focus-player watch-tower >= 2)
	(or (military-population < 5)
	(up-compare-goal gl-military-advantage <= -5))
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower-line >= 1)
	(building-type-count-total watch-tower-line < 2)
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-set-placement-data my-player-number mining-camp c: -2)
	(up-assign-builders c: watch-tower c: 9)
    (up-build place-control 0 c: watch-tower)
	(chat-to-player my-player-number "Building counter-tower against enemy towerrush")
)


(defrule
	(current-age == feudal-age)
	(enemy-buildings-in-town)
	(players-building-type-count focus-player watch-tower >= 2)
	(or (military-population < 5)
	(up-compare-goal gl-military-advantage <= -5))
	(can-build-with-escrow donjon)
	(building-type-count-total donjon >= 1)
	(building-type-count-total donjon < 2)
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-set-placement-data my-player-number mining-camp c: -2)
	(up-assign-builders c: donjon c: 9)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Building Donjon against enemy towerrush")
)

(defrule
	(current-age == feudal-age)
	(enemy-buildings-in-town)
	(players-building-type-count focus-player watch-tower >= 3)
	(or (military-population < 5)
	(up-compare-goal gl-military-advantage <= -5))
	(can-build-with-escrow watch-tower)
	(building-type-count-total watch-tower-line >= 2)
	(building-type-count-total watch-tower-line < 4)
=>
	(up-modify-escrow wood c:- 50)
	(up-modify-escrow stone c:- 125)
	(up-set-placement-data my-player-number lumber-camp c: -2)
	(up-assign-builders c: watch-tower c: 9)
    (up-build place-control 0 c: watch-tower)
	;(build watch-tower)
	(chat-to-player my-player-number "Building counter-tower against enemy towerrush")
)

(defrule
	(current-age == feudal-age)
	(enemy-buildings-in-town)
	(players-building-type-count focus-player watch-tower >= 3)
	(or (military-population < 5)
	(up-compare-goal gl-military-advantage <= -5))
	(can-build-with-escrow donjon)
	(building-type-count-total donjon >= 2)
	(building-type-count-total donjon < 4)
=>
	(up-modify-escrow wood c:- 75)
	(up-modify-escrow stone c:- 175)
	(up-set-placement-data my-player-number lumber-camp c: -2)
	(up-assign-builders c: donjon c: 9)
    (up-build place-control 0 c: donjon)
	(chat-to-player my-player-number "Building Donjon against enemy towerrush")
)

(defrule
	(current-age == feudal-age)
	(can-train donjon-serjeant-line)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
=>
	(train donjon-serjeant-line)
)

(defrule
	(current-age == imperial-age)
	(can-build donjon)
	(building-type-count-total donjon < 6)
	(military-population >= 25)
=>
	(up-assign-builders c: donjon c: 3)
	(build-forward donjon)
)

(defrule
	(current-age == imperial-age)
	(can-train donjon-serjeant-line)
	(not(research-completed ri-elite-serjeant))
	(unit-type-count-total donjon-serjeant-line < 5)
=>
	(train donjon-serjeant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train donjon-serjeant-line)
	(research-completed ri-elite-serjeant)
=>
	(train donjon-serjeant-line)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total watch-tower-line > 2)
	(can-research ri-guard-tower)
=>
	(research ri-guard-tower)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total watch-tower-line > 2)
	(can-research ri-keep)
=>
	(research ri-keep)
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player warship-class > 10)
	(or (building-type-count-total watch-tower-line >= 1)
	(building-type-count-total castle >= 1))
	(can-research ri-heated-shot)
=>
	(research ri-heated-shot)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total watch-tower-line > 2)
	(can-research ri-arrowslits)
=>
	(research ri-arrowslits)
)

(defrule
	(current-age == feudal-age)
	;(not (goal strategy-goal sg-scoutrush))
	(can-train-with-escrow villager)
	(or (unit-type-count-total villager g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
=>
	(up-modify-escrow food c:- 50)
	(train villager)
	(up-get-fact civilian-population 0 civilian-pop) 
	;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
)

; (defrule
	; (current-age == feudal-age)
	; (goal strategy-goal sg-scoutrush)
	; (can-train-with-escrow villager)
	; (up-research-status c: ri-wheel-barrow != research-pending)
	; (or (unit-type-count-total villager < 34)
	; (up-research-status c: castle-age == research-pending))
; =>
	; (up-modify-escrow food c:- 50)
	; (train villager)
	; (up-get-fact civilian-population 0 civilian-pop) 
	; ;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
; )

; (defrule
	; (current-age == feudal-age)
	; (goal strategy-goal sg-scoutrush)
	; (can-train-with-escrow villager)
	; (up-research-status c: ri-wheel-barrow >= research-pending)
	; (or (unit-type-count-total villager g:< f-villager-goal)
	; (up-research-status c: castle-age == research-pending))
; =>
	; (up-modify-escrow food c:- 50)
	; (train villager)
	; (up-get-fact civilian-population 0 civilian-pop) 
	; ;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
; )

(defrule
	(current-age == feudal-age)
	(can-build house)
	(housing-headroom < 7)
	(up-pending-objects c: house < 1)
=>
	(build house)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population >= 23)
	(or (building-type-count-total archery-range >= 2)
	(wood-amount > 250)))
	(up-research-status c: ri-double-bit-axe >= research-pending)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total farm < 6)
	(building-type-count-total blacksmith < 1)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population >= 23)
	(or (building-type-count-total archery-range >= 2)
	(wood-amount > 250)))
	(up-research-status c: ri-double-bit-axe >= research-pending)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total farm < 6)
	(building-type-count-total blacksmith < 1)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(wood-amount > 85)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population >= 23)
	(or (building-type-count-total archery-range >= 2)
	(wood-amount > 250)))
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total blacksmith >= 1)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population >= 23)
	(or (building-type-count-total archery-range >= 2)
	(wood-amount > 250)))
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total blacksmith >= 1)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(wood-amount > 85)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population >= 22)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total farm < 4)
	(building-type-count-total watch-tower-line >= 1)
	(idle-farm-count < 1)
	(can-build farm)
	(wood-amount > 120)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population >= 22)
	(wood-amount > 120)
	(building-type-count-total farm >= 4)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total watch-tower-line >= 1)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(building-type-count-total farm >= 4)
	(building-type-count-total lumber-camp > 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total watch-tower-line >= 1)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(wood-amount > 120)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == dark-age)
	(civilian-population >= 20)
	(building-type-count-total lumber-camp > 0)
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	;(up-research-status c: feudal-age >= research-pending)
	(unit-type-count villager >= 22)
	(current-age == dark-age)
	(building-type-count-total lumber-camp > 0)
	;(building-type-count-total mining-camp > 0)
	(building-type-count-total farm < 6)
	(idle-farm-count < 1)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(or (building-type-count-total stable > 0)
	(building-type-count-total barracks > 1))
	(up-research-status c: ri-horse-collar >= research-pending)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(or (building-type-count-total stable > 0)
	(building-type-count-total barracks > 1))
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(building-type-count-total dock > 0)
	(wood-amount > 85)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(or (building-type-count-total stable > 0)
	(building-type-count-total barracks > 1))
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(building-type-count-total dock < 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(building-type-count-total blacksmith < 1)
	(idle-farm-count < 1)
	(can-build farm)
	(building-type-count-total farm < 8)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(building-type-count-total blacksmith > 0)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(or (building-type-count-total blacksmith > 0)
	(building-type-count-total barracks > 1))
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(building-type-count-total dock > 0)
	(wood-amount > 85)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population >= 20)
	(or (building-type-count-total blacksmith > 0)
	(building-type-count-total barracks > 1))
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(building-type-count-total dock < 1)
=>
	(build farm)
)

(defrule
	(or (goal strategy-goal sg-archerrush)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(building-type-count-total lumber-camp < 3)
	(building-type-count-total mining-camp >= 1)
	(building-type-count-total farm >= 12)
	(unit-type-count-total villager >= 30)
	(resource-found wood)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(current-age == castle-age)
	(not(goal strategy-goal sg-boom-imp))
	(building-type-count-total lumber-camp < 3)
	(resource-found wood)
	;(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(current-age == castle-age)
	(not(goal strategy-goal sg-boom-imp))
	(or (up-compare-sn sn-wood-gatherer-percentage >= 55)
	(game-time > 2100))
	(building-type-count-total lumber-camp < 4)
	(building-type-count-total town-center >= 3)
	(resource-found wood)
	;(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total lumber-camp < 6)
	(resource-found wood)
	;(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(building-type-count-total town-center >= 1)
	(building-type-count-total archery-range < 2)
	(can-build-with-escrow archery-range)
	(or (not (town-under-attack))
	(up-compare-goal gl-military-advantage >= -2))
	(goal gl-wood-saving 3)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control with-escrow c: archery-range)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(building-type-count-total town-center >= 1)
	(building-type-count-total archery-range < 2)
	(can-build-with-escrow archery-range)
	(town-under-attack)
	(up-compare-goal gl-military-advantage < -2)
	(goal gl-wood-saving 3)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	;(up-set-placement-data my-player-number -1 c: 14)
    (build archery-range)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(can-build-with-escrow archery-range)
	(building-type-count-total town-center >= 1)
	(building-type-count-total barracks >= 1)
	(building-type-count-total archery-range < 1)
	(building-type-count-total farm >= 12)
	(civilian-population >= 26)
	(game-time >= 840) ;13mins
	(or (not (town-under-attack))
	(up-compare-goal gl-military-advantage >= -2))
	(goal gl-wood-saving 3)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control with-escrow c: archery-range)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(can-build-with-escrow archery-range)
	(building-type-count-total town-center >= 1)
	(building-type-count-total barracks >= 1)
	(building-type-count-total archery-range < 1)
	(building-type-count-total farm >= 12)
	(civilian-population >= 26)
	(game-time >= 840) ;13mins
	(town-under-attack)
	(up-compare-goal gl-military-advantage < -2)
	(goal gl-wood-saving 3)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
    (build archery-range)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(building-type-count-total archery-range < 1)
	(can-build archery-range)
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 34)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(building-type-count-total town-center >= 1)
	(building-type-count-total archery-range < 3)
	(can-build-with-escrow archery-range)
	(or 
		(and (players-building-type-count focus-player archery-range >= 3)
			(military-population > 6))
		(and (up-compare-goal gl-military-advantage >= -5)
			(and (up-compare-goal gl-military-advantage < 5)
			(civilian-population >= 46))
		)
	)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

; (defrule
	; (goal strategy-goal sg-archerrush)
	; (current-age == feudal-age)
	; (building-type-count-total archery-range == 2)
; =>
	; (set-escrow-percentage wood 0)
; )

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total stable < 1)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow stable)
	(goal gl-wood-saving 4)
	(or (not (town-under-attack))
	(up-compare-goal gl-military-advantage >= -2))
=>
	(release-escrow wood)
	(up-assign-builders c: stable c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control with-escrow c: stable)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total stable < 1)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow stable)
	(or (not (town-under-attack))
	(up-compare-goal gl-military-advantage >= -2))
=>	
	(up-modify-escrow wood c:- 175)
	(up-assign-builders c: stable c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total stable < 1)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow stable)
	(goal gl-wood-saving 4)
	(town-under-attack)
	(up-compare-goal gl-military-advantage < -2)
=>
	(release-escrow wood)
	(up-assign-builders c: stable c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
    (build stable)
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total stable < 1)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow stable)
	(town-under-attack)
	(up-compare-goal gl-military-advantage < -2)
=>	
	(up-modify-escrow wood c:- 175)
	(up-assign-builders c: stable c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
	(build stable)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total stable < 2)
	(game-time > 1260)
	(up-research-status c: castle-age != research-pending)
	(can-build-with-escrow stable)
	(up-compare-goal gl-military-advantage >= -8)
=>
	(up-modify-escrow wood c:- 175)
	(up-assign-builders c: stable c: 1)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(building-type-count-total archery-range < 1)
	(unit-type-count-total scout-cavalry-line >= 5)
	(up-research-status c: castle-age != research-pending)
	(can-build-with-escrow archery-range)
	(up-compare-goal gl-military-advantage >= -6)
=>
	(up-modify-escrow wood c:- 175)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
	(chat-to-player my-player-number "Range 3")
)

#load-if-defined UP-ALLY-IN-GAME

(defrule
	(current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
	(goal strategy-goal sg-scoutrush)
	(can-train scout-cavalry-line)
	(civilian-population g:< f-villager-goal)
	(unit-type-count-total scout-cavalry-line < 4)
	(players-unit-type-count focus-player infantry-class < 6)
	(or (players-unit-type-count focus-player archer-line < 10)
	(unit-type-count skirmisher-line >= 5))
	(game-time < 1000)
	(up-compare-goal gl-military-advantage < 25)
=>
	(up-modify-escrow food c:- 80)
	(train scout-cavalry-line)	
)

(defrule
	(current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
	(goal strategy-goal sg-scoutrush)
	(can-train scout-cavalry-line)
	(civilian-population g:< f-villager-goal)
	(or (unit-type-count-total scout-cavalry-line < 20)
	(up-compare-goal gl-military-advantage < 10))
	(or (unit-type-count-total scout-cavalry-line >= 4)
	(game-time >= 1000))
	(players-unit-type-count focus-player infantry-class < 6)
	(or (players-unit-type-count focus-player archer-line < 10)
	(unit-type-count skirmisher-line >= 5))
	(up-compare-goal gl-military-advantage < 25)
=>
	(train scout-cavalry-line)
)

#end-if

#load-if-not-defined UP-ALLY-IN-GAME

(defrule
	(current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
	(goal strategy-goal sg-scoutrush)
	(can-train scout-cavalry-line)
	(civilian-population g:< f-villager-goal)
	(unit-type-count-total scout-cavalry-line < 4)
	(players-unit-type-count focus-player infantry-class < 6)
	(or (players-unit-type-count focus-player archer-line < 10)
	(unit-type-count skirmisher-line >= 5))
	(unit-type-count-total villager < 32)
	(up-compare-goal gl-military-advantage < 25)
=>
	(up-modify-escrow food c:- 80)
	(train scout-cavalry-line)	
)

(defrule
	(current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
	(goal strategy-goal sg-scoutrush)
	(can-train scout-cavalry-line)
	(civilian-population g:< f-villager-goal)
	(or (unit-type-count-total scout-cavalry-line < 20)
	(up-compare-goal gl-military-advantage < 10))
	(or (unit-type-count-total scout-cavalry-line >= 4)
	(game-time >= 1000))
	(players-unit-type-count focus-player infantry-class < 6)
	(or (players-unit-type-count focus-player archer-line < 10)
	(unit-type-count skirmisher-line >= 5))
	(unit-type-count-total villager < 32)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train scout-cavalry-line)
)

#end-if

(defrule
	(current-age >= feudal-age)
	(military-population == 0)
	(building-type-count stable >= 1)
	(unit-type-count-total scout-cavalry-line < 1)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age >= feudal-age)
	(military-population == 0)
	(building-type-count barracks >= 1)
	(building-type-count stable == 0)
	(unit-type-count-total spearman-line < 1)
	(not (town-under-attack))
=>
	(train spearman-line)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-scoutrush)
	(can-train camel-scout)
	(unit-type-count-total camel-scout < 2)
	(civilian-population g:< f-villager-goal)
	;(food-amount > 130)
=>
	(train camel-scout)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(goal meso-civ YES)
	(building-type-count-total barracks < 2)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow barracks)
	(goal gl-wood-saving 5)
	(or (not (town-under-attack))
	(up-compare-goal gl-military-advantage >= -2))
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: barracks c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control with-escrow c: barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 8")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(goal meso-civ YES)
	(building-type-count-total barracks < 2)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow barracks)
	(goal gl-wood-saving 5)
	(town-under-attack)
	(up-compare-goal gl-military-advantage < -2)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: barracks c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
    (build barracks)
	(set-goal gl-wood-saving 0)
	;(chat-to-player my-player-number "Barracks 8")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(not (can-build stable))
	(building-type-count-total barracks == 2)
=>
	(set-escrow-percentage wood 0)
	(set-goal gl-wood-saving 0)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-scoutrush)
	(can-train eagle-warrior-line)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(food-amount > 130)
	(unit-type-count-total eagle-warrior-line < 4)
	(game-time < 1000)
	(or (players-unit-type-count focus-player scout-cavalry-line < 3) 
		(unit-type-count-total spearman-line >= 1))
	(up-compare-goal gl-military-advantage < 25)
=>
	(up-modify-escrow food c:- 20)
	(up-modify-escrow gold c:- 50)
	(train eagle-warrior-line)
)

(defrule
	(current-age == feudal-age)
	(goal strategy-goal sg-scoutrush)
	(can-train eagle-warrior-line)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(food-amount > 130)
	(or (unit-type-count-total eagle-warrior-line >= 4)
	(game-time >= 1000))
	(or (players-unit-type-count focus-player scout-cavalry-line < 3) 
		(unit-type-count-total spearman-line >= 1))
	(up-compare-goal gl-military-advantage < 25)
=>
	(train eagle-warrior-line)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train-with-escrow archer-line)
	(or (players-unit-type-count focus-player skirmisher-line < 3) 
	(unit-type-count-total scout-cavalry-line >= 1))
	(unit-type-count-total archer-line < 8)
	(game-time < 1000)
	(up-compare-goal gl-military-advantage < 25)
=>
	(up-modify-escrow wood c:- 25)
	(up-modify-escrow gold c:- 45)
	(train archer-line)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train archer-line)
	(or (players-unit-type-count focus-player skirmisher-line < 3) 
	(unit-type-count-total scout-cavalry-line >= 1))
	(wood-amount > 65)
	(or (unit-type-count-total archer-line >= 8)
	(game-time >= 1000))
	(up-compare-goal gl-military-advantage < 25)
=>
	(train archer-line)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train skirmisher-line)
	(players-unit-type-count focus-player skirmisher-line >= 4)
	(players-unit-type-count focus-player skirmisher-line < 8)
	(unit-type-count-total scout-cavalry-line < 1)
	(unit-type-count-total skirmisher-line < 8)
	(players-current-age focus-player == feudal-age)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train skirmisher-line)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train skirmisher-line)
	(wood-amount > 85)
	(unit-type-count-total skirmisher-line < 6)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train skirmisher-line)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train archer-line)
	(wood-amount > 75)
	(unit-type-count-total skirmisher-line >= 2)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train archer-line)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train spearman-line)
	(wood-amount > 75)
	(unit-type-count-total spearman-line < 2)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train spearman-line)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train spearman-line)
	(wood-amount > 75)
	(food-amount > 85)
	(unit-type-count-total spearman-line < 6)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train spearman-line)
)

; (defrule
	; (current-age == feudal-age)
	; (can-train-with-escrow archer-line)
	; (unit-type-count-total archer-line < 20)
; =>
	; (train archer-line)
; )

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(or (players-unit-type-count focus-player archer-line < 6)
		(players-unit-type-count focus-player skirmisher-line < 6))
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-train spearman-line)
	(unit-type-count-total spearman-line < 2)
	(unit-type-count-total archer-line >= 4)
	(wood-amount > 50)	
	(food-amount > 70)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train spearman-line)
)

(defrule
	(goal attack-now-goal 0)
	(goal retreat-now-goal 1)
	(military-population >= 3)
	(up-compare-goal gl-military-advantage >= 0)
	(current-age == feudal-age)
=>
	(set-goal attack-now-goal 1)
	(set-goal retreat-now-goal 0)
	(up-reset-unit c: -1)
	; (set-strategic-number sn-number-attack-groups 500)
	; (set-strategic-number sn-minimum-attack-group-size 1)
	; (set-strategic-number sn-maximum-attack-group-size 1)
	(chat-to-player my-player-number "Stop retreating")
)

(defrule
	(current-age == feudal-age)
	(up-compare-goal gl-military-advantage < -2)
	(goal attack-now-goal 1)
	(goal retreat-now-goal 0)
=>
	(set-goal attack-now-goal 0)
	(set-goal retreat-now-goal 1)
	; (set-strategic-number sn-number-attack-groups 0)
	; (set-strategic-number sn-minimum-attack-group-size 0)
	; (set-strategic-number sn-maximum-attack-group-size 0)
	(up-reset-attack-now)
	(up-reset-unit c: -1)
	(up-retreat-now)
	(chat-to-player my-player-number "Low army numbers, I am retreating")
	(chat-to-allies "My army number is low, I am retreating")
)

(defrule
	(not (goal strategy-goal sg-scoutrush))
	(not (goal strategy-goal sg-towerrush)) ;mainly for archer-rush
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(not (town-under-attack))
	(current-age == feudal-age)
	(civilian-population g:< f-villager-goal)
	(players-building-count focus-player > 0)
	(or (military-population >= 6)
	(up-compare-goal gl-military-advantage >= 4))
	(up-compare-goal gl-military-advantage >= -2)
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: siege-workshop)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(not (goal strategy-goal sg-scoutrush))
	(not (goal strategy-goal sg-towerrush))
	(town-under-attack)
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(current-age == feudal-age)
	(civilian-population g:< f-villager-goal)
	(or (military-population >= 10)
	(up-compare-goal gl-military-advantage >= 5))
	(up-compare-goal gl-military-advantage >= -3)
=>
	(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: siege-workshop)
	(attack-now)	
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(not (town-under-attack))
	(players-building-count focus-player > 0)
	(not (up-research-status c: castle-age >= research-pending))
	(or (military-population >= 4)
	(up-compare-goal gl-military-advantage >= 3))
	(up-compare-goal gl-military-advantage >= -2)
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: siege-workshop)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(not (town-under-attack))
	(players-building-count focus-player > 0)
	(not (up-research-status c: castle-age >= research-pending))
	(or (military-population >= 4)
	(up-compare-goal gl-military-advantage >= 3))
	(up-compare-goal gl-military-advantage >= -2)
	(or (research-completed ri-scale-mail)
	(research-completed ri-forging))
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(attack-now)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(not (town-under-attack))
	(players-building-count focus-player > 0)
	(not (up-research-status c: castle-age >= research-pending))
	(or (military-population >= 4)
	(up-compare-goal gl-military-advantage >= 3))
	(up-compare-goal gl-military-advantage >= -2)
	(or (research-completed ri-scale-mail)
	(research-completed ri-forging))
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(attack-now)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(town-under-attack)
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(civilian-population g:< f-villager-goal)
	(or (military-population >= 5)
	(up-compare-goal gl-military-advantage >= 3))
	(up-compare-goal gl-military-advantage >= -3)
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 0)
	(set-strategic-number sn-total-number-explorers 0)
	(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: siege-workshop)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(goal strategy-goal sg-towerrush)
	(goal attack-now-goal 1)
	;(goal retreat-now-goal 0)
	(current-age == feudal-age)
	(civilian-population g:< f-villager-goal)
	(military-population >= 2)
=>
	;(set-goal attack-now-goal 1)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	;(up-reset-scouts)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: siege-workshop)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-boom-imp)))
	(current-age >= feudal-age)
	(building-type-count-total blacksmith == 0)
	(can-build-with-escrow blacksmith)
	(goal gl-wood-saving 6)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build blacksmith)
	(set-goal gl-wood-saving 0)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-boom-imp)))
	(current-age >= feudal-age)
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age >= feudal-age)
	(civilian-population >= 25)
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age >= feudal-age)
	(building-type-count-total blacksmith == 0)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total farm >= 4)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age >= feudal-age)
	(building-type-count-total blacksmith == 0)
	(building-type-count-total stable >= 1)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age >= feudal-age)
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
)

(defrule
	(current-age == feudal-age)
	(up-compare-goal gl-archery-class-units > 3)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age == research-pending))
	(can-research ri-padded-archer-armor)
	(food-amount > 150)
	(research-completed ri-fletching)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age >= feudal-age)
	(civilian-population >= 26)
	(building-type-count-total market == 0)
	(building-type-count-total blacksmith > 0)
	(can-build-with-escrow market)
	(goal gl-wood-saving 37)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: market c: 2)
	(build market)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age >= feudal-age)
	(civilian-population >= 26)
	(building-type-count-total market == 0)
	(can-build-with-escrow market)
	(goal gl-wood-saving 37)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: market c: 2)
	(build market)
	(set-goal gl-wood-saving 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age >= feudal-age)
	(or (wood-amount > 300)
	(civilian-population >= 34))
	(building-type-count-total market == 0)
	(can-build market)
=>
	(up-assign-builders c: market c: 2)
	(build market)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-boom-imp)))
	(current-age >= feudal-age)
	(building-type-count-total market == 0)
	(can-build-with-escrow market)
	(goal gl-wood-saving 37)
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: market c: 2)
	(build market)
	(set-goal gl-wood-saving 0)
)

;walls

; (defrule
	; (or (goal strategy-goal sg-archerrush)
	; (goal strategy-goal sg-scoutrush))
	; (civilian-population >= 34)
	; (military-population >= 5)
	; (building-type-count-total palisade-wall < 110)
	; (can-build-wall 1 palisade-wall)
	; (building-type-count-total market > 0)
	; (building-type-count-total mining-camp > 0)
	; (building-type-count-total lumber-camp > 0)	
	; (not (town-under-attack))
	; (up-pending-objects c: palisade-wall < 20)
	; (up-enemy-units-in-town < 1)
	; (game-time < 1800)
; =>
	; ;(up-assign-builders c: palisade-wall c: 3)
	; (build-wall 1 palisade-wall)
; )

; (defrule
	; (or (goal strategy-goal sg-fastcastle-gu)
	; (goal strategy-goal sg-fastcastle-uu))
	; (civilian-population >= 34)
	; (military-population >= 1)
	; (building-type-count-total palisade-wall < 110)
	; (building-type-count-total market > 0)
	; (building-type-count-total mining-camp > 0)
	; (building-type-count-total lumber-camp > 0)
	; (wood-amount > 50)
	; (can-build-wall 1 palisade-wall)
	; (up-pending-objects c: palisade-wall < 20)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; (game-time < 1800)
; =>
	; (build-wall 1 palisade-wall)
	; (up-assign-builders c: palisade-wall c: 1)
; )

; (defrule
	; (civilian-population >= 34)
	; (building-type-count palisade-wall > 10)
	; (gate-count 1 < 1)
	; (can-build-gate 1)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; ;(game-time < 2400)
; =>
	; (build-gate 1)
; )

; (defrule
	; (civilian-population >= 34)
	; (building-type-count-total palisade-wall > 25)
	; (gate-count 1 < 2)
	; (can-build-gate 1)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; ;(game-time < 2400)
; =>
	; (build-gate 1)
; )

; (defrule
	; (civilian-population >= 34)
	; (building-type-count-total palisade-wall > 35)
	; (gate-count 1 < 3)
	; (can-build-gate 1)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; ;(game-time < 2400)
; =>
	; (build-gate 1)
; )

; (defrule
	; (civilian-population >= 34)
	; (building-type-count-total palisade-wall > 40)
	; (gate-count 1 < 4)
	; (can-build-gate 1)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; ;(game-time < 2400)
; =>
	; (build-gate 1)
; )

; (defrule
	; (current-age >= castle-age)
	; (civilian-population >= 50)
	; (building-type-count-total palisade-wall > 60)
	; (gate-count 1 < 6)
	; (can-build-gate 1)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; ;(game-time < 2400)
; =>
	; (build-gate 1)
; )

; (defrule
	; (current-age >= castle-age)
	; (building-type-count-total palisade-wall > 10)
	; (gate-count 1 < 3)
	; (can-build-gate 1)
	; (not (town-under-attack))
	; (up-enemy-units-in-town < 1)
	; (game-time >= 1800)
; =>
	; (build-gate 1)
; )

(defrule
	(or 
		(and (goal strategy-goal sg-archerrush)
		(building-type-count-total archery-range >= 2))
		(and (goal strategy-goal sg-scoutrush)
		(building-type-count-total stable >= 1))
	)
	(food-amount >= 150)
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(building-type-count-total stable > 0)
	(up-research-status c: ri-double-bit-axe >= research-pending)
	(can-research ri-horse-collar)
=>
	(research ri-horse-collar)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(food-amount >= 150)
	(military-population >= 20)
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(food-amount >= 125)
	(military-population >= 20)
	(can-research ri-horse-collar)
	(up-research-status c: ri-double-bit-axe >= research-pending)
=>
	(research ri-horse-collar)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(military-population >= 20)
	(can-research ri-wheel-barrow)
=>
	(research ri-wheel-barrow)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age >= feudal-age)
	(can-research-with-escrow ri-wheel-barrow)
	(unit-type-count-total villager >= 33)
	(goal gl-food-saving 29)
	(goal gl-wood-saving 29)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	(research ri-wheel-barrow)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(can-research ri-wheel-barrow)
	(unit-type-count-total villager >= 33)
=>
	(research ri-wheel-barrow)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == feudal-age)
	(can-build mining-camp)
	(unit-type-count villager >= 28)
	(building-type-count-total mining-camp == 0)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(can-build mining-camp)
	(building-type-count-total mining-camp < 2)
	(unit-type-count villager >= 22)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(or (civilian-population >= 40)
	(up-research-status c: castle-age >= research-pending))
	(building-type-count-total farm >= 4)
	(can-research ri-horse-collar)
	(up-research-status c: ri-double-bit-axe >= research-pending)
=>
	(research ri-horse-collar)
)

(defrule
	(can-research-with-escrow castle-age)
	(unit-type-count-total villager g:>= f-villager-goal)
	(goal gl-food-saving 22)
	(goal gl-gold-saving 22)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research castle-age)
	(chat-to-allies "Gehe in die Ritterzeit")
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research castle-age)
	(unit-type-count-total villager g:>= f-villager-goal)
=>
	(research castle-age)
	(chat-to-allies "Gehe in die Ritterzeit")
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(can-research ri-gold-mining)
	(up-research-status c: castle-age >= research-pending)
	(up-research-status c: ri-double-bit-axe >= research-pending)
=>
	(research ri-gold-mining)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(military-population >= 20)
	(can-research ri-gold-mining)
	(up-research-status c: ri-double-bit-axe >= research-pending)
=>
	(research ri-gold-mining)
)

;endregion

;region Feudal FastCastle ==========================================

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu))
	(building-type-count-total blacksmith >= 1)
	(or (building-type-count-total market >= 1)
	(or (building-type-count-total archery-range >= 1)
	(building-type-count-total stable >= 1)))
	(current-age == feudal-age)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu))
	(building-type-count-total farm < 10)
	(building-type-count-total blacksmith >= 1)
	(or (building-type-count-total market >= 1)
	(or (building-type-count-total archery-range >= 1)
	(building-type-count-total stable >= 1)))
	(current-age == feudal-age)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(wood-amount > 85)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age >= feudal-age)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map != 1)
=>
	(build farm)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age >= feudal-age)
	(idle-farm-count < 1)
	(can-build farm)
	(up-compare-goal gl-water-on-map == 1)
	(wood-amount > 85)
=>
	(build farm)
)


;walls

(defrule
	(not (civ-selected burgundians))
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu))
	(up-research-status c: castle-age >= research-pending)
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)

(defrule
	(civ-selected burgundians)
	(civilian-population >= 10)
	(can-research-with-escrow ri-double-bit-axe)
	(goal gl-wood-saving 1)
	(goal gl-food-saving 1)
=>
	(release-escrow wood)
	(release-escrow food)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(research ri-double-bit-axe)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-double-bit-axe)
=>
	(research ri-double-bit-axe)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-fastcastle-uu))
	(up-research-status c: castle-age >= research-pending)
	(can-research ri-horse-collar)
	(building-type-count-total farm >= 4)
	(up-research-status c: ri-double-bit-axe >= research-pending)
=>
	(research ri-horse-collar)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(goal ca-strategy gl-castleage-stableunit)
	(building-type-count-total stable < 2)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(can-build stable)
	(not (town-under-attack))
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(goal ca-strategy gl-castleage-stableunit)
	(building-type-count-total stable < 2)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(can-build stable)
	(town-under-attack)
=>
	(build stable)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(goal ca-strategy gl-castleage-rangeunit)
	(building-type-count-total archery-range < 2)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(can-build archery-range)
	(not (town-under-attack))
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
	(chat-to-player my-player-number "Range 1")
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(goal ca-strategy gl-castleage-rangeunit)
	(building-type-count-total archery-range >= 1)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(can-train archer-line)
	(not (town-under-attack))
=>
	(train archer-line)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(goal ca-strategy gl-castleage-rangeunit)
	(building-type-count-total archery-range < 2)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(can-build archery-range)
	(town-under-attack)
=>
	(build archery-range)
	(chat-to-player my-player-number "Range 2")
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(building-type-count-total barracks < 3)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(goal meso-civ YES)
	(can-build barracks)
	(not (town-under-attack))
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 9")
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(goal strategy-goal sg-scoutrush))
	(current-age == feudal-age)
	(building-type-count-total barracks < 3)
	(building-type-count-total town-center >= 1)
	(up-research-status c: castle-age >= research-pending)
	(goal meso-civ YES)
	(can-build barracks)
	(town-under-attack)
=>
	(build barracks)
)

;endregion

;region Build Order Castle =========================================

(defrule
	(current-age == dark-age)
=>
	(set-strategic-number sn-enable-boar-hunting 0)
	(disable-self)
)

(defrule
	(up-research-status c: feudal-age == research-pending)
=>
    (set-strategic-number sn-maximum-town-size 15)
	(disable-self)
)

(defrule
	(current-age == feudal-age)
=>
    (set-strategic-number sn-maximum-town-size 17)
	(set-strategic-number sn-enable-boar-hunting 2)
	(disable-self)
)

(defrule
	(current-age >= feudal-age)
	(up-compare-goal gl-military-advantage <= -5)
	(up-compare-sn sn-enable-boar-hunting == 2)
=>
	(set-strategic-number sn-enable-boar-hunting 1)
)

(defrule
	(current-age >= feudal-age)
	(up-compare-goal gl-military-advantage > -5)
	(up-compare-sn sn-enable-boar-hunting != 2)
=>
	(set-strategic-number sn-enable-boar-hunting 2)
)

(defrule
	(current-age == castle-age)
=>
    (set-strategic-number sn-maximum-town-size 30)
	(set-strategic-number sn-camp-max-distance 25)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-total-number-explorers 1)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(or (civilian-population >= 70)
	(building-type-count-total town-center == 2))
=>
    (up-modify-sn sn-maximum-town-size c:+ 6)
	(up-modify-sn sn-camp-max-distance c:+ 6)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total castle >= 1)
=>
    (up-modify-sn sn-maximum-town-size c:+ 8)
	(up-modify-sn sn-camp-max-distance c:+ 3)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(or (civilian-population >= 90)
	(building-type-count-total town-center == 3))
=>
    (up-modify-sn sn-maximum-town-size c:+ 6)
	(up-modify-sn sn-camp-max-distance c:+ 6)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(civilian-population >= 110)
	(up-compare-goal gl-military-advantage >= 5)
=>
    (up-modify-sn sn-maximum-town-size c:+ 6)
	;(up-modify-sn sn-camp-max-distance c:+ 6)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(civilian-population >= 130)
	(up-compare-goal gl-military-advantage >= 10)
=>
    (up-modify-sn sn-maximum-town-size c:+ 7)
	;(up-modify-sn sn-camp-max-distance c:+ 9)
	(disable-self)
)

(defrule
	(current-age == imperial-age)
	(up-compare-goal gl-military-advantage >= 5)
=>
    (set-strategic-number sn-maximum-town-size HALF-MAP-SIZE)
	(disable-self)
)

(defrule
	(current-age >= imperial-age)
	(building-type-count town-center == 5)
	(up-compare-goal gl-military-advantage >= 5)
=>
    (up-modify-sn sn-maximum-town-size c:+ 7)
	(up-modify-sn sn-camp-max-distance c:+ 7)
	(disable-self)
)

(defrule
	(current-age >= imperial-age)
	(building-type-count town-center == 6)
	(up-compare-goal gl-military-advantage >= 5)
=>
    (up-modify-sn sn-maximum-town-size c:+ 8)
	;(up-modify-sn sn-camp-max-distance c:+ 10)
	(disable-self)
)

(defrule
	(current-age == castle-age)
	(can-train-with-escrow villager)
	(or (unit-type-count-total villager g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total villager < 160)
	(food-amount >= 300)
	(not (goal strategy-goal sg-boom-imp))
	(not (research-completed ri-wheel-barrow))
	(not (can-research-with-escrow ri-wheel-barrow))
=>
	(up-modify-escrow food c:- 50)
	(train villager)
	(up-get-fact civilian-population 0 civilian-pop) 
	;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
)

(defrule
	(current-age == castle-age)
	(can-train-with-escrow villager)
	(or (unit-type-count-total villager g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total villager < 160)
	(food-amount >= 300)
	(or (goal strategy-goal sg-boom-imp)
	(research-completed ri-wheel-barrow))
=>
	(up-modify-escrow food c:- 50)
	(train villager)
	(up-get-fact civilian-population 0 civilian-pop) 
	;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
)

(defrule
	(current-age == castle-age)
	(can-train villager)
	(or (unit-type-count-total villager g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total villager < 160)
	(food-amount < 300)
=>
	(train villager)
	(up-get-fact civilian-population 0 civilian-pop) 
	;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
)

(defrule
	(current-age == castle-age)
	(players-current-age focus-player < castle-age)
	(building-type-count stable > 0)
	(can-train knight-line)
=>
	(train knight-line)
)

(defrule
	(civ-selected lithuanians)
	(current-age == castle-age)
	(can-build-with-escrow monastery)
	(building-type-count-total monastery == 0)
=>
	(up-modify-escrow wood c:- 175)
	(build monastery)
)

(defrule
	(not (unit-available bombard-cannon-line))
	(goal strategy-goal sg-boom-imp)
	(current-age == castle-age)
	(can-build monastery)
	(building-type-count-total monastery == 0)
=>
	(build monastery)
)

(defrule
	(unit-available bombard-cannon-line)
	(goal strategy-goal sg-boom-imp)
	(current-age == castle-age)
	(can-build university)
	(building-type-count-total university == 0)
=>
	(build university)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == castle-age)
	(can-build siege-workshop)
	(building-type-count-total siege-workshop == 0)
=>
	(build siege-workshop)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total town-center >= 3)
	(building-type-count-total outpost < 7)	
	(up-compare-goal gl-military-advantage >= 0)
	(can-build outpost)
	(up-pending-objects c: outpost < 1)
=>
	(build outpost)
)

(defrule
	(current-age >= feudal-age)
	(player-in-game any-ally)
	(can-build town-center)
	(up-pending-objects c: town-center < 1)
	(or (up-enemy-units-in-town >= 20)
	(up-compare-goal gl-military-advantage <= -18))
=>
	(up-assign-builders c: town-center c: 20)
	(up-set-placement-data this-any-ally -1 c: -40) ;-1 = home tc
	(up-assign-builders c: town-center c: 6)
	(up-build place-control 0 c: town-center)
	(chat-to-player my-player-number "building evacuation tc")
)

(defrule
	(true)
=>
	(up-delete-distant-farms c: 16)
)

(defrule
	(timer-triggered t-3-sec)
=>
	(up-get-fact resource-amount amount-relics relic-count)
)

(defrule
	(or (and (building-type-count-total monastery < 2)
		(up-compare-goal relic-count >= 10))
	(or	(and (building-type-count-total monastery < 3)
		(up-compare-goal relic-count >= 20))
	(or	(and (building-type-count-total monastery < 4)
		(up-compare-goal relic-count >= 30))
	(or	(and (building-type-count-total monastery < 5)
		(up-compare-goal relic-count >= 40))
	(or (and (building-type-count-total monastery < 6)
		(up-compare-goal relic-count >= 50))
	(or	(and (building-type-count-total monastery < 7)
		(up-compare-goal relic-count >= 60))
	(and (building-type-count-total monastery < 8)
		(up-compare-goal relic-count >= 70))))))))
	(current-age >= castle-age)
	(can-build monastery)
=>
	(build monastery)
)


(defrule
	(current-age == castle-age)
	(can-build house)
	(housing-headroom < 10)
	(up-pending-objects c: house < 2)
=>
	(build house)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(can-build-with-escrow castle)
	(can-build castle)
	(building-type-count-total castle == 0)
	(building-type-count-total town-center >= 1)
	(or (military-population < 15)
	(up-compare-goal gl-military-advantage < 1))
	(goal gl-stone-saving 38)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 8)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 6)
    (up-build place-control with-escrow c: castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 1")
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(can-build-with-escrow castle)
	(building-type-count-total castle == 0)
	(or (military-population >= 15)
	(or (players-current-age focus-player < castle-age)
	(up-compare-goal gl-military-advantage >= 1)))
	(goal gl-stone-saving 38)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 10)
	(build-forward castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 2")
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(can-build-with-escrow castle)
	(can-build castle)
	(building-type-count-total castle == 0)
	(building-type-count-total town-center >= 1)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 1))
=>
	(release-escrow stone)
	(up-assign-builders c: castle c: 8)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 6)
    (up-build place-control 0 c: castle)
	(chat-to-player my-player-number "castle 1.5")
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(can-build-with-escrow castle)
	(building-type-count-total castle == 0)
	(or (military-population >= 10)
	(or (players-current-age focus-player < castle-age)
	(up-compare-goal gl-military-advantage >= 1)))
=>
	(release-escrow stone)
	(up-assign-builders c: castle c: 10)
	(build-forward castle)
	(chat-to-player my-player-number "castle 2.5")
)

(defrule
	(current-age == castle-age)
	(civilian-population >= 50)
	(building-type-count-total mining-camp < 3)
	(resource-found stone)
	(game-time > 1500)
	(dropsite-min-distance stone < 255)
	;(up-gaia-type-count c: stone-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
;	(chat-to-all "Baue mining camp auf Stein")
	(build mining-camp)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total mining-camp < 4)
	(resource-found stone)
	;(dropsite-min-distance stone > 2)
	(dropsite-min-distance stone < 255)
	;(up-gaia-type-count c: stone-mine-class >= 1)
	(can-build mining-camp)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age >= castle-age)
	(can-research ri-town-watch)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(research ri-town-watch)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age >= castle-age)
	(civilian-population >= 100)
	(can-research ri-town-patrol)
=>
	(research ri-town-patrol)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(military-population >= 20)
	(can-research ri-town-watch)
=>
	(research ri-town-watch)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(civilian-population >= 100)
	(can-research ri-town-patrol)
=>
	(research ri-town-patrol)
)

(defrule
	(civ-selected cumans)
	(current-age >= feudal-age)
	(goal gl-wood-saving 8)
	(goal gl-stone-saving 8)
	(can-build-with-escrow town-center)
	(building-type-count-total town-center < 2)
	(random-number <= 50)
	; (or (and (goal strategy-goal sg-archerrush)
		; (building-type-count-total archery-range == 2))
		; (or (and (goal strategy-goal sg-scoutrush)
			; (building-type-count-total stable == 1))
			; (or	(goal strategy-goal sg-drush)
				; (goal strategy-goal sg-boom-imp))))
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement mining-camp)
	(up-assign-builders c: town-center-foundation c: 8)
	(up-assign-builders c: town-center c: 8)
	(build town-center)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(civ-selected cumans)
	(current-age >= feudal-age)
	(goal gl-wood-saving 8)
	(goal gl-stone-saving 8)
	(can-build-with-escrow town-center)
	(building-type-count-total town-center < 2)
	(random-number > 50)
	; (or (and (goal strategy-goal sg-archerrush)
		; (building-type-count-total archery-range == 2))
		; (or (and (goal strategy-goal sg-scoutrush)
			; (building-type-count-total stable == 1))
			; (or	(goal strategy-goal sg-drush)
				; (goal strategy-goal sg-boom-imp))))
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 8)
	(up-assign-builders c: town-center c: 8)
	(build town-center)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(current-age >= castle-age)
	(can-build-with-escrow town-center)
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 1)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number <= 50)
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(current-age >= castle-age)
	(can-build-with-escrow town-center)
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 1)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number > 50)
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement mining-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(current-age >= castle-age)
	(can-build-with-escrow town-center)
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 2)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number > 50)
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(current-age >= castle-age)
	(can-build-with-escrow town-center)
	(goal gl-wood-saving 7)
	(goal gl-stone-saving 7)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 2)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number <= 50)
=>
	(release-escrow wood)
	(release-escrow stone)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage stone 0)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement mining-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
	(set-goal gl-wood-saving 0)
	(set-goal gl-stone-saving 0)
)

(defrule
	(current-age >= castle-age)
	(can-build town-center)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 1)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number <= 50)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

(defrule
	(current-age >= castle-age)
	(can-build town-center)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 1)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number > 50)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement mining-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

(defrule
	(current-age >= castle-age)
	(can-build town-center)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 2)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number > 50)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

(defrule
	(current-age >= castle-age)
	(can-build town-center)
	(up-compare-goal gl-military-advantage >= -12)
	(building-type-count-total town-center == 2)
	(building-type-count-total town-center < 3)
	(nand (goal strategy-goal sg-fastcastle-uu)
	(building-type-count-total castle == 0))
	(random-number <= 50)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(set-strategic-number sn-town-center-placement mining-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

(defrule
	(current-age == castle-age)
	(game-time >= 2400)
	(can-build town-center)
	(building-type-count-total town-center == 3)
	(up-compare-goal gl-military-advantage >= -12)
=>
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

(defrule
	(current-age == castle-age)
	(game-time >= 3000)
	(can-build town-center)
	(building-type-count-total town-center == 4)
	(building-type-count-total town-center < 5)
	(up-compare-goal gl-military-advantage >= -12)
=>
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

#load-if-defined UP-POCKET-POSITION

(defrule
	(current-age == castle-age)
	(can-build town-center)
	(building-type-count-total town-center == 3)
	(building-type-count-total town-center < 4)
=>
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

#end-if

(defrule
	(current-age == imperial-age)
	(game-time > 3600)
	(can-build town-center)
	(building-type-count-total castle >= 1)
	(building-type-count-total town-center < 7)
	(up-compare-goal gl-military-advantage >= -12)
=>
	(set-strategic-number sn-town-center-placement lumber-camp)
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(up-assign-builders c: town-center-foundation c: 6)
	(up-assign-builders c: town-center c: 6)
	(build town-center)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total mill == 0)
	(can-build mill)
=>
	(build mill)
)

(defrule
	(current-age == castle-age)
	(building-type-count-total lumber-camp > 0)
	(up-pending-objects c: farm < 8)
	(idle-farm-count < 5)
	(wood-amount > 100)
	(can-build farm)
=>
	(build farm)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total lumber-camp > 0)
	(up-pending-objects c: farm < 16)
	(idle-farm-count < 10)
	(wood-amount > 125)
	(can-build farm)
=>
	(build farm)
)

(defrule	
	(current-age == castle-age)
	(can-build siege-workshop)
	(building-type-count-total siege-workshop < 1)
	(or (military-population >= 10)
	(or (players-current-age focus-player < castle-age)
	(up-compare-goal gl-military-advantage >= 12)))
=>
	(up-assign-builders c: siege-workshop c: 2)
	(build-forward siege-workshop)
)

(defrule	
	(current-age == castle-age)
	(players-military-population focus-player >= 18)
	(can-build siege-workshop)
	(building-type-count-total siege-workshop < 1)
	(building-type-count-total town-center >= 1)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 12))
=>
	(up-assign-builders c: siege-workshop c: 2)
	; (set-strategic-number sn-placement-zone-size 0)
	(build siege-workshop)
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 10))
	(can-build-with-escrow castle)
	(not (civ-selected slavic))
	(goal gl-stone-saving 38)
	(building-type-count-total castle < 1)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 8)
	(up-set-placement-data my-player-number -1 c: 9)
	(up-build place-control with-escrow c: castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 3")
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 10))
	(can-build-with-escrow castle)
	(not (civ-selected slavic))
	(goal gl-stone-saving 38)
	(building-type-count-total castle >= 1)
	(not (town-under-attack))
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 8)
	(build castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 3.1")
)

(defrule	
	(current-age == imperial-age)
	(or (military-population < 15)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build castle)
=>
	(up-assign-builders c: castle c: 8)
	(build castle)
	(chat-to-player my-player-number "castle 4")
)

(defrule	
	(current-age == castle-age)
	(or (military-population >= 10)
	(up-compare-goal gl-military-advantage >= 10))
	(up-compare-goal gl-military-advantage >= -10)
	(can-build-with-escrow castle)
	(not (civ-selected slavic))
	(goal gl-stone-saving 38)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 10)
	(build-forward castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 5")
)

(defrule	
	(current-age == imperial-age)
	(or (military-population >= 15)
	(up-compare-goal gl-military-advantage >= 10))
	(up-compare-goal gl-military-advantage >= -10)
	(can-build castle)
=>
	(up-assign-builders c: castle c: 10)
	;(up-set-placement-data focus-player -1 c: 9)
    ;(up-build place-control 0 c: castle)
	(chat-to-player my-player-number "castle 6")
	(build-forward castle)
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build-with-escrow castle)
	(civ-selected slavic)
	(goal gl-stone-saving 38)
	(not (research-completed my-second-unique-research))
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 8)
	(build castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 7")
)

(defrule	
	(current-age == castle-age)
	(or (military-population >= 10)
	(up-compare-goal gl-military-advantage >= 10))
	(up-compare-goal gl-military-advantage >= -10)
	(can-build-with-escrow castle)
	(civ-selected slavic)
	(goal gl-stone-saving 38)
	(not (research-completed my-second-unique-research))
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: castle c: 10)
	;(up-set-placement-data focus-player -1 c: 9)
    ;(up-build place-control with-escrow c: castle)
	(build-forward castle)
	(set-goal gl-stone-saving 0)
	(chat-to-player my-player-number "castle 8")
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build-with-escrow castle)
	(civ-selected slavic)
	(goal gl-stone-saving 38)
	(goal gl-wood-saving 38)
	(research-completed my-second-unique-research)
=>
	(release-escrow stone)
	(release-escrow wood)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: castle c: 8)
	(build castle)
	(set-goal gl-stone-saving 0)
	(set-goal gl-wood-saving 0)
	(chat-to-player my-player-number "castle 9")
)

(defrule	
	(current-age == castle-age)
	(or (military-population >= 10)
	(up-compare-goal gl-military-advantage >= 10))
	(up-compare-goal gl-military-advantage >= -10)
	(can-build-with-escrow castle)
	(civ-selected slavic)
	(goal gl-stone-saving 38)
	(goal gl-wood-saving 38)
	(research-completed my-second-unique-research)
=>
	(release-escrow stone)
	(release-escrow wood)
	(set-escrow-percentage stone 0)
	(set-escrow-percentage wood 0)
	(up-assign-builders c: castle c: 10)
	;(up-set-placement-data focus-player -1 c: 9)
    ;(up-build place-control with-escrow c: castle)
	(build-forward castle)
	(set-goal gl-stone-saving 0)
	(set-goal gl-wood-saving 0)
	(chat-to-player my-player-number "castle 10")
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build castle)
	(building-type-count-total castle < 1)
=>
	(up-assign-builders c: castle c: 8)
	(up-set-placement-data my-player-number -1 c: 9)
	(up-build place-control 0 c: castle)
	(chat-to-player my-player-number "castle 11")
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build castle)
	(building-type-count-total castle >= 1)
=>
	(up-assign-builders c: castle c: 8)
	(build castle)
	(chat-to-player my-player-number "castle 12")
)

(defrule	
	(current-age == imperial-age)
	(or (military-population < 15)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build castle)
	(building-type-count-total castle < 1)
=>
	(up-assign-builders c: castle c: 8)
	(up-set-placement-data my-player-number -1 c: 9)
	(build castle)
	(chat-to-player my-player-number "castle 13")
)

(defrule	
	(current-age == imperial-age)
	(or (military-population < 15)
	(up-compare-goal gl-military-advantage < 10))
	(not (town-under-attack))
	(can-build castle)
	(building-type-count-total castle >= 1)
=>
	(up-assign-builders c: castle c: 8)
	(build castle)
	(chat-to-player my-player-number "castle 14")
)

(defrule	
	(current-age == castle-age)
	(or (military-population >= 10)
	(up-compare-goal gl-military-advantage >= 10))
	(can-build castle)
	(up-compare-goal gl-military-advantage >= -10)
=>
	(up-assign-builders c: castle c: 10)
	;(up-set-placement-data focus-player town-center c: 9)
    ;(up-build place-control 0 c: castle)
	(chat-to-player my-player-number "castle 15")
	(build-forward castle)
)

(defrule	
	(current-age == imperial-age)
	(or (military-population >= 15)
	(up-compare-goal gl-military-advantage >= 10))
	(can-build castle)
	(up-compare-goal gl-military-advantage >= -10)
=>
	(up-assign-builders c: castle c: 10)
	(build-forward castle)
	(chat-to-player my-player-number "castle 16")
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 8))
	(not (town-under-attack))
	(can-build-with-escrow krepost)
	(not (goal strategy-goal sg-fastcastle-uu))
	(building-type-count-total castle >= 1)
	(goal gl-stone-saving 39)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: krepost c: 6)
	(build krepost)
	(set-goal gl-stone-saving 0)
)

(defrule	
	(current-age == castle-age)
	(or (military-population < 10)
	(up-compare-goal gl-military-advantage < 8))
	(not (town-under-attack))
	(can-build-with-escrow krepost)
	(goal strategy-goal sg-fastcastle-uu)
	(goal gl-stone-saving 39)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: krepost c: 6)
	(build krepost)
	(set-goal gl-stone-saving 0)
)

(defrule	
	(current-age >= imperial-age)
	(or (military-population < 15)
	(up-compare-goal gl-military-advantage < 8))
	(not (town-under-attack))
	(can-build krepost)
	(building-type-count-total castle >= 1)
=>
	(up-assign-builders c: krepost c: 6)
	(build krepost)
)

(defrule	
	(current-age == castle-age)
	(or (military-population >= 10)
	(up-compare-goal gl-military-advantage >= 8))
	(up-compare-goal gl-military-advantage >= -10)
	(can-build-with-escrow krepost)
	(goal strategy-goal sg-fastcastle-uu)
	(goal gl-stone-saving 39)
=>
	(release-escrow stone)
	(set-escrow-percentage stone 0)
	(up-assign-builders c: krepost c: 6)
	(build-forward krepost)
	(set-goal gl-stone-saving 0)
)

(defrule	
	(current-age == imperial-age)
	(or (military-population >= 15)
	(up-compare-goal gl-military-advantage >= 8))
	(up-compare-goal gl-military-advantage >= -10)
	(can-build krepost)
	(building-type-count-total castle >= 1)
=>
	(up-assign-builders c: krepost c: 6)
	(build-forward krepost)
)

(defrule
	(can-research ri-hoardings)
=>
	(research ri-hoardings)
)

(defrule
	(goal strategy-goal sg-smush)
	(current-age == castle-age)
	(can-train battering-ram-line)
	(unit-type-count-total battering-ram-line < 3)
	(wood-amount > 75)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(military-population >= 10)
=>
	(train battering-ram-line)
)

(defrule
	(goal strategy-goal sg-smush)
	(current-age == castle-age)
	(can-train armored-elephant-line)
	(unit-type-count-total armored-elephant-line < 3)
	(wood-amount > 75)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(military-population >= 10)
=>
	(train armored-elephant-line)
)

(defrule
	(current-age == castle-age)
	(can-train battering-ram-line)
	(unit-type-count-total battering-ram-line < 3)
	(unit-type-count-total mangonel-line >= 2)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or (up-compare-goal gl-military-advantage >= 12)
	(military-population >= 20))
=>
	(train battering-ram-line)
)

(defrule
	(current-age == castle-age)
	(can-train armored-elephant-line)
	(unit-type-count-total armored-elephant-line < 3)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(military-population >= 10)
=>
	(train armored-elephant-line)
)

; (defrule ;target enemy tcs with rams
	; (current-age == castle-age)
	; (or (unit-type-count battering-ram-line >= 1)
	; (unit-type-count armored-elephant-line >= 1))
	; (up-compare-goal gl-military-advantage >= 16)
	; (players-building-type-count focus-player castle < 1)
	; (players-building-type-count focus-player town-center >= 1)
; =>
	; (up-full-reset-search)
	; (up-find-local c: battering-ram-line c: 5)
	; (up-find-local c: armored-elephant-line c: 5)
	; (up-find-remote c: town-center c: 1)
	; (up-target-objects 0 action-default -1 -1) ;todo: prevent spamming, but ensure it doesn't switch target
; )

(defrule
	;(goal strategy-goal sg-smush)
	(current-age == castle-age)
	(can-train mangonel-line)
	(unit-type-count-total mangonel-line < 6)
	(wood-amount > 75)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or (up-compare-goal gl-military-advantage >= 6)
	(military-population >= 15))
=>
	(train mangonel-line)
)

(defrule
	(goal strategy-goal sg-smush)
	(current-age == castle-age)
	(can-train mangonel-line)
	(unit-type-count-total mangonel-line < 3)
	(wood-amount > 75)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train mangonel-line)
)

(defrule
	(goal strategy-goal sg-smush)
	(current-age == castle-age)
	(can-train scorpion-line)
	(unit-type-count-total scorpion-line < 3)
	(wood-amount > 75)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train scorpion-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-heavy-scorpion)
	(unit-type-count-total scorpion-line >= 1)
=>
	(research ri-heavy-scorpion)
)

(defrule
	(goal strategy-goal sg-smush)
	(current-age == imperial-age)
	(can-train scorpion-line)
	(research-completed ri-heavy-scorpion)
	(unit-type-count-total scorpion-line < 5)
=>
	(train scorpion-line)
)

(defrule
	(current-age >= castle-age)
	(can-train archer-line)
	(unit-type-count-total archer-line < 3)
	(wood-amount > 75)
	(not (research-completed ri-crossbow))
	(research-available ri-crossbow)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total cavalry-archer-line < 1)
	(unit-type-count-total elephant-archer-line < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 3))
	)
=>
	(train archer-line)
)

(defrule
	(current-age >= castle-age)
	(can-train archer-line)
	(wood-amount > 75)
	(research-completed ri-crossbow)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total cavalry-archer-line < 5)
	(unit-type-count-total elephant-archer-line < 5)
	(or (unit-type-count-total knight-line < 5)
	(unit-type-count-total knight-line >= 20))
	(or
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class < 3)
		(unit-type-count-total siege-weapon-class < 3))
	)
=>
	(train archer-line)
)


(defrule
	(can-research-with-escrow ri-crossbow)
	(unit-type-count-total archer-line >= 3)
	(goal gl-food-saving 9)
	(goal gl-gold-saving 9)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-crossbow)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-crossbow)
	(unit-type-count-total archer-line >= 3)
=>
	(research ri-crossbow)
)

(defrule
	(can-research-with-escrow ri-elite-skirmisher)
	(unit-type-count-total skirmisher-line >= 3)
	(goal gl-wood-saving 40)
	(goal gl-gold-saving 40)
=>
	(release-escrow wood)
	(release-escrow gold)
	(research ri-elite-skirmisher)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-elite-skirmisher)
	(unit-type-count-total skirmisher-line >= 3)
=>
	(research ri-elite-skirmisher)
)

(defrule
	(not (goal strategy-goal sg-boom-imp))
	(can-research ri-pikeman)
	(unit-type-count-total spearman-line > 4)
=>
	(research ri-pikeman)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	(unit-type-count-total spearman-line > 4)
	(can-research ri-pikeman)
=>
	(research ri-pikeman)
)


(defrule
	(goal attack-now-goal 0)
	(goal retreat-now-goal 1)
	(or (military-population >= 18)
	(up-compare-goal gl-military-advantage >= 0))
	(current-age == castle-age)
=>
	;(set-strategic-number sn-number-attack-groups 500)
	;(set-strategic-number sn-minimum-attack-group-size 1)
	;(set-strategic-number sn-maximum-attack-group-size 1)
	(set-goal attack-now-goal 1)
	(set-goal retreat-now-goal 0)
	(chat-to-player my-player-number "Stop retreating")
)

(defrule
	(current-age == castle-age)
	(up-compare-goal gl-military-advantage < -4)
	(military-population < 18)
	(goal attack-now-goal 1)
	(goal retreat-now-goal 0)
=>
	(set-goal attack-now-goal 0)
	(set-goal retreat-now-goal 1)
	; (set-strategic-number sn-number-attack-groups 0)
	; (set-strategic-number sn-minimum-attack-group-size 0)
	; (set-strategic-number sn-maximum-attack-group-size 0)
	(up-reset-attack-now)
	(up-reset-unit c: -1)
	(up-retreat-now)
	(chat-to-player my-player-number "Low army numbers, I am retreating")
	(chat-to-allies "My army number is low, I am retreating")
)

(defrule
	(current-age == castle-age)
	(goal attack-now-goal 1)
	(goal retreat-now-goal 0)
	(or (military-population >= 18)
	(up-compare-goal gl-military-advantage >= 8))
	(up-compare-goal gl-military-advantage >= -4)
	(civilian-population g:< c-villager-goal)
=>
	;(set-goal attack-now-goal 1)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(up-ungarrison c: barracks)
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: siege-workshop)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)


(defrule
	(current-age >= castle-age)
	(civilian-population >= 55)
	(building-type-count-total university == 0)
	(building-type-count-total town-center >= 2)
	(can-build-with-escrow university)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(current-age >= castle-age)
	(civilian-population g:>= c-villager-goal)
	(building-type-count-total university == 0)
	(can-build-with-escrow university)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(current-age >= castle-age)
	(civilian-population g:>= c-villager-goal)
	(building-type-count-total siege-workshop == 0)
	(can-build-with-escrow siege-workshop)
=>
	(up-modify-escrow wood c:- 200)
	(build siege-workshop)
)

(defrule
	(current-age >= castle-age)
	(civilian-population g:>= c-villager-goal)
	(building-type-count-total monastery == 0)
	(can-build-with-escrow monastery)
=>
	(up-modify-escrow wood c:- 175)
	(build monastery)
)

(defrule
	(current-age >= castle-age)
	(civilian-population >= 60)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-gold-saving 0)
	(set-goal gl-wood-saving 0)
)

(defrule
	(current-age == imperial-age)
	(players-unit-type-count focus-player siege-weapon-class >= 3)
	(can-research ri-murder-holes)
=>
	(research ri-murder-holes)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total building-class >= 45)
	(can-research ri-masonry)
=>
	(research ri-masonry)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total building-class >= 60)
	(can-research ri-architecture)
=>
	(research ri-architecture)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age >= castle-age)
	(civ-selected lithuanians)
	(building-type-count-total monastery == 0)
	(can-build-with-escrow monastery)
=>
	(up-modify-escrow wood c:- 175)
	(build monastery)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age >= castle-age)
	(civilian-population >= 55)
	(building-type-count-total monastery == 0)
	(building-type-count-total town-center >= 2)
	(can-build monastery)
=>
	(build monastery)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age == castle-age)
	(can-train monk)
	(unit-type-count-total monk < 3)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train monk)
)

(defrule
	(current-age == imperial-age)
	(can-train monk)
	(unit-type-count-total monk < 3)
=>
	(train monk)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-block-printing)
	(unit-type-count-total monk >= 3)
=>
	(research ri-block-printing)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-illumination)
	(unit-type-count-total monk >= 5)
=>
	(research ri-illumination)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-theocracy)
	(unit-type-count-total monk >= 6)
=>
	(research ri-theocracy)
)

(defrule
	(current-age >= castle-age)
	(can-research-with-escrow ri-fervor)
	(civ-selected bohemians)
=>
	(up-modify-escrow gold c:- 140)
	(research ri-fervor)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-fervor)
	(unit-type-count-total monk >= 3)
=>
	(research ri-fervor)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-faith)
	(players-unit-type-count focus-player monk >= 6)
=>
	(research ri-faith)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-heresy)
	(players-unit-type-count focus-player monk >= 6)
=>
	(research ri-heresy)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-sanctity)
	(unit-type-count-total monk >= 3)
=>
	(research ri-sanctity)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-herbal-medicine)
=>
	(research ri-herbal-medicine)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-redemption)
	(players-unit-type-count focus-player siege-weapon-class > 0)
	(unit-type-count-total monk >= 3)
=>
	(research ri-redemption)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-atonement)
	(unit-type-count-total monk >= 5)
	(players-unit-type-count focus-player monk >= 3)
=>
	(research ri-atonement)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age >= feudal-age)
	(goal gl-food-saving 12)
	(goal gl-wood-saving 12)
	;(not(goal strategy-goal fastcastle))
	(can-research-with-escrow ri-bow-saw)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(research ri-bow-saw)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(not(goal strategy-goal sg-boom-imp))
	(current-age >= castle-age)
	;(not(goal strategy-goal fastcastle))
	(can-research-with-escrow ri-bow-saw)
	(goal gl-food-saving 11)
	(goal gl-wood-saving 11)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(set-escrow-percentage food 0)
	(research ri-bow-saw)
	(set-goal gl-wood-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(current-age == imperial-age)
	;(not(goal strategy-goal fastcastle))
	(can-research ri-bow-saw)
=>
	(research ri-bow-saw)
)

(defrule
	(current-age >= castle-age)
	(civilian-population >= 55)
	(up-research-status c: ri-bow-saw >= research-pending)
	;(not(goal strategy-goal fastcastle))
	(can-research ri-heavy-plow)
=>
	(research ri-heavy-plow)
)

(defrule
	(current-age >= castle-age)
	(not(goal strategy-goal sg-boom-imp))
	(can-research-with-escrow ri-wheel-barrow)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(goal gl-food-saving 29)
	(goal gl-wood-saving 29)
=>
	(release-escrow food)
	(release-escrow wood)
	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-wood-saving 0)
	(research ri-wheel-barrow)
)

(defrule
	(current-age >= castle-age)
	(not(goal strategy-goal sg-boom-imp))
	(can-research-with-escrow ri-wheel-barrow)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(up-modify-escrow food c:- 175)
	(up-modify-escrow wood c:- 50)
	(research ri-wheel-barrow)
)

(defrule
	(current-age == imperial-age)
	(not(goal strategy-goal sg-boom-imp))
	(can-research ri-wheel-barrow)
=>
	(research ri-wheel-barrow)
)

; (defrule
	; (current-age >= castle-age)
	; (not(goal strategy-goal sg-boom-imp))
	; (can-research-with-escrow ri-hand-cart)
	; (unit-type-count-total villager >= 42)
	; (goal gl-food-saving 29)
	; (goal gl-wood-saving 29)
; =>
	; (release-escrow food)
	; (release-escrow wood)
	; (set-escrow-percentage food 0)
	; (set-escrow-percentage wood 0)
	; (set-goal gl-food-saving 0)
	; (set-goal gl-wood-saving 0)
	; (research ri-hand-cart)
; )

(defrule
	(current-age >= castle-age)
	(not(goal strategy-goal sg-boom-imp))
	(can-research ri-hand-cart)
	(unit-type-count-total villager >= 42)
=>
	(research ri-hand-cart)
)

(defrule
	(current-age == imperial-age)
	(goal strategy-goal sg-boom-imp)
	(can-research-with-escrow ri-hand-cart)
=>
	(up-modify-escrow wood c:- 200)
	(up-modify-escrow food c:- 300)
	(research ri-hand-cart)
)

(defrule
	(current-age >= castle-age)
	(can-build market)
	(building-type-count-total market < 1)
=>
	(build market)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-scoutrush)))
	(goal ca-strategy gl-castleage-eagles)
	(current-age == castle-age)
	(building-type-count-total barracks < 3)
	(building-type-count-total town-center >= 1)
	(can-build barracks)
	(not (town-under-attack))
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-scoutrush)))
	(goal ca-strategy gl-castleage-eagles)
	(current-age == castle-age)
	(building-type-count-total barracks < 3)
	(building-type-count-total town-center >= 1)
	(can-build barracks)
	(town-under-attack)
=>
	(build barracks)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-archerrush)))
	(goal ca-strategy gl-castleage-rangeunit)
	(current-age == castle-age)
	(building-type-count-total archery-range < 3)
	(building-type-count-total town-center >= 1)
	(can-build archery-range)
	(research-available ri-crossbow)
	(not (town-under-attack))
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-archerrush)))
	(goal ca-strategy gl-castleage-rangeunit)
	(current-age == castle-age)
	(building-type-count-total archery-range < 3)
	(building-type-count-total town-center >= 1)
	(can-build archery-range)
	(research-available ri-crossbow)
	(town-under-attack)
=>
	(build archery-range)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-scoutrush)))
	(goal ca-strategy gl-castleage-stableunit)
	(current-age == castle-age)
	(building-type-count-total stable < 3)
	(building-type-count-total town-center >= 1)
	(can-build stable)
	(not (town-under-attack))
=>
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(or (goal strategy-goal sg-fastcastle-gu)
	(or (goal strategy-goal sg-fastcastle-uu)
	(goal strategy-goal sg-scoutrush)))
	(goal ca-strategy gl-castleage-stableunit)
	(current-age == castle-age)
	(building-type-count-total stable < 3)
	(building-type-count-total town-center >= 1)
	(can-build stable)
	(town-under-attack)
=>
	(build stable)
)

(defrule
	(current-age == castle-age)
	(can-train knight-line)
	(unit-type-count-total knight-line < 5)
	(or (unit-type-count-total archer-line > 8)
	(unit-type-count-total camel-line > 8))
	(or (unit-type-count-total archer-line < 20)
	(unit-type-count-total camel-line < 20))
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or 
		(nor (players-unit-type-count focus-player spearman-line >= 15) 
		(or (players-unit-type-count focus-player monk >= 3) 
		(players-unit-type-count focus-player camel-line >= 8)))
		(or (unit-type-count-total infantry-class < 3)
		(unit-type-count-total monk < 2))
	)
=>
	(train knight-line)
)

(defrule
	(current-age == castle-age)
	(can-train knight-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or (unit-type-count-total archer-line <= 8)
	(unit-type-count-total archer-line >= 20))
	(or (unit-type-count-total camel-line <= 8)
	(unit-type-count-total camel-line >= 20))
	(unit-type-count-total my-unique-unit-line <= 8)
	(unit-type-count-total battle-elephant-line <= 4)
	(unit-type-count-total steppe-lancer-line <= 4)
	(or 
		(nor (players-unit-type-count focus-player spearman-line >= 15) 
		(or (players-unit-type-count focus-player monk >= 3) 
		(players-unit-type-count focus-player camel-line >= 8)))
		(or (unit-type-count-total infantry-class >= 3)
		(unit-type-count-total monk >= 2))
	)
=>
	(train knight-line)
)

(defrule
	(can-research ri-fletching)
	(up-compare-goal gl-archery-class-units >= 3)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total archery-class >= 3)
	(goal strategy-goal sg-archerrush)
	(building-type-count-total blacksmith < 1)
=>
	(build blacksmith)
)


(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research ri-ballistics)
=>
	(research ri-ballistics)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(can-research-with-escrow ri-fletching)
	(up-compare-goal gl-archery-class-units >= 3)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(can-research-with-escrow ri-fletching)
	(up-compare-goal gl-archery-class-units >= 6)
	(goal gl-gold-saving 22)
	(goal gl-food-saving 22)
=>
	(up-modify-escrow food c:- 100)
	(up-modify-escrow gold c:- 50)
	(research ri-fletching)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(building-type-count-total archery-range == 0)
	(building-type-count-total town-center >= 1)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	; (set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(building-type-count-total university == 0)
	(can-build-with-escrow university)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(up-compare-goal gl-archery-class-units > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total galley-line > 3)
=>
	(research ri-fletching)
)

(defrule
	(can-research ri-bodkin-arrow)
	(unit-type-count-total galley-line > 5)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(can-research ri-bracer)
	(unit-type-count-total galley-line > 7)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total galley-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total galley-line > 5)
	(can-research ri-ballistics)
=>
	(research ri-ballistics)
)

(defrule
	(unit-type-count-total galley-line > 7)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(can-research-with-escrow ri-fletching)
	(unit-type-count-total archer-line >= 3)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(building-type-count-total archery-range == 0)
	(building-type-count-total town-center >= 1)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(can-research-with-escrow ri-fletching)
	(unit-type-count-total skirmisher-line >= 3)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)


(defrule
	(can-research ri-fletching)
	(unit-type-count-total skirmisher-line >= 3)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(building-type-count-total archery-range == 0)
	(building-type-count-total town-center >= 1)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total skirmisher-line >= 3)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(can-research-with-escrow ri-fletching)
	(unit-type-count-total longbowman-line >= 3)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total longbowman-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(building-type-count-total archery-range == 0)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total longbowman-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total chu-ko-nu-line >= 3)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total chu-ko-nu-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(building-type-count-total archery-range == 0)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total chu-ko-nu-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total plumed-archer-line >= 3)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total plumed-archer-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(building-type-count-total archery-range == 0)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total plumed-archer-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total rattan-archer-line >= 3)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total rattan-archer-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(building-type-count-total archery-range == 0)
	(research-available ri-thumb-ring)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total rattan-archer-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(research-completed ri-bracer)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(up-compare-goal gl-cavalry-archer-units > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-fletching)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(building-type-count-total archery-range == 0)
	(building-type-count-total town-center >= 1)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total cavalry-archer-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total mangudai-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total mangudai-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total ratha-set > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total ratha-set > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total camel-archer-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total camel-archer-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total war-wagon-line > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total war-wagon-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total genitour-line > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(research-completed ri-fletching)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(research-completed ri-bodkin-arrow)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research-with-escrow ri-fletching)
	(goal gl-gold-saving 14)
	(goal gl-food-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-fletching)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research-with-escrow ri-bodkin-arrow)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bodkin-arrow)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research-with-escrow ri-bracer)
	(goal gl-food-saving 14)
	(goal gl-gold-saving 14)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage food 0)
	(research ri-bracer)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research ri-fletching)
	(unit-type-count-total kipchak-set > 5)
=>
	(research ri-fletching)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-bodkin-arrow)
=>
	(research ri-bodkin-arrow)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-bracer)
=>
	(research ri-bracer)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(building-type-count-total archery-range == 0)
	(can-build-with-escrow archery-range)
=>
	(up-modify-escrow wood c:- 175)
	(build archery-range)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-thumb-ring)
=>
	(research ri-thumb-ring)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-parthian-tactics)
=>
	(research ri-parthian-tactics)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-build-with-escrow university)
	(building-type-count-total university < 1)
=>
	(up-modify-escrow wood c:- 200)
	(build university)
)
(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research-with-escrow ri-ballistics)
	(goal gl-wood-saving 10)
	(goal gl-gold-saving 10)
=>
	(release-escrow wood)
	(release-escrow gold)
	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 0)
	(research ri-ballistics)
	(set-goal gl-wood-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total kipchak-set > 5)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(or (unit-type-count-total cavalry-class > 2)
	(unit-type-count-total scout-cavalry-line > 2))
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(or (unit-type-count-total cavalry-class > 2)
	(unit-type-count-total scout-cavalry-line > 2))
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(or (unit-type-count-total cavalry-class > 2)
	(unit-type-count-total scout-cavalry-line > 2))
	(can-research-with-escrow ri-scale-barding)
	(goal gl-food-saving 13)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(research ri-scale-barding)
	(set-goal gl-food-saving 0)
)

(defrule
	(or (unit-type-count-total cavalry-class > 4)
	(unit-type-count-total scout-cavalry-line > 4))
	(can-research-with-escrow ri-chain-barding)
	(goal gl-food-saving 13)
	(goal gl-gold-saving 13)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-chain-barding)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(or (unit-type-count-total cavalry-class > 4)
	(unit-type-count-total scout-cavalry-line > 4))
	(can-research-with-escrow ri-plate-barding)
	(goal gl-food-saving 13)
	(goal gl-gold-saving 13)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-plate-barding)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(or (unit-type-count-total cavalry-class > 2)
	(unit-type-count-total scout-cavalry-line > 2))
	(can-research ri-scale-barding)
=>
	(research ri-scale-barding)
)

(defrule
	(or (unit-type-count-total cavalry-class > 4)
	(unit-type-count-total scout-cavalry-line > 4))
	(can-research ri-chain-barding)
=>
	(research ri-chain-barding)
)

(defrule
	(or (unit-type-count-total cavalry-class > 4)
	(unit-type-count-total scout-cavalry-line > 4))
	(can-research ri-plate-barding)
=>
	(research ri-plate-barding)
)


(defrule
	(unit-type-count-total cavalry-class >= 6)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-forging)
=>
	(research ri-forging)
)

(defrule
	(can-research-with-escrow imperial-age)
	(unit-type-count-total villager g:>= c-villager-goal)
	(goal gl-food-saving 23)
	(goal gl-gold-saving 23)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research imperial-age)
	(chat-to-allies "Gehe in die Imperialzeit")
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(can-research imperial-age)
	(or (unit-type-count-total villager g:>= c-villager-goal)
	(population-headroom < 5))
=>
	(research imperial-age)
	(chat-to-allies "Gehe in die Imperialzeit")
)

;endregion

;region Build Order Imperial =======================================

; #load-if-not-defined UP-SCENARIO-GAME
; (defrule
	; (current-age == imperial-age)
; =>
    ; (set-strategic-number sn-maximum-town-size 55)
; )
; #end-if

(defrule
	(current-age == imperial-age)
	(can-train villager)
	(unit-type-count-total villager < 125)
=>
	(train villager)
	(up-get-fact civilian-population 0 civilian-pop) 
	;(up-chat-data-to-all "Anzahl Dorfbewohner: %d" g: civilian-pop)
)

(defrule
	(current-age == imperial-age)
	(can-build house)
	(housing-headroom < 12)
	(up-pending-objects c: house < 2)
=>
	(build house)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(up-research-status c: imperial-age >= research-pending)
	(goal ca-strategy gl-castleage-stableunit)
	(building-type-count-total stable < 4)
	(building-type-count-total town-center >= 1)
	(can-build stable)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 16)
    (up-build place-control 0 c: stable)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(up-research-status c: imperial-age >= research-pending)
	(goal ca-strategy gl-castleage-rangeunit)
	(building-type-count-total archery-range < 4)
	(building-type-count-total town-center >= 1)
	(can-build archery-range)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 16)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(up-research-status c: imperial-age >= research-pending)
	(goal ca-strategy gl-castleage-eagles)
	(building-type-count-total barracks < 4)
	(building-type-count-total town-center >= 1)
	(can-build barracks)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 16)
    (up-build place-control 0 c: barracks)
)

(defrule
	(current-age == imperial-age)
	(civilian-population >= 125)
	(can-research ri-crop-rotation)
=>
	(research ri-crop-rotation)
)

(defrule
	(current-age == imperial-age)
	(civilian-population >= 125)
	(can-research ri-stonecutting)
=>
	(research ri-stonecutting)
)

(defrule
	(current-age == imperial-age)
	(can-build town-center)
	(building-type-count-total town-center < 5)
	(up-compare-goal gl-military-advantage >= -10)
=>
	(set-strategic-number sn-town-center-placement lumber-camp)
	(up-assign-builders c: town-center c: 6)
	(up-assign-builders c: town-center-foundation c: 6)
	(build town-center)
)

(defrule	
	(current-age == imperial-age)
	(can-build siege-workshop)
	(building-type-count-total siege-workshop < 4)
	(military-population >= 25)
=>
	(up-assign-builders c: siege-workshop c: 2)
	(build-forward siege-workshop)
)

(defrule	
	(current-age == imperial-age)
	(can-build siege-workshop)
	(building-type-count-total siege-workshop < 3)
	(building-type-count-total town-center >= 1)
	(military-population < 25)
=>
	(up-assign-builders c: siege-workshop c: 2)
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: siege-workshop)
)

(defrule
	(current-age >= castle-age)
	(can-research ri-capped-ram)
=>
	(research ri-capped-ram)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-elite-armored-elephant)
=>
	(research ri-elite-armored-elephant)
)

(defrule
	(current-age == imperial-age)
	(can-train armored-elephant-line)
	(research-available ri-elite-armored-elephant)
	(unit-type-count armored-elephant-line < 1)
=>
	(train armored-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train armored-elephant-line)
	(research-completed ri-elite-armored-elephant)
	(unit-type-count armored-elephant-line < 10)
=>
	(train armored-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train battering-ram-line)
	(research-available ri-capped-ram)
	(unit-type-count battering-ram-line < 1)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(can-train battering-ram-line)
	(not (research-available ri-siege-ram))
	(research-completed ri-capped-ram)
	(unit-type-count battering-ram-line < 10)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(can-train battering-ram-line)
	(research-available ri-siege-ram)
	(research-completed ri-capped-ram)
	(unit-type-count battering-ram-line < 1)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(can-train battering-ram-line)
	(research-completed ri-siege-ram)
	(unit-type-count battering-ram-line < 10)
=>
	(train battering-ram-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-siege-ram)
=>
	(research ri-siege-ram)
)

(defrule
	(current-age == imperial-age)
	(can-train mangonel-line)
	(research-completed ri-onager)
	(unit-type-count mangonel-line < 5)
	(wood-amount > 75)
=>
	(train mangonel-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-onager)
=>
	(research ri-onager)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-siege-onager)
=>
	(research ri-siege-onager)
)

(defrule
	(current-age == imperial-age)
	(can-train bombard-cannon-line)
	(unit-type-count bombard-cannon-line < 6)
	(wood-amount > 300)
=>
	(train bombard-cannon-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-bombard-tower)
=>
	(research ri-bombard-tower)
)

(defrule
	(current-age == imperial-age)
	(can-build bombard-tower)
	(building-type-count bombard-tower < 6)
	(wood-amount > 300)
	(military-population >= 25)
=>
	(up-assign-builders c: bombard-tower c: 4)
	(build-forward bombard-tower)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-houfnice)
=>
	(research ri-houfnice)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-siege-engineers)
	(or (unit-type-count-total mangonel-line > 3)
	(or (unit-type-count-total bombard-cannon-line > 3)
	(unit-type-count trebuchet > 3)))
=>
	(research ri-siege-engineers)
)

(defrule
	(current-age == imperial-age)
	(can-train archer-line)
	(unit-type-count archer-line < 5)
	(wood-amount > 75)
	(research-available ri-arbalest)
	(not (research-completed ri-arbalest))
	(research-available ri-arbalest)
	(unit-type-count cavalry-archer-line < 5)
	(unit-type-count elephant-archer-line < 5)
	(nand (players-unit-type-count focus-player skirmisher-line >= 20) 
    (or (unit-type-count-total cavalry-class < 3)
	(unit-type-count-total siege-weapon-class < 1))) 
=>
	(train archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train archer-line)
	(wood-amount > 75)
	(research-completed ri-arbalest)
	(unit-type-count cavalry-archer-line < 5)
	(unit-type-count elephant-archer-line < 5)
	(nand (players-unit-type-count focus-player skirmisher-line >= 20) 
    (or (unit-type-count-total cavalry-class < 3)
	(unit-type-count-total siege-weapon-class < 1))) 
=>
	(train archer-line)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research-with-escrow ri-arbalest)
	(goal gl-food-saving 9)
	(goal gl-gold-saving 9)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-arbalest)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total archer-line >= 3)
	(can-research ri-arbalest)
=>
	(research ri-arbalest)
)
	
(defrule
	(current-age == imperial-age)
	(can-train spearman-line)
	(research-completed ri-pikeman)
	(not (research-available ri-halberdier))
	(unit-type-count-total spearman-line < 5)
	(not(unit-available eagle-warrior-line))
	(not(unit-available barracks-huskarl))
	(not(unit-available elite-barracks-huskarl))
	(not(unit-available kamayuk-line))
	(food-amount > 75)
=>
	(train spearman-line)
)

(defrule
	(current-age == imperial-age)
	(can-train spearman-line)
	(research-completed ri-pikeman)
	(research-available ri-halberdier)
	(unit-type-count-total spearman-line < 5)
	(not(unit-available eagle-warrior-line))
	(not(unit-available barracks-huskarl))
	(not(unit-available elite-barracks-huskarl))
	(not(unit-available kamayuk-line))
	(food-amount > 75)
=>
	(train spearman-line)
)

(defrule
	(current-age == imperial-age)
	(can-train spearman-line)
	(research-completed ri-halberdier)
	(not(unit-available eagle-warrior-line))
	(not(unit-available barracks-huskarl))
	(not(unit-available elite-barracks-huskarl))
	(not(unit-available kamayuk-line))
	(food-amount > 75)
=>
	(train spearman-line)
)

(defrule
	(current-age >= castle-age)
	(can-train barracks-huskarl)
=>
	(train barracks-huskarl)
)

(defrule
	(current-age == imperial-age)
	(can-train elite-barracks-huskarl)
=>
	(train elite-barracks-huskarl)
)

(defrule
	(can-research-with-escrow ri-halberdier)
	(unit-type-count-total spearman-line >= 6)
	(goal gl-food-saving 41)
	(goal gl-gold-saving 41)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-halberdier)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total spearman-line >= 6)
	(can-research ri-halberdier)
=>
	(research ri-halberdier)
)

(defrule
	(can-train condottiero)
	(unit-type-count condottiero < 40)
	(or (players-unit-type-count focus-player archery-cannon-class > 5)
	(or (players-unit-type-count focus-player spearman-line > 5)
	(or (players-unit-type-count focus-player camel-line > 5)
	(or (players-unit-type-count focus-player scout-cavalry-line > 5)
	(players-unit-type-count focus-player eagle-warrior-line > 5)))))	
=>
	(train condottiero)
)

(defrule
	(goal attack-now-goal 0)
	(goal retreat-now-goal 1)
	(or (military-population >= 23)
	(up-compare-goal gl-military-advantage >= 0))
	(current-age == imperial-age)
=>
	(set-goal attack-now-goal 1)
	(set-goal retreat-now-goal 0)
	;(set-strategic-number sn-number-attack-groups 500)
	;(set-strategic-number sn-minimum-attack-group-size 1)
	;(set-strategic-number sn-maximum-attack-group-size 1)
	(chat-to-player my-player-number "Stop retreating")
)

(defrule
	(current-age == imperial-age)
	(military-population < 23)
	(up-compare-goal gl-military-advantage < -5)
	(goal attack-now-goal 1)
	(goal retreat-now-goal 0)
=>
	(set-goal attack-now-goal 0)
	(set-goal retreat-now-goal 1)
	; (set-strategic-number sn-number-attack-groups 0)
	; (set-strategic-number sn-minimum-attack-group-size 0)
	; (set-strategic-number sn-maximum-attack-group-size 0)
	(up-reset-attack-now)
	(up-reset-unit c: -1)
	(up-retreat-now)
	(chat-to-player my-player-number "Low army numbers, I am retreating")
	(chat-to-allies "My army number is low, I am retreating")
)

(defrule
	(current-age == imperial-age)
	;(goal retreat-now-goal 0)
	(goal attack-now-goal 1)
	(or (military-population >= 23)
	(up-compare-goal gl-military-advantage >= 10))
	(up-compare-goal gl-military-advantage >= -5)
=>
	;(set-goal attack-now-goal 1)
	(up-gather-inside c: barracks c: 0)
	(up-gather-inside c: archery-range c: 0)
	(up-gather-inside c: stable c: 0)
	(up-gather-inside c: siege-workshop c: 0)
	(attack-now)
	;(chat-to-player my-player-number "Starting an attack")
	;(chat-to-allies "31")
)

(defrule
	(current-age >= castle-age)
	(can-research ri-chemistry)
=>
	(research ri-chemistry)
)

(defrule
	(current-age >= castle-age)
	(civ-selected bohemians)
	(building-type-count university > 0)
	(building-type-count archery-range > 0)
	(can-research-with-escrow ri-chemistry)
	(goal gl-food-saving 29)
	(goal gl-gold-saving 29)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(research ri-chemistry)
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total university >= 1)
	(not (goal strategy-goal sg-boom-imp))
	(or (up-compare-goal gl-archery-class-units >= 5)
	(up-compare-goal gl-cavalry-archer-units >= 5))
	(can-research-with-escrow ri-chemistry)
	(goal gl-food-saving 29)
	(goal gl-gold-saving 29)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(research ri-chemistry)
)

(defrule
	(up-research-status c: imperial-age >= research-pending)
	(building-type-count-total university >= 1)
	(unit-available bombard-cannon-line)
	(goal strategy-goal sg-boom-imp)
	(can-research-with-escrow ri-chemistry)
	(goal gl-food-saving 29)
	(goal gl-gold-saving 29)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
	(research ri-chemistry)
)

(defrule
	(unit-type-count-total cavalry-cannon-class > 5)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total cavalry-cannon-class > 5)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total cavalry-cannon-class > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)
(defrule
	(unit-type-count-total cavalry-cannon-class > 5)
	(building-type-count-total stable == 0)
	(can-build-with-escrow stable)
=>
	(up-modify-escrow wood c:- 175)
	(build stable)
)

(defrule
	(unit-type-count-total cavalry-cannon-class > 5)
	(can-research ri-husbandry)
=>
	(research ri-husbandry)
)

(defrule
	(unit-type-count-total cavalry-cannon-class > 5)
	(can-research-with-escrow ri-bloodlines)
=>
	(up-modify-escrow food c:- 150)
	(up-modify-escrow gold c:- 100)
	(research ri-bloodlines)
)

(defrule
	(unit-type-count-total hand-cannoneer > 5)
	(can-research ri-padded-archer-armor)
=>
	(research ri-padded-archer-armor)
)

(defrule
	(unit-type-count-total hand-cannoneer > 5)
	(can-research ri-leather-archer-armor)
=>
	(research ri-leather-archer-armor)
)

(defrule
	(unit-type-count-total hand-cannoneer > 5)
	(can-research ri-ring-archer-armor)
=>
	(research ri-ring-archer-armor)
)

(defrule
	(current-age >= castle-age)
	;(not(goal strategy-goal fastcastle))
	(can-research ri-two-man-saw)
=>
	(research ri-two-man-saw)
)

(defrule
	(current-age >= castle-age)
	(not(goal strategy-goal sg-boom-imp))
	(can-research ri-stone-mining)
	(strategic-number sn-stone-gatherer-percentage >= 5)
=>
	(research ri-stone-mining)
)

(defrule
	(current-age == imperial-age)
	(goal strategy-goal sg-boom-imp)
	(civilian-population > 50)
	(can-research ri-stone-mining)
	(strategic-number sn-stone-gatherer-percentage >= 5)
=>
	(research ri-stone-mining)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(up-research-status c: imperial-age >= research-pending)
	(can-build barracks)
	(building-type-count-total barracks < 1)
	(building-type-count-total town-center >= 1)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 10")
)

(defrule
	(current-age == castle-age)
	(unit-type-count-total eagle-warrior-line > 5)
	(building-type-count-total barracks < 3)
	(building-type-count-total town-center >= 1)
	(can-build barracks)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 12")
)

(defrule
	(current-age >= castle-age)
	;(not(goal strategy-goal fastcastle))
	(can-research ri-gold-shaft-mining)
	(civilian-population >= 60)
	(or (unit-type-count-total villager g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(research ri-gold-shaft-mining)
)

(defrule
	(current-age >= castle-age)
	;(not(goal strategy-goal fastcastle))
	(can-research ri-stone-shaft-mining)
	(civilian-population >= 70)
	(strategic-number sn-stone-gatherer-percentage >= 6)
	(or (unit-type-count-total villager g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(research ri-stone-shaft-mining)
)

(defrule
	(current-age == imperial-age)
	(research-completed ri-keep)
	(building-type-count-total watch-tower-line < 10)
	(can-build watch-tower)
=>
	(up-assign-builders c: watch-tower c: 4)
	(build-forward watch-tower)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total donjon < 10)
	(can-build donjon)
=>
	(up-assign-builders c: donjon c: 4)
	(build-forward donjon)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total stable < 3)
	(building-type-count-total town-center >= 1)
	(can-build stable)
	(game-time > 2700)
	(military-population < 25)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total barracks < 3)
	(building-type-count-total town-center >= 1)
	(can-build barracks)
	(game-time > 2700)
	(military-population < 25)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 12")
)

(defrule
	(current-age == imperial-age)
	(game-time > 2700)
	(building-type-count-total archery-range < 3)
	(building-type-count-total town-center >= 1)
	(can-build archery-range)
	(military-population < 25)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total stable < 3)
	(can-build stable)
	(military-population >= 25)
=>
	(build-forward stable)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total barracks < 3)
	(can-build barracks)
	(military-population >= 25)
=>
	(build-forward barracks)
;	(chat-to-player my-player-number "Barracks 13")
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total archery-range < 3)
	(can-build archery-range)
	(military-population >= 25)
=>
	(build-forward archery-range)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total barracks < 10)
	(building-type-count-total town-center >= 1)
	(or (research-completed ri-elite-eagle-warrior)
	(or (research-completed ri-champion)
	(research-completed ri-halberdier)))
	(can-build barracks)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total archery-range < 10)
	(building-type-count-total town-center >= 1)
	(or (research-completed ri-arbalest)
	(or (research-completed ri-heavy-cavalry-archer)
	(or (research-completed ri-elite-elephant-archer)
	(unit-type-count-total hand-cannoneer >= 10))))
	(can-build archery-range)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: archery-range)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total siege-workshop < 4)
	(building-type-count-total town-center >= 1)
	(or (research-completed ri-siege-ram)
	(or (research-completed ri-onager)
	(research-completed ri-houfnice)))
	(can-build siege-workshop)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 18)
    (up-build place-control 0 c: siege-workshop)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total stable < 10)
	(building-type-count-total town-center >= 1)
	(not (research-available ri-paladin))
	(research-completed ri-cavalier)
	(can-build stable)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(current-age == imperial-age)
	(building-type-count-total stable < 8)
	(building-type-count-total town-center >= 1)
	(or (research-completed ri-paladin)
	(or (research-completed ri-heavy-camel)
	(or (research-completed ri-elite-battle-elephant)
	(or (research-completed ri-winged-hussar)
	(research-completed ri-hussar)))))
	(can-build stable)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: stable)
)

(defrule
	(current-age == imperial-age)
	(can-train knight-line)
	(unit-type-count archer-line < 5)
	(unit-type-count battle-elephant-line < 5)
	(unit-type-count cavalry-archer-line < 5)
	(research-completed ri-cavalier)
	(not (research-available ri-paladin))
=>
	(train knight-line)
)

(defrule
	(current-age == castle-age)
	(can-train battle-elephant-line)
	(unit-type-count knight-line < 5)
	(civilian-population g:< c-villager-goal)
=>
	(train battle-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train battle-elephant-line)
	(not (research-completed ri-elite-battle-elephant))
	(unit-type-count battle-elephant-line < 5)
	(unit-type-count knight-line < 5)
=>
	(train battle-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(can-train battle-elephant-line)
	(research-completed ri-elite-battle-elephant)
	(unit-type-count knight-line < 5)
=>
	(train battle-elephant-line)
)

(defrule
	(current-age == imperial-age)
	(unit-type-count battle-elephant-line >= 3)
=>
	(research ri-elite-battle-elephant)
)

(defrule
	(current-age == imperial-age)
	(can-train knight-line)
	(unit-type-count knight-line < 10)
	(unit-type-count archer-line < 5)
	(unit-type-count cavalry-archer-line < 5)
	(research-completed ri-cavalier)
	(research-available ri-paladin)
=>
	(train knight-line)
)

(defrule
	(current-age == imperial-age)
	(can-train knight-line)
	(research-completed ri-paladin)
=>
	(train knight-line)
)

(defrule
	(current-age == castle-age)
	(civ-selected burgundians)
	(can-research-with-escrow ri-cavalier)
	(unit-type-count-total knight-line >= 0)
	(goal gl-food-saving 18)
	(goal gl-gold-saving 18)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-cavalier)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(current-age == imperial-age)
	(not (civ-selected burgundians))
	(can-research-with-escrow ri-cavalier)
	(unit-type-count-total knight-line >= 0)
	(goal gl-food-saving 19)
	(goal gl-gold-saving 19)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-cavalier)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research-with-escrow ri-paladin)
	(goal gl-food-saving 19)
	(goal gl-gold-saving 19)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-paladin)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(can-research ri-imperial-skirmisher)
=>
	(research ri-imperial-skirmisher)
)

(defrule
	(can-build feitoria)
	(building-type-count-total feitoria < 3)
=>
	(build feitoria)
)

(defrule
	(can-build lumber-camp)
	(current-age == feudal-age)
	(up-compare-sn sn-wood-gatherer-percentage > 50)
	(building-type-count-total lumber-camp < 3)
	(building-type-count-total farm >= 4)
	(resource-found wood)
	(dropsite-min-distance wood < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(can-build lumber-camp)
	(current-age == castle-age)
	(up-compare-sn sn-wood-gatherer-percentage > 40)
	(building-type-count-total lumber-camp < 4)
	(resource-found wood)
	;(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(up-modify-sn sn-camp-max-distance c:+ 8)
	(build lumber-camp)
)

(defrule
	(can-build lumber-camp)
	(current-age == imperial-age)
	(up-compare-sn sn-wood-gatherer-percentage > 40)
	(building-type-count-total lumber-camp < 5)
	(resource-found wood)
	;(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(up-modify-sn sn-camp-max-distance c:+ 12)
	(build lumber-camp)
)

(defrule
	(can-build mining-camp)
	(current-age == feudal-age)
	(not (goal strategy-goal sg-fastcastle-uu))
	(not (goal strategy-goal sg-fastcastle-gu))
	(up-compare-sn sn-gold-gatherer-percentage > 36)
	(building-type-count-total mining-camp < 3)
	(resource-found gold)
	(dropsite-min-distance gold < 255)
	(civilian-population >= 24)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(can-build mining-camp)
	(current-age == castle-age)
	(up-compare-sn sn-gold-gatherer-percentage > 30)
	(building-type-count-total mining-camp < 4)
	(resource-found gold)
	;(dropsite-min-distance gold > 2)
	(dropsite-min-distance gold < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(up-modify-sn sn-camp-max-distance c:+ 8)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(can-build mining-camp)
	(current-age == imperial-age)
	(up-compare-sn sn-gold-gatherer-percentage > 30)
	(building-type-count-total mining-camp < 5)
	(resource-found gold)
	;(dropsite-min-distance gold > 2)
	(dropsite-min-distance gold < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(up-modify-sn sn-camp-max-distance c:+ 12)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(can-build mining-camp)
	(current-age == feudal-age)
	(not (goal strategy-goal sg-fastcastle-uu))
	(not (goal strategy-goal sg-fastcastle-gu))
	(up-compare-sn sn-stone-gatherer-percentage > 25)
	(building-type-count-total mining-camp < 2)
	(resource-found stone)
	(dropsite-min-distance stone < 255)
	(civilian-population >= 24)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

(defrule
	(can-build mining-camp)
	(current-age == castle-age)
	(up-compare-sn sn-stone-gatherer-percentage > 20)
	(building-type-count-total mining-camp < 4)
	(resource-found stone)
	;(dropsite-min-distance stone > 2)
	(dropsite-min-distance stone < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(up-modify-sn sn-camp-max-distance c:+ 8)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

(defrule
	(can-build mining-camp)
	(current-age == imperial-age)
	(up-compare-sn sn-stone-gatherer-percentage > 20)
	(building-type-count-total mining-camp < 5)
	(resource-found stone)
	;(dropsite-min-distance stone > 2)
	(dropsite-min-distance stone < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
	(up-modify-sn sn-camp-max-distance c:+ 12)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)

(defrule
	(game-time > 3000)
	(can-build lumber-camp)
	(building-type-count-total lumber-camp < 7)
	(resource-found wood)
	;(dropsite-min-distance wood > 4)
	(dropsite-min-distance wood < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 1)
	(build lumber-camp)
)

(defrule
	(game-time > 1800)
	(can-build mill)
	(building-type-count-total mill < 3)
=>
	(build mill)
)

(defrule
	(game-time > 3000)
	(can-build mill)
	(building-type-count-total mill < 5)
=>
	(build mill)
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total farm > 32)
	(building-type-count-total mill < 2)
	(can-build mill)
	(up-pending-objects c: mill < 1)
=>
	(build mill)
	(chat-to-player my-player-number "No farming space, build a new mill")
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total farm > 40)
	(building-type-count-total mill < 3)
	(can-build mill)
	(up-pending-objects c: mill < 1)
=>
	(build mill)
	(chat-to-player my-player-number "No farming space, build a new mill")
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total farm > 48)
	(building-type-count-total mill < 4)
	(can-build mill)
	(up-pending-objects c: mill < 1)
=>
	(build mill)
	(chat-to-player my-player-number "No farming space, build a new mill")
)

(defrule
	(current-age >= castle-age)
	(building-type-count-total farm > 70)
	(building-type-count-total mill < 5)
	(can-build mill)
	(up-pending-objects c: mill < 1)
=>
	(build mill)
	(chat-to-player my-player-number "No farming space, build a new mill")
)

(defrule
	(game-time > 3000)
	(can-build mining-camp)
	(current-age > castle-age)
	(building-type-count-total mining-camp < 3)
	(resource-found gold)
	;(dropsite-min-distance gold > 2)
	(dropsite-min-distance gold < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 6)
    (set-strategic-number sn-stone-dropsite-distance 200)
	(build mining-camp)
)

(defrule
	(game-time > 3000)
	(can-build mining-camp)
	(current-age > castle-age)
	(building-type-count-total mining-camp < 3)
	(resource-found stone)
	;(dropsite-min-distance stone > 2)
	(dropsite-min-distance stone < 255)
=>
	(set-strategic-number sn-allow-adjacent-dropsites 0)
    (set-strategic-number sn-gold-dropsite-distance 200)
    (set-strategic-number sn-stone-dropsite-distance 6)
	(build mining-camp)
)


(defrule
	(current-age == imperial-age)
	(can-train scout-cavalry-line)
	(research-completed ri-light-cavalry)
	(food-amount > 130)
	(nor (research-available ri-hussar)
		 (research-available ri-winged-hussar))
	(unit-type-count scout-cavalry-line < 20)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age == imperial-age)
	(can-train scout-cavalry-line)
	(food-amount > 130)
	(or(research-available ri-hussar)
	(research-available ri-winged-hussar))
	(unit-type-count scout-cavalry-line < 5)
	(unit-type-count-total magyar-huszar-line < 5)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age == imperial-age)
	(can-train scout-cavalry-line)
	(food-amount > 130)
	(or (research-completed ri-hussar)
	(research-completed ri-winged-hussar))
	(unit-type-count scout-cavalry-line < 30)
	(unit-type-count-total magyar-huszar-line < 5)
=>
	(train scout-cavalry-line)
)

(defrule
	(current-age == imperial-age)
	(unit-type-count-total cavalry-class == 0)
	(military-population > 0)
	(can-research ri-light-cavalry)
=>
	(research ri-light-cavalry)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-hussar)
=>
	(research ri-hussar)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-winged-hussar)
=>
	(research ri-winged-hussar)
)

(defrule
	(unit-type-count-total cavalry-class > 4)
	(or (research-available ri-cavalier)
	(research-completed ri-cavalier))
	;(goal strategy-goal gl-archerrush)
	(can-research ri-iron-casting)
=>
	(research ri-iron-casting)
)

(defrule
	(unit-type-count-total cavalry-class > 4)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-blast-furnace)
=>
	(research ri-blast-furnace)
)

(defrule
	(unit-type-count-total infantry-class > 4)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-scale-mail)
=>
	(research ri-scale-mail)
)

(defrule
	(unit-type-count-total infantry-class > 5)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-chain-mail)
=>
	(research ri-chain-mail)
)

(defrule
	(unit-type-count-total infantry-class > 8)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-plate-mail)
=>
	(research ri-plate-mail)
)

(defrule
	(unit-type-count-total infantry-class > 4)
	;(goal strategy-goal gl-archerrush)
	(can-research-with-escrow ri-scale-mail)
	(goal gl-food-saving 20)
=>
	(release-escrow food)
	(set-escrow-percentage food 0)
	(research ri-scale-mail)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total infantry-class > 5)
	;(goal strategy-goal gl-archerrush)
	(can-research-with-escrow ri-chain-mail)
	(goal gl-food-saving 20)
	(goal gl-gold-saving 20)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-chain-mail)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total infantry-class > 8)
	;(goal strategy-goal gl-archerrush)
	(can-research-with-escrow ri-plate-mail)
	(goal gl-food-saving 20)
	(goal gl-gold-saving 20)
=>
	(release-escrow food)
	(release-escrow gold)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(research ri-plate-mail)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(unit-type-count-total infantry-class > 4)
	(research-completed ri-chain-mail)
	(current-age == castle-age)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-forging)
=>
	(research ri-forging)
)

(defrule
	(unit-type-count-total infantry-class > 4)
	(research-completed ri-plate-mail)
	(current-age >= imperial-age)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-forging)
=>
	(research ri-forging)
)

(defrule
	(unit-type-count-total infantry-class > 8)
	(research-completed ri-chain-mail)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-iron-casting)
=>
	(research ri-iron-casting)
)

(defrule
	(unit-type-count-total infantry-class > 8)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-blast-furnace)
=>
	(research ri-blast-furnace)
)
;endregion

;region Trading ====================================================

#load-if-not-defined UP-2-PLAYER-GAME

(defrule
	(current-age == imperial-age)
	(can-build market)
	(building-type-count-total market < 2)
=>
	(build market)
)

(defrule
    (can-build caravanserai)
    (unit-type-count-total trade-cart > 20)
    (building-type-count-total caravanserai < 5)
    (wood-amount > 400)
    (up-pending-objects c: caravanserai < 1)
=>
	(up-find-local c: trade-cart c: 40)
	;(up-get-point position-object temporary-point-x)
	(build caravanserai)
)

;todo: Market Placement on map edges in Team Games

#end-if

;endregion

;region STEPPE-LANCERS =============================================

(defrule
	(current-age == castle-age)
	(can-train steppe-lancer-line)
	(up-compare-goal gl-cavalry-archer-units < 5)
	(unit-type-count-total knight-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train steppe-lancer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train steppe-lancer-line)
	(research-completed ri-elite-steppe-lancer)
=>
	(train steppe-lancer-line)
)

(defrule
	(current-age == imperial-age)
	(research-available ri-elite-steppe-lancer)
	(can-train steppe-lancer-line)
	(unit-type-count steppe-lancer-line < 5)
=>
	(train steppe-lancer-line)
)

(defrule
	(current-age == imperial-age)
	(unit-type-count steppe-lancer-line >= 3)
	(can-research ri-elite-steppe-lancer)
=>
	(research ri-elite-steppe-lancer)
)

;endregion

;region ELEPHANT-ARCHERS ===========================================

(defrule
	(current-age == castle-age)
	(can-train elephant-archer-line)
	(unit-type-count archer-line < 5)
	(up-compare-goal gl-cavalry-archer-units < 5)
	(unit-type-count camel-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
=>
	(train elephant-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train elephant-archer-line)
	(research-completed ri-elite-elephant-archer)
	(unit-type-count archer-line < 5)
	(unit-type-count camel-line < 5)
=>
	(train elephant-archer-line)
)

(defrule
	(current-age == imperial-age)
	(research-available ri-elite-elephant-archer)
	(can-train elephant-archer-line)
	(unit-type-count elephant-archer-line < 5)
	(unit-type-count archer-line < 5)
	(unit-type-count camel-line < 5)
=>
	(train elephant-archer-line)
)

(defrule
	(current-age == imperial-age)
	(unit-type-count elephant-archer-line >= 3)
	(can-research ri-elite-elephant-archer)
=>
	(research ri-elite-elephant-archer)
)

;endregion

;region CAMELS =====================================================

(defrule
	(current-age == castle-age)
	(can-train camel-line)
	(unit-type-count-total camel-line < 6)
	(or (up-compare-goal gl-cavalry-archer-units >= 8)
	(unit-type-count-total knight-line >= 8))
	(or (up-compare-goal gl-cavalry-archer-units < 20)
	(unit-type-count-total knight-line < 20))
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or 
		(nor (players-unit-type-count focus-player spearman-line >= 15) 
		(or (players-unit-type-count focus-player monk >= 3) 
		(players-unit-type-count focus-player archer-line >= 8)))
		(or (unit-type-count-total skirmisher-line < 3)
		(unit-type-count-total monk < 2))
	)
=>
	(train camel-line)
)

(defrule
	(current-age == castle-age)
	(can-train camel-line)
	(or (up-compare-goal gl-cavalry-archer-units < 8)
	(unit-type-count-total knight-line < 8))
	(or (up-compare-goal gl-cavalry-archer-units >= 20)
	(unit-type-count-total knight-line >= 20))
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or 
		(nor (players-unit-type-count focus-player spearman-line >= 15) 
		(or (players-unit-type-count focus-player monk >= 3) 
		(players-unit-type-count focus-player archer-line >= 8)))
		(or (unit-type-count-total skirmisher-line >= 3)
		(unit-type-count-total monk >= 2))
	)
=>
	(train camel-line)
)

(defrule
	(current-age == imperial-age)
	(not (research-available ri-cavalier))
	(can-train camel-line)
	(research-available ri-heavy-camel)
	(unit-type-count camel-line < 5)
=>
	(train camel-line)
)

(defrule
	(current-age == imperial-age)
	(not (research-available ri-cavalier))
	(can-train camel-line)
	(research-completed ri-heavy-camel)
=>
	(train camel-line)
)

(defrule
	(current-age == imperial-age)
	(not (research-available ri-cavalier))
	(research-available ri-imperial-camel-rider)
	(can-train camel-line)
	(research-completed ri-heavy-camel)
	(unit-type-count camel-line < 5)
=>
	(train camel-line)
)

(defrule
	(current-age == imperial-age)
	(research-completed ri-imperial-camel-rider)
	(can-train camel-line)
=>
	(train camel-line)
)

(defrule
	(current-age == imperial-age)
	(not(research-available ri-cavalier))
	(can-research-with-escrow ri-heavy-camel)
	(goal gl-food-saving 16)
	(goal gl-gold-saving 16)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-heavy-camel)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(current-age == imperial-age)
	(not(research-available ri-cavalier))
	(can-research ri-heavy-camel)
=>
	(research ri-heavy-camel)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-imperial-camel-rider)
	(unit-type-count-total camel-line >= 5)
	(goal gl-food-saving 17)
	(goal gl-gold-saving 17)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-imperial-camel-rider)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(unit-type-count-total camel-line > 2)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-forging)
=>
	(research ri-forging)
)

(defrule
	(unit-type-count-total camel-line > 4)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-iron-casting)
=>
	(research ri-iron-casting)
)

(defrule
	(unit-type-count-total camel-line > 4)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-blast-furnace)
=>
	(research ri-blast-furnace)
)

;endregion

;region EAGLES =====================================================

(defrule
	(current-age == feudal-age)
	(up-research-status c: castle-age >= research-pending)
	(can-train eagle-warrior-line)
	(up-compare-goal gl-military-advantage < 25)
=>
	(train eagle-warrior-line)
)

(defrule
	(current-age == castle-age)
	(research-completed ri-eagle-warrior)
	(can-train eagle-warrior-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or 
		(nor (players-unit-type-count focus-player knight-line >= 6) 
		(or (players-unit-type-count focus-player battle-elephant-line >= 6) 
		(or (players-unit-type-count focus-player militiaman-line >= 6) 
		(players-unit-type-count focus-player archery-cannon-class >= 3))))
		(or (unit-type-count-total spearman-line >= 3)
		(or (unit-type-count-total archer-line >= 3)
		(unit-type-count-total monk >= 2)))
	)
=>
	(train eagle-warrior-line)
)

(defrule
	(current-age == castle-age)
	(can-train eagle-warrior-line)
	(not (research-completed ri-eagle-warrior))
	(unit-type-count eagle-warrior-line < 5)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(or 
		(nor (players-unit-type-count focus-player knight-line >= 6) 
		(or (players-unit-type-count focus-player battle-elephant-line >= 6) 
		(or (players-unit-type-count focus-player militiaman-line >= 6) 
		(players-unit-type-count focus-player archery-cannon-class >= 3))))
		(or (unit-type-count-total infantry-class >= 3)
		(or (unit-type-count-total archer-line >= 3)
		(unit-type-count-total monk >= 2)))
	)
=>
	(train eagle-warrior-line)
)

(defrule
	(current-age == imperial-age)
	(can-train eagle-warrior-line)
	(research-completed ri-elite-eagle-warrior)
=>
	(train eagle-warrior-line)
)

(defrule
	(current-age == imperial-age)
	(can-train eagle-warrior-line)
	(not (research-completed ri-elite-eagle-warrior))
	(unit-type-count eagle-warrior-line < 5)
=>
	(train eagle-warrior-line)
)

(defrule
	(current-age >= castle-age)
	(can-research-with-escrow ri-eagle-warrior)
	(unit-type-count-total eagle-warrior-line >= 3)
	(goal gl-food-saving 24)
	(goal gl-gold-saving 24)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-eagle-warrior)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == castle-age)
	(can-research ri-eagle-warrior)
	(unit-type-count-total eagle-warrior-line >= 3)
=>
	(research ri-eagle-warrior)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-elite-eagle-warrior)
	(goal gl-food-saving 24)
	(goal gl-gold-saving 24)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-elite-eagle-warrior)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-food-saving 0)
	(set-goal gl-gold-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-elite-eagle-warrior)
	(unit-type-count-total eagle-warrior-line >= 3)
=>
	(research ri-elite-eagle-warrior)
)

(defrule
	(current-age == castle-age)
	(goal meso-civ YES)
	(can-build barracks)
	(building-type-count-total barracks < 4)
	(building-type-count-total town-center >= 1)
	(not (town-under-attack))
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 14")
)

(defrule
	(current-age == castle-age)
	(goal meso-civ YES)
	(can-build barracks)
	(building-type-count-total barracks < 4)
	(building-type-count-total town-center >= 1)
	(town-under-attack)
=>
	(build barracks)
)

(defrule
	(current-age == imperial-age)
	(goal meso-civ YES)
	(can-build barracks)
	(building-type-count-total barracks < 8)
	(building-type-count-total town-center >= 1)
=>
	;(set-strategic-number sn-placement-zone-size 0)
	(up-set-placement-data my-player-number -1 c: 14)
    (up-build place-control 0 c: barracks)
	;(chat-to-player my-player-number "Barracks 15")
)

(defrule
	(unit-type-count-total infantry-class >= 5)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-squires)
=>
	(research ri-squires)
)

(defrule
	(unit-type-count-total infantry-class >= 5)
	;(goal strategy-goal gl-archerrush)
	(can-research ri-arson)
=>
	(research ri-arson)
)

;endregion

;region CAV ARCHERS ================================================

(defrule
	(current-age == imperial-age)	
	(unit-type-count-total cavalry-archer-line >= 5)
	(can-research-with-escrow ri-heavy-cavalry-archer)
	(goal gl-food-saving 15)
	(goal gl-gold-saving 15)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-heavy-cavalry-archer)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-parthian-tactics)
	(unit-type-count-total cavalry-archer-line > 0)
=>
	(research ri-parthian-tactics)
)

#load-if-defined MONGOL-CIV


(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total mangudai-line < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
	(unit-type-count mangudai-line < 5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-research ri-parthian-tactics)
	(unit-type-count-total mangudai-line > 0)
=>
	(research ri-parthian-tactics)
)

#end-if

#load-if-defined BULGARIANS-CIV

(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)


#end-if

#load-if-defined CUMANS-CIV


(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
	(unit-type-count kipchak-set == 0)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-research-with-escrow ri-heavy-cavalry-archer)
	(unit-type-count-total cavalry-archer-line >= 5)
	(goal gl-food-saving 15)
	(goal gl-gold-saving 15)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-heavy-cavalry-archer)
	(set-escrow-percentage food 0)
	(set-escrow-percentage gold 0)
	(set-goal gl-gold-saving 0)
	(set-goal gl-food-saving 0)
)

#end-if

#load-if-defined HUN-CIV


(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)

#end-if

#load-if-defined JAPANESE-CIV

(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)



#end-if

#load-if-defined MAGYAR-CIV

(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)



#end-if

#load-if-defined SARACEN-CIV


(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)


#end-if

#load-if-defined TATAR-CIV

(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)


#end-if

#load-if-defined TURK-CIV

(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)

#end-if

#load-if-defined VIETNAMESE-CIV


(defrule
	(current-age == castle-age)
	(can-train cavalry-archer-line)
	(or (civilian-population g:< c-villager-goal)
	(up-research-status c: imperial-age == research-pending))
	(unit-type-count-total archer-line < 1)
	(unit-type-count-total kipchak-set < 1)
	(or (unit-type-count-total knight-line < 3)
	(unit-type-count-total knight-line >= 20))
	(or 
		(nor (players-unit-type-count focus-player skirmisher-line >= 15) 
		(or (players-unit-type-count focus-player scorpion-line >= 3)
		(or (players-unit-type-count focus-player elephant-archer-line >= 4) 		
		(players-unit-type-count focus-player eagle-warrior-line >= 8))))
		(or (unit-type-count-total cavalry-class >= 3)
		(unit-type-count-total siege-weapon-class >= 2))
	)
	(up-compare-goal gl-military-advantage >= -5)
=>
	(train cavalry-archer-line)
)

(defrule
	(current-age == imperial-age)
	(can-train cavalry-archer-line)
	(research-completed ri-heavy-cavalry-archer)
	(unit-type-count archer-line < 5)
=>
	(train cavalry-archer-line)
)

#end-if

;endregion

;region MILITIA-LINE ===============================================

(defrule
	(research-completed ri-champion)
	(building-type-count-total barracks < 6)
=>
	(up-set-placement-data my-player-number -1 c: 19)
	(build barracks)
)

(defrule
	(civ-selected bulgarians)
	(research-completed ri-two-handed-swordsman)
	(unit-type-count-total militiaman-line >= 10)
	(building-type-count-total barracks < 6)
=>
	(up-set-placement-data my-player-number -1 c: 19)
	(build barracks)
)

#load-if-defined AZTEC-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined BRITON-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined BULGARIANS-CIV

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined BURMESE-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined CELTIC-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)
(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if


#load-if-defined DRAVIDIANS-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined FRANKISH-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined BYZANTINE-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined GOTHIC-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
	(players-unit-type-count focus-player militiaman-line >= 6)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
	(players-unit-type-count focus-player militiaman-line >= 6)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
	(players-unit-type-count focus-player militiaman-line >= 6)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
	(players-unit-type-count focus-player militiaman-line >= 6)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
	(players-unit-type-count focus-player militiaman-line >= 6)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
	(players-unit-type-count focus-player militiaman-line >= 6)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined JAPANESE-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)
(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined MALIAN-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined SLAVIC-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined SPANISH-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined TEUTONIC-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

#load-if-defined VIKING-CIV
(defrule
	(current-age >= imperial-age)
	(can-research ri-man-at-arms)
=>
	(research ri-man-at-arms)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-long-swordsman)
=>
	(research ri-long-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-two-handed-swordsman)
=>
	(research ri-two-handed-swordsman)
)

(defrule
	(current-age >= imperial-age)
	(can-research ri-champion)
=>
	(research ri-champion)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-two-handed-swordsman)
	(can-research ri-supplies)
=>
	(research ri-supplies)
)

(defrule
	(current-age >= imperial-age)
	(research-completed ri-champion)
	(can-train militiaman-line)
=>
	(train militiaman-line)
)

#end-if

;endregion

;region Testing Area ===============================================

(defconst gl-counter 1)
(defconst game-time 0)

(defrule 
	(true)
=>
	(up-get-fact game-time 0 gl-counter)
	;(up-chat-data-to-player my-player-number "Time: %d" g: gl-counter)
)

;endregion

;region Garrison Military Units (!) ================================

(defrule
	(not (town-under-attack))
	(current-age == dark-age)
	(military-population < 4)
=>
	(up-gather-inside c: barracks c: 1)
	; (up-gather-inside c: archery-range c: 1)
	; (up-gather-inside c: stable c: 1)
	; (up-gather-inside c: siege-workshop c: 1)
	; (up-gather-inside c: castle c: 1)
)	

(defrule
	(not (town-under-attack))
	(current-age == feudal-age)
	(military-population < 4)
	(not (goal strategy-goal sg-towerrush))
=>
	(up-gather-inside c: barracks c: 1)
	(up-gather-inside c: archery-range c: 1)
	(up-gather-inside c: stable c: 1)
	(up-gather-inside c: siege-workshop c: 1)
	;(up-gather-inside c: donjon c: 1)
	; (up-gather-inside c: castle c: 1)
)	

(defrule
	(not (town-under-attack))
	(current-age == castle-age)
	(or (military-population < 12)
	(and (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18)))
=>
	(up-gather-inside c: barracks c: 1)
	(up-gather-inside c: archery-range c: 1)
	(up-gather-inside c: stable c: 1)
	(up-gather-inside c: siege-workshop c: 1)
	;(up-gather-inside c: castle c: 1)
	;(up-gather-inside c: donjon c: 1)
	;(up-gather-inside c: krepost c: 1)
)	

; (defrule
	; (not (town-under-attack))
	; (current-age == imperial-age)
	; (military-population < 25)
; =>
	; (up-gather-inside c: barracks c: 1)
	; (up-gather-inside c: archery-range c: 1)
	; (up-gather-inside c: stable c: 1)
	; (up-gather-inside c: siege-workshop c: 1)
; )	

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population < 4)
	(military-population g:< enemy-military-pop))
	(players-unit-type-count focus-player scout-cavalry-line < 2)
=>
	(up-gather-inside c: barracks c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Kasernen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population >= 4)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < feudal-age)))
	(players-unit-type-count focus-player scout-cavalry-line >= 2)
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
	;(disable-self)
)

(defrule
	(current-age == feudal-age)
	(building-type-count-total barracks > 0)
	(unit-type-count-total scout-cavalry-line < 1)
	(unit-type-count-total spearman-line == 1)
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
	;(disable-self)
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population >= 6)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < feudal-age)))
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
)

(defrule
	(current-age == feudal-age)
	(not (town-under-attack))
	(building-type-count-total barracks > 0)
	(military-population >= 4)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total archery-range > 0)
	(or (military-population < 6)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: archery-range c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Schiessanlagen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total archery-range > 0)
	(or (military-population >= 6)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < feudal-age)))
=>
	(up-ungarrison c: archery-range)
	(up-gather-inside c: archery-range c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Schiessanlagen.")
)

(defrule
	(current-age == feudal-age)
	(not (town-under-attack))
	(building-type-count-total archery-range > 0)
	(military-population >= 4)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(up-ungarrison c: archery-range)
	(up-gather-inside c: archery-range c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Schiessanlagen.")
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total stable > 0)
	(or (military-population < 6)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: stable c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Staellen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(building-type-count-total stable > 0)
	(or (military-population >= 6)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < feudal-age)))
=>
	(up-ungarrison c: stable)
	(up-gather-inside c: stable c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Staellen.")
)

(defrule
	(current-age == feudal-age)
	(not (town-under-attack))
	(building-type-count-total stable > 0)
	(military-population >= 4)
	(up-compare-goal gl-military-advantage >= -4)
=>
	(up-ungarrison c: stable)
	(up-gather-inside c: stable c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Staellen.")
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population < 12)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: barracks c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Kasernen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population >= 12)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < castle-age)))
	(military-population >= 6)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
)

(defrule
	(current-age == castle-age)
	(not (town-under-attack))
	(building-type-count-total barracks > 0)
	(military-population >= 12)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total archery-range > 0)
	(or (military-population < 12)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: archery-range c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Schiessanlagen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total archery-range > 0)
	(or (military-population >= 12)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < castle-age)))
	(military-population >= 6)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: archery-range)
	(up-gather-inside c: archery-range c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Schiessanlagen.")
)

(defrule
	(current-age == castle-age)
	(not (town-under-attack))
	(building-type-count-total archery-range > 0)
	(military-population >= 12)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: archery-range)
	(up-gather-inside c: archery-range c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Schiessanlagen.")
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total stable > 0)
	(or (military-population < 12)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: stable c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Staellen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total stable > 0)
	(or (military-population >= 12)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < castle-age)))
	(military-population >= 6)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: stable)
	(up-gather-inside c: stable c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Staellen.")
)

(defrule
	(current-age == castle-age)
	(not (town-under-attack))
	(building-type-count-total stable > 0)
	(military-population >= 12)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: stable)
	(up-gather-inside c: stable c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Staellen.")
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total siege-workshop > 0)
	(or (military-population < 12)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: siege-workshop c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Waffenschmiede, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == castle-age)
	(town-under-attack)
	(building-type-count-total siege-workshop > 0)
	(or (military-population >= 12)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < castle-age)))
	(military-population >= 6)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: siege-workshop)
	(up-gather-inside c: siege-workshop c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Waffenschmiede.")
)

(defrule
	(current-age == castle-age)
	(not (town-under-attack))
	(building-type-count-total siege-workshop > 0)
	(military-population >= 12)
	(or (up-compare-goal gl-military-advantage < -8)
	(military-population >= 18))
=>
	(up-ungarrison c: siege-workshop)
	(up-gather-inside c: siege-workshop c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Waffenschmiede.")
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population < 15)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: barracks c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Kasernen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total barracks > 0)
	(or (military-population >= 15)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < imperial-age)))
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
)

(defrule
	(current-age == imperial-age)
	(not (town-under-attack))
	(building-type-count-total barracks > 0)
	(military-population >= 15)
=>
	(up-ungarrison c: barracks)
	(up-gather-inside c: barracks c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Kasernen.")
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total archery-range > 0)
	(or (military-population < 15)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: archery-range c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Schiessanlagen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total archery-range > 0)
	(or (military-population >= 15)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < imperial-age)))
=>
	(up-ungarrison c: archery-range)
	(up-gather-inside c: archery-range c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Schiessanlagen.")
)

(defrule
	(current-age == imperial-age)
	(not(town-under-attack))
	(building-type-count-total archery-range > 0)
	(military-population >= 15)
=>
	(up-ungarrison c: archery-range)
	(up-gather-inside c: archery-range c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Schiessanlagen.")
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total stable > 0)
	(or (military-population < 15)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: stable c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Staellen, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total stable > 0)
	(or (military-population >= 15)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < imperial-age)))
=>
	(up-ungarrison c: stable)
	(up-gather-inside c: stable c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Staellen.")
)

(defrule
	(current-age == imperial-age)
	(not(town-under-attack))
	(building-type-count-total stable > 0)
	(military-population >= 15)
=>
	(up-ungarrison c: stable)
	(up-gather-inside c: stable c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Staellen.")
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total siege-workshop > 0)
	(or (military-population < 15)
	(military-population g:< enemy-military-pop))
=>
	(up-gather-inside c: siege-workshop c: 1)
	;(chat-to-player my-player-number "Warte mit Truppen in Waffenschmieden, bis genug Truppen vorhanden sind.")
	;(disable-self)
)

(defrule
	(current-age == imperial-age)
	(town-under-attack)
	(building-type-count-total siege-workshop > 0)
	(or (military-population >= 15)
	(or (military-population g:>= enemy-military-pop)
	(players-current-age focus-player < imperial-age)))
=>
	(up-ungarrison c: siege-workshop)
	(up-gather-inside c: siege-workshop c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Waffenschmieden.")
)

(defrule
	(current-age == imperial-age)
	(not (town-under-attack))
	(building-type-count-total siege-workshop > 0)
	(military-population >= 15)
=>
	(up-ungarrison c: siege-workshop)
	(up-gather-inside c: siege-workshop c: 0)
	;(chat-to-player my-player-number "Schicke Truppen aus den Waffenschmieden.")
)


;endregion

;region ATTACKING RAMS WITH VILLAGERS ==============================

(defrule
	(true)
=>
	(set-goal gl-attack-ram 0)
	(disable-self)
)

; (defrule
    ; (stance-toward focus-player enemy)
; =>
    ; (up-full-reset-search)
    ; (up-set-target-point gl-starting-tc-x)
    ; (up-filter-distance c: -1 c: 9) 
	; (up-find-remote c: all-units-class c: 1)
	; (up-find-remote c: battering-ram-line c: 1)
	; (up-remove-objects search-remote object-data-type == -291) ;battering-ram-line
	; (up-get-search-state gl-local-total)
	; (up-set-target-object search-remote c: 0)
	; (chat-to-player my-player-number "Enemy Units near ram: cant attack the ram")
	; ;(up-chat-data-to-player my-player-number "Number enemy units: %d " g: gl-remote-total)
	; (up-jump-rule 2)
; )

(defrule
	(goal gl-attack-ram 0)
    (stance-toward focus-player enemy)
=>
    (up-full-reset-search)
    (up-set-target-point gl-starting-tc-x)
    (up-filter-distance c: -1 c: 8) 
    (up-find-local c: villager-class c: 15)
    (up-find-remote c: battering-ram-line c: 1)
	(up-set-target-object search-remote c: 0)
	(set-goal gl-attack-ram 1)
	;(up-get-search-state gl-local-total)
	;(up-chat-data-to-player my-player-number "Number enemy rams: %d " g: gl-remote-total)
)

(defrule
	(goal gl-attack-ram 1)
	(up-set-target-object search-remote c: 0)
=>
	;(up-ungarrison c: town-center)
	;(up-target-objects 0 action-ungarrison -1 -1)
	(up-target-objects 0 action-default -1 -1)
	;(chat-to-player my-player-number "Enemy ram detected: sending villagers to attack")
)	

(defrule
	(goal gl-attack-ram 1)
	(not (up-set-target-object search-remote c: 0))
=>
	(set-goal gl-attack-ram 0)
)	

;endregion

;region Send Resources =============================================

#load-if-defined UP-ALLY-IN-GAME

(defrule
	(can-research ri-coinage)
	(unit-type-count-total villager >= 40)
=>
	(research ri-coinage)
)

(defrule
	(can-research ri-banking)
=>
	(research ri-banking)
)

(defrule
	(can-research ri-guilds)
	(unit-type-count-total villager >= 40)
=>
	(research ri-guilds)
)

#end-if

(defrule
	(current-age == feudal-age)
	(research-completed ri-coinage)
	(food-amount > 150)
	(taunt-detected any-human-ally 38)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age >= research-pending))
=>
	(tribute-to-player this-any-ally food 100)
	(chat-local-to-self "Tribute 100 food to an ally."))

(defrule
	(current-age == feudal-age)
(or	(building-type-count town-center > 0)
	(wood-amount >= 375))
	(research-completed ri-coinage)
	(wood-amount > 200)
	(taunt-detected any-human-ally 38)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age >= research-pending))
=>
	(tribute-to-player this-any-ally wood 100)
	(chat-local-to-self "Tribute 100 wood to an ally."))

(defrule
	(current-age == feudal-age)
	(research-completed ri-coinage)
	(gold-amount > 150)
	(taunt-detected any-human-ally 38)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age >= research-pending))
=>
	(tribute-to-player this-any-ally gold 100)
	(chat-local-to-self "Tribute 100 gold to an ally."))

(defrule
	(current-age == feudal-age)
	(research-completed ri-coinage)
	(stone-amount > 220)
	(taunt-detected any-human-ally 38)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age >= research-pending))
=>
	(tribute-to-player this-any-ally stone 100)
	(chat-local-to-self "Tribute 100 stone to an ally.")
)
	
(defrule
	(taunt-detected any-ally 3)
	(food-amount >= 1300)
	(food-amount < 4000)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 3)
	(tribute-to-player this-any-ally food 500)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "Tribute 500 food to an ally."))

(defrule
	(taunt-detected any-ally 3)
	(food-amount >= 4000)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 3)
	(tribute-to-player this-any-ally food 1000)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "Tribute 1000 food to an ally."))

(defrule
	(taunt-detected any-ally 3)
	(food-amount > 300)
	(food-amount < 1300)
	(research-completed ri-banking)
	(building-type-count market > 0)
	(or (civilian-population g:< f-villager-goal)
	(up-research-status c: castle-age >= research-pending))
=>
	(acknowledge-taunt this-any-ally 3)
	(tribute-to-player this-any-ally food 100)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "Tribute 100 food to an ally."))

(defrule
	(taunt-detected any-ally 4)
	(wood-amount >= 1300)
	(wood-amount < 3500)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 4)
	(tribute-to-player this-any-ally wood 500)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "Tribute 500 wood to an ally."))

(defrule
	(taunt-detected any-ally 4)
	(wood-amount >= 3500)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 4)
	(tribute-to-player this-any-ally wood 1000)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "Tribute 1000 wood to an ally."))

(defrule
	(taunt-detected any-ally 4)
	(wood-amount >= 300)
	(wood-amount < 1300)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 4)
	(tribute-to-player this-any-ally wood 100)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "Tribute 100 wood to an ally."))

(defrule
	(taunt-detected any-ally 5)
	(gold-amount >= 1300)
	(gold-amount < 3500)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 5)
	(tribute-to-player this-any-ally gold 500)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "Tribute 500 gold to an ally."))

(defrule
	(taunt-detected any-ally 5)
	(gold-amount >= 3500)
	(research-completed ri-banking)
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 5)
	(tribute-to-player this-any-ally gold 1000)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "Tribute 1000 gold to an ally."))

(defrule
	(taunt-detected any-ally 5)
	(gold-amount > 300)
	(gold-amount < 1300)
(or	(research-completed ri-banking)
	(and (gold-amount > 800)
	(gold-amount < 1300)))
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 5)
	(tribute-to-player this-any-ally gold 100)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "Tribute 100 gold to an ally."))

(defrule
	(taunt-detected any-ally 6)
	(building-type-count-total town-center > 0)
(or	(stone-amount > 750)
(or	(building-type-count-total castle >= 4)
	(and	(players-building-type-count any-ally town-center == 0)
		(stone-amount >= 130))))
	(building-type-count market > 0)
=>
	(acknowledge-taunt this-any-ally 6)
	(tribute-to-player this-any-ally stone 100)
	(chat-to-player-using-id this-any-ally 22079)
	(chat-local-to-self "Tribute 100 stone to an ally."))

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(food-amount > 300)
	(food-amount < 1300)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally food 100)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(food-amount >= 1300)
	(food-amount < 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally food 500)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(food-amount >= 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally food 1000)
	(chat-to-player-using-id this-any-ally 22077)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(wood-amount > 300)
	(wood-amount < 1300)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally wood 100)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(wood-amount >= 1300)
	(wood-amount < 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally wood 500)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(wood-amount >= 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally wood 1000)
	(chat-to-player-using-id this-any-ally 22076)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(gold-amount > 300)
	(gold-amount < 1300)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally gold 100)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(gold-amount >= 1300)
	(gold-amount < 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally gold 500)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(gold-amount >= 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally gold 1000)
	(chat-to-player-using-id this-any-ally 22078)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(stone-amount > 300)
	(stone-amount < 1300)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally stone 100)
	(chat-to-player-using-id this-any-ally 22079)
	(chat-local-to-self "Tribute extra resources to an ally.")
)

(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(stone-amount >= 1300)
	(stone-amount < 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally stone 500)
	(chat-to-player-using-id this-any-ally 22079)
	(chat-local-to-self "Tribute extra resources to an ally.")
)
(defrule
	(taunt-detected any-ally 38)
	(building-type-count-total town-center > 0)
	(stone-amount >= 3500)
	(building-type-count market > 0)
=>
	(tribute-to-player this-any-ally stone 1000)
	(chat-to-player-using-id this-any-ally 22079)
	(chat-local-to-self "Tribute extra resources to an ally.")
)


(defrule
(or	(taunt-detected any-ally 3)
(or	(taunt-detected any-ally 4)
(or	(taunt-detected any-ally 5)
(or (taunt-detected any-ally 6)
	(taunt-detected any-ally 38)))))
	(building-type-count market <= 0)
=>
	(chat-to-player-using-id this-any-ally 22164)
	(acknowledge-taunt every-ally 3)
	(acknowledge-taunt every-ally 4)
	(acknowledge-taunt every-ally 5)
	(acknowledge-taunt every-ally 6)
	(acknowledge-taunt every-ally 38)
)
(defrule
(or	(taunt-detected any-ally 3)
(or	(taunt-detected any-ally 4)
(or	(taunt-detected any-ally 5)
(or	(taunt-detected any-ally 6)
	(taunt-detected any-ally 38)))))
=>
	(chat-to-allies-using-id 22163); "39 I regret, sire, that I have nothing to spare."
;	(chat-to-allies-using-id 22118); "Alas, I cannot help that at this time."
;hm	(chat-to-player-using-id this-any-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 3)
	(acknowledge-taunt every-ally 4)
	(acknowledge-taunt every-ally 5)
	(acknowledge-taunt every-ally 6)
	(acknowledge-taunt every-ally 38)
)

(defrule
	(true)
=>
	(enable-timer 10 1)
	(enable-timer 11 1)
	(enable-timer 17 1)
	(disable-self)
)

(defrule
	(current-age >= castle-age)
	(food-amount < 100)
	(wood-amount < 100)
	(gold-amount < 100)
	(timer-triggered 10)
=>
	(disable-timer 10)
	(chat-to-allies "38")
	(enable-timer 10 60)
)

(defrule
	(current-age >= castle-age)
	(food-amount < 50)
	(timer-triggered 10)
=>
	(disable-timer 10)
	(chat-to-allies "3")
	(enable-timer 10 60)
)

(defrule
	(current-age >= castle-age)
	(wood-amount < 50)
	(timer-triggered 10)
=>
	(disable-timer 10)
	(chat-to-allies "4")
	(enable-timer 10 60)
)

(defrule
	(current-age >= castle-age)
	(gold-amount < 50)
	(timer-triggered 10)
=>
	(disable-timer 10)
	(chat-to-allies "5")
	(enable-timer 10 60)
)

(defrule
	(current-age >= feudal-age)
	(building-type-count-total town-center == 0)
	(stone-amount < 100)
	(timer-triggered 10)
=>
	(disable-timer 10)
	(chat-to-allies "6")
	(enable-timer 10 60)
)

;endregion

;region Requesting Help when under attack and sending reinforcements

#load-if-defined UP-ALLY-IN-GAME

(defrule
	(true)
=>
	(set-goal gl-helping-ally 0)
	(disable-self)
)
 
;requesting help 
 
(defrule
	(current-age == feudal-age)
	(timer-triggered 11)
	(town-under-attack)
	(up-enemy-units-in-town >= 8)
	(military-population < 5)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-filter-distance c: -1 s: sn-maximum-town-size)
	(up-find-remote c: all-units-class c: 1)
	(up-find-remote c: tower-class c: 1)
)	

(defrule
	(current-age == feudal-age)
	(timer-triggered 11)
	(town-under-attack)
	(up-enemy-units-in-town >= 8)
	(military-population < 5)
	(up-set-target-object search-remote c: 0)
=>
	(disable-timer 11)
	(up-get-point position-object enemy-units-point-x)
	(up-send-flare enemy-units-point-x)
	(chat-to-allies "48")
	(enable-timer 11 120)
)

(defrule
	(current-age >= castle-age)
	(timer-triggered 11)
	(town-under-attack)
	(up-enemy-units-in-town >= 12)
	(military-population < 7)
=>
	(up-full-reset-search)
	(up-set-target-point gl-starting-tc-x)
	(up-filter-distance c: -1 s: sn-maximum-town-size)
	(up-find-remote c: all-units-class c: 1)
)

(defrule
	(current-age >= castle-age)
	(timer-triggered 11)
	(town-under-attack)
	(up-enemy-units-in-town >= 12)
	(military-population < 7)
	(up-set-target-object search-remote c: 0)
=>
	(disable-timer 11)
	(up-get-point position-object enemy-units-point-x)
	(up-send-flare enemy-units-point-x)
	(chat-to-allies "48")
	(enable-timer 11 120)
)

;sending units to ally to help

(defrule
	(taunt-detected any-ally 48)
	(military-population >= 10)
	(not(town-under-attack))
	(timer-triggered 17)
	(unit-type-count flare > 0)
=>
	(acknowledge-taunt this-any-ally 48)
	(up-find-flare gl-point-x) ;find flare and save it into gl-point-x
	(set-goal gl-helping-ally 1)
	;(up-send-flare gl-point-x) ;test
	(chat-to-player my-player-number "Ally is in danger: Checking if I can help")
)

(defrule
	(goal gl-helping-ally 1) ;I have more than 10 units, I'm not under attack and I'm not currently helping another ally
=>
	(up-full-reset-search)
	(up-set-target-point gl-point-x) ;focus gl-point-x
	(up-filter-distance c: -1 c: 60)  ;select units within 60 tiles
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude siege-weapon-class -1 -1 -1)
	(up-filter-exclude armored-elephant-line -1 -1 -1)
	(up-find-local c: all-units-class c: 30)
	(chat-to-player my-player-number "Checking if my units are close enough to help.")
)

(defrule
	(goal gl-helping-ally 1)
	(timer-triggered 17)
	(up-set-target-object search-local c: 0) ;did we find military units within 60 tiles to help?
=>
	(disable-timer 17)
	(set-goal gl-helping-ally 0)
	(up-target-point gl-point-x action-attack-move -1 -1) ;sending units to gl-point-x
	(chat-to-allies "Units are on the way")
	(enable-timer 17 60)
)

(defrule
	(goal gl-helping-ally 1)
	(not (up-set-target-object search-local c: 0))
=>
	(set-goal gl-helping-ally 0)
)

(defrule
	(taunt-detected any-ally 48)
	(or (military-population < 10)
	(or (town-under-attack)
	(not (up-set-target-object search-local c: 0))))
=>
	(acknowledge-taunt this-any-ally 48)
	(chat-to-allies "I can't help you at the moment, sorry.")
)

#end-if
	

;endregion

;region Garrison Villagers in TC (Thanks to FireBall37's idea on this!) =

(defrule    ;only try to shoot units before imperial-age
    (players-current-age every-enemy > castle-age)
	(goal gl-attack-ram 1) ; don't garrison if enemy rams are nearby
=>
    (up-jump-rule 12)    ;skips the next 7 defrules
)

;SEARCH
(defrule    ;setup
    (true)
=>
    (set-strategic-number sn-focus-player-number 1)    ;always start with player 1
    (set-goal gl-set-tc-garrison 0)
)

(defrule
	(building-type-count town-center >= 1)
=>
	(up-full-reset-search)
	(up-find-local c: town-center c: 10)
	(up-get-search-state gl-local-total)
	(up-modify-goal gl-selfs g:= gl-local-total)
	(up-modify-goal gl-selfs c:- 1)
	;(up-chat-data-to-self "Nr tcs: %d" g: gl-tcs)
	;(up-chat-data-to-self "Current Focus TC: %d" g: gl-self-loop-counter)
)

(defrule
	(building-type-count town-center >= 1)
	(up-set-target-object search-local g: gl-self-loop-counter) ;enemy tc was found?
=>
	(up-get-point position-object gl-self-point-x) ;get position of first tc in the list
	(up-set-target-point gl-self-point-x) 
	;(up-get-search-state gl-local-total)
)

(defrule
	(building-type-count town-center >= 1)
    (stance-toward focus-player enemy)    ;we are looking for enemy units only
	(or (dropsite-min-distance live-boar > 8)
	(dropsite-min-distance live-boar <= -1))
=>
    (up-full-reset-search)
	(up-set-target-point gl-self-point-x)
    (up-filter-distance c: -1 c: gl-tc-search-distance)    ;not too far from the tc 
    (up-find-remote c: all-units-class c: 1)
	(up-remove-objects search-remote object-data-class == building-class)
	(up-remove-objects search-remote object-data-player == 0) ;gaia objects, like boars
    (up-get-search-state gl-local-total)    ;count how many were found
    (up-modify-goal gl-set-tc-garrison g:= gl-remote-total)    ;save the number in a goal
)

(defrule    ;repeat the search if no enemy units were found
    (up-compare-goal gl-set-tc-garrison < 1)    ;no units found
    (player-valid focus-player)    ;don't search if focus-player isn't in the game
=>
    (up-modify-sn sn-focus-player-number c:+ 1)    ;set to the next-highest player
    (up-jump-rule -2)    ;jump back to the searching rule
)

(defrule    ;if units found nearby, start the garrison process
    (goal gl-garrison-tc -1)
    (up-compare-goal gl-set-tc-garrison >= 1)
=>    
    (chat-to-player my-player-number "Enemy units near tc!")
    (set-goal gl-garrison-tc 0)
)

(defrule    ;search for closest vills to the tc
    (goal gl-garrison-tc 0)
=>
    (up-full-reset-search)
    (up-set-target-point gl-self-point-x)
    (up-filter-distance c: -1 c: 7)    ;only villagers nearby
    (up-find-local c: villager-class c: 15)
    (up-clean-search search-local object-data-distance search-order-desc)    ;order by distance to get closest
    (up-remove-objects search-local -1 g:> gl-garrison-count)
    (up-get-search-state gl-local-total)
)

(defrule    ;garrison the villagers found above if there were some
    (goal gl-garrison-tc 0)
    (up-compare-goal gl-local-total g:>= gl-garrison-count)
=>
    (set-strategic-number sn-focus-player-number my-player-number)
    (up-find-remote c: town-center c: 1)    ;put in the remote list for up-target-objects command
    (up-target-objects 0 action-garrison -1 -1)    ;garrison command
    (up-chat-data-to-player my-player-number "Garrisoning %d vills" g: gl-local-total)
    (set-goal gl-garrison-tc 1)
)


;UNGARRISON

; (defrule
    ; (up-compare-goal gl-garrison-tc != -1)
    ; (up-compare-goal gl-set-tc-garrison < 1)    ;search at the beginning didn't find anything
; =>
    ; (up-ungarrison c: town-center)
    ; (chat-to-player my-player-number "Threat is over, release vills")
    ; (set-goal gl-garrison-tc -1)    ;reset for next time
; )

(defrule
    (up-compare-goal gl-garrison-tc != -1)
    (up-compare-goal gl-set-tc-garrison < 1)    ;search at the beginning didn't find anything
=>
	(up-full-reset-search)
	(up-set-target-point gl-self-point-x)
	(up-filter-distance c: -1 c: 2)
	(up-find-local c: town-center c: 1)
)

(defrule
	(up-compare-goal gl-garrison-tc != -1)
    (up-compare-goal gl-set-tc-garrison < 1) 	
	(up-set-target-object search-local c: 0)
	(up-object-data object-data-garrison-count > 0)
=>
	(up-target-point gl-self-point-x action-unload -1 -1)
	(chat-to-player my-player-number "Threat is over, release vills")
	(set-goal gl-garrison-tc -1)
)

(defrule
	(building-type-count town-center >= 1)
	(up-compare-goal gl-self-loop-counter g:>= gl-selfs)
=>
	(set-goal gl-self-loop-counter 0)
	;(up-chat-data-to-self "Focus TC: %d" g: gl-self-loop-counter)
	(up-jump-rule 1) ;end loop
)

(defrule
	(building-type-count town-center >= 1)
	(up-point-contains gl-self-point-x c: town-center)
	(up-compare-goal gl-self-loop-counter g:< gl-selfs)
=>
	(up-modify-goal gl-self-loop-counter c:+ 1) ;go to next list-entry
	;(up-chat-data-to-self "Focus TC: %d" g: gl-self-loop-counter)
)

;endregion

;region Eco-Management =============================================

#load-if-defined UP-NOMAD-STYLE
#load-if-not-defined CHINESE-CIV

(defrule
	(civilian-population <= 4)
=>
	(set-strategic-number sn-wood-gatherer-percentage 100)
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 5)
=>
	(set-strategic-number sn-wood-gatherer-percentage 80)
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 6)
=>
	(set-strategic-number sn-wood-gatherer-percentage 67)
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if

#load-if-defined CHINESE-CIV

(defrule
	(civilian-population <= 6)
=>
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-food-gatherer-percentage 100)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#end-if
#end-if

#load-if-defined UP-SCENARIO-GAME
#load-if-not-defined CHINESE-CIV

(defrule
	(civilian-population <= 4)
=>
	(set-strategic-number sn-wood-gatherer-percentage 100)
	(set-strategic-number sn-food-gatherer-percentage 0)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 5)
=>
	(set-strategic-number sn-wood-gatherer-percentage 80)
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 6)
=>
	(set-strategic-number sn-wood-gatherer-percentage 67)
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
#end-if

#load-if-defined CHINESE-CIV

(defrule
	(civilian-population <= 6)
=>
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-food-gatherer-percentage 100)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#end-if
#end-if

#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-SCENARIO-GAME
(defrule
	(civilian-population <= 6)
=>
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-food-gatherer-percentage 100)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#end-if
#end-if

(defrule
	(civilian-population == 7)
=>
	(set-strategic-number sn-wood-gatherer-percentage 14)
	(set-strategic-number sn-food-gatherer-percentage 86)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 8)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-towerrush)
=>
	(up-jump-rule 12)
)

(defrule
	(civilian-population == 9)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
=>
	(up-jump-rule 10)
)

(defrule
	(civilian-population == 10)
=>
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 11)
	(current-age == dark-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 12)
	(current-age == dark-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 13)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 14)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-food-gatherer-percentage 71)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
=>
	(up-jump-rule 4)
)

(defrule
	(civilian-population == 15)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-food-gatherer-percentage 71)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-drush)
=>
	(up-jump-rule 2)
)

(defrule
	(civilian-population == 16)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 17)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)

=>
	(set-strategic-number sn-wood-gatherer-percentage 24)
	(set-strategic-number sn-food-gatherer-percentage 76)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 15)
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 16)
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-gold-gatherer-percentage 6)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population >= 17)
	(civilian-population <= 25)
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 16)
	(set-strategic-number sn-food-gatherer-percentage 84)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 26)
	(current-age == dark-age)
	(goal strategy-goal sg-drush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 58)
	(set-strategic-number sn-food-gatherer-percentage 27)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 10)
	(current-age == dark-age)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 11)
	(current-age == dark-age)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 12)
	(current-age == dark-age)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 13)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 23)
	(set-strategic-number sn-food-gatherer-percentage 77)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 14)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 21)
	(set-strategic-number sn-food-gatherer-percentage 79)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 15)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-food-gatherer-percentage 80)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 16)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 19)
	(set-strategic-number sn-food-gatherer-percentage 81)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 17)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-scoutrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 18)
	(set-strategic-number sn-food-gatherer-percentage 82)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 9)
	(current-age == dark-age)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(set-strategic-number sn-food-gatherer-percentage 78)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 10)
	(current-age == dark-age)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-food-gatherer-percentage 80)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 11)
	(current-age == dark-age)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 18)
	(set-strategic-number sn-food-gatherer-percentage 82)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 12)
	(current-age == dark-age)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 16)
	(set-strategic-number sn-food-gatherer-percentage 84)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 13)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 15)
	(set-strategic-number sn-food-gatherer-percentage 85)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 14)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 14)
	(set-strategic-number sn-food-gatherer-percentage 86)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 15)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 13)
	(set-strategic-number sn-food-gatherer-percentage 87)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 16)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 12)
	(set-strategic-number sn-food-gatherer-percentage 88)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 17)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 18)
	(set-strategic-number sn-food-gatherer-percentage 82)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population >= 18)
	(current-age == dark-age)
	(up-research-status c: feudal-age != research-pending)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(set-strategic-number sn-food-gatherer-percentage 78)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population >= 18)
	(current-age == dark-age)
	(up-research-status c: feudal-age >= research-pending)
	(up-compare-goal gl-water-on-map != 1)
	(unit-type-count militiaman-line < 1)
	(goal strategy-goal sg-towerrush)
=>
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 22)
)

(defrule
	(civilian-population >= 18)
	(current-age == dark-age)
	(up-research-status c: feudal-age >= research-pending)
	(up-compare-goal gl-water-on-map != 1)
	(goal strategy-goal sg-towerrush)
	(unit-type-count militiaman-line >= 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 17)
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 22)
)

(defrule
	(or (goal strategy-goal sg-boom-imp)
	(or (goal strategy-goal sg-drush)
	(goal strategy-goal sg-towerrush)))
=>
	(up-jump-rule 3)
)

(defrule
	(civilian-population == 18)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)

=>
	(set-strategic-number sn-wood-gatherer-percentage 22)
	(set-strategic-number sn-food-gatherer-percentage 78)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 19)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 26)
	(set-strategic-number sn-food-gatherer-percentage 74)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(civilian-population == 20)
	(current-age == dark-age)
	(not(goal strategy-goal sg-scoutrush))
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 13)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 14)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 15)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 16)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
	(not (goal strategy-goal sg-drush))
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 17)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
	(not (goal strategy-goal sg-drush))
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 18)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
	(not(goal strategy-goal sg-boom-imp))
	(not(goal strategy-goal sg-drush))

=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(unit-type-count villager == 19)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map == 1)
	(not(goal strategy-goal sg-boom-imp))
	(not(goal strategy-goal sg-drush))
=>
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-food-gatherer-percentage 68)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == dark-age)
	(civilian-population == 20)
	(up-research-status c: feudal-age != research-pending)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == dark-age)
	(civilian-population >= 20)
	(up-research-status c: feudal-age != research-pending)
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == dark-age)
	(civilian-population == 20)
	(up-research-status c: feudal-age >= research-pending)
	(goal meso-civ NO)
=>
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(current-age == dark-age)
	(civilian-population == 20)
	(up-research-status c: feudal-age >= research-pending)
	(goal meso-civ YES)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 21)
	(up-research-status c: feudal-age != research-pending)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == dark-age)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 21)
	(up-research-status c: feudal-age >= research-pending)
=>
	(set-strategic-number sn-wood-gatherer-percentage 52) ;11 on wood
	(set-strategic-number sn-food-gatherer-percentage 38) ;8 on food
	(set-strategic-number sn-gold-gatherer-percentage 10) ;2 on gold
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 68)
	(set-strategic-number sn-food-gatherer-percentage 16)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 40) ;10 vills on wood, add more on wood now
	(set-strategic-number sn-food-gatherer-percentage 32) ;8 vills on food
	(set-strategic-number sn-gold-gatherer-percentage 28) ;7 vills on gold, not more
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-food-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 27)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-SCENARIO-GAME

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 27)
=>
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-food-gatherer-percentage 30)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 28)
=>
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-food-gatherer-percentage 29)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 29)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48) 
	(set-strategic-number sn-food-gatherer-percentage 28)
	(set-strategic-number sn-gold-gatherer-percentage 24)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 50) ;15 on wood, not more
	(set-strategic-number sn-food-gatherer-percentage 27)  
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 31)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-food-gatherer-percentage 29) ;add more on food now
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 32)
=>
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-food-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 33)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population == 34)
=>
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)		

(defrule
	(goal strategy-goal sg-archerrush)
	(current-age == feudal-age)
	(civilian-population >= 35)
	(civilian-population < 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-archerrush)
	(civilian-population >= 40)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)	

#end-if
#end-if

;towerrush

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 19)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 16)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 20)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 15)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 14)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 36) ;keep 8 on food
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 14) ;keep 3 on stone, 3 on gold
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 12)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45) ;keep 12 on wood
	(set-strategic-number sn-food-gatherer-percentage 31)
	(set-strategic-number sn-gold-gatherer-percentage 12)
	(set-strategic-number sn-stone-gatherer-percentage 12)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 27)
=>
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 7) ;2 on gold
	(set-strategic-number sn-stone-gatherer-percentage 15) ;4 on stone
)

(defrule
	(goal strategy-goal sg-towerrush) 
	(current-age == feudal-age)
	(civilian-population == 28)
=>
	(set-strategic-number sn-wood-gatherer-percentage 43) 
	(set-strategic-number sn-food-gatherer-percentage 35) ;keep 10 on food
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(set-strategic-number sn-stone-gatherer-percentage 15)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 29)
=>
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 47) ;keep 14 on wood
	(set-strategic-number sn-food-gatherer-percentage 33) ;keep adding villagers on food now
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(set-strategic-number sn-stone-gatherer-percentage 13)
)

(defrule
	(goal strategy-goal sg-towerrush) 
	(current-age == feudal-age)
	(civilian-population == 31)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 10) ;3 on gold
	(set-strategic-number sn-stone-gatherer-percentage 10) ;3 on stone
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 32)
=>
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 9)
	(set-strategic-number sn-stone-gatherer-percentage 9)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(current-age == feudal-age)
	(civilian-population == 33)
=>
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 9)
	(set-strategic-number sn-stone-gatherer-percentage 9)
)

(defrule
	(goal strategy-goal sg-towerrush)
	(civilian-population >= 34)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38) ;13 on wood
	(set-strategic-number sn-food-gatherer-percentage 38) ;13 on food
	(set-strategic-number sn-gold-gatherer-percentage 15) ;5 on gold
	(set-strategic-number sn-stone-gatherer-percentage 9) ;3 on stone
)



; towers against archers

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(military-population < 3)
	(players-unit-type-count focus-player archer-line >= 8)
	(or (building-type-count-total archery-range == 0)
		(building-type-count-total stable == 0))
	(civilian-population >= 21)
	(civilian-population < 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-food-gatherer-percentage 22)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)

(defrule
	(current-age == feudal-age)
	(town-under-attack)
	(military-population < 3)
	(players-unit-type-count focus-player archer-line >= 8)
	(or (building-type-count-total archery-range == 0)
		(building-type-count-total stable == 0))
	(civilian-population >= 30)
	(civilian-population < 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 57)
	(set-strategic-number sn-food-gatherer-percentage 18)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 7)
)	

(defrule
	(current-age == castle-age)
	(players-unit-type-count focus-player archer-line >= 16)
	(military-population < 16)
	(civilian-population >= 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-food-gatherer-percentage 32)
	(set-strategic-number sn-gold-gatherer-percentage 22)
	(set-strategic-number sn-stone-gatherer-percentage 14)
)

#load-if-defined UP-NOMAD-STYLE

(defrule
	(not(enemy-buildings-in-town))
	(civilian-population >= 27)
	(civilian-population < 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(enemy-buildings-in-town)
	(civilian-population >= 27)
	(civilian-population < 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-food-gatherer-percentage 22)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)

(defrule
	(not(enemy-buildings-in-town))
	(civilian-population >= 30)
	(civilian-population < 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)	

(defrule
	(enemy-buildings-in-town)
	(civilian-population >= 30)
	(civilian-population < 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 57)
	(set-strategic-number sn-food-gatherer-percentage 18)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 7)
)	


#end-if

#load-if-defined UP-SCENARIO-GAME

(defrule
	(not(enemy-buildings-in-town))
	(civilian-population >= 27)
	(civilian-population < 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-food-gatherer-percentage 25)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(enemy-buildings-in-town)
	(civilian-population >= 27)
	(civilian-population < 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-food-gatherer-percentage 22)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 10)
)

(defrule
	(not(enemy-buildings-in-town))
	(civilian-population >= 30)
	(civilian-population < 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 60)
	(set-strategic-number sn-food-gatherer-percentage 20)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)	

(defrule
	(enemy-buildings-in-town)
	(civilian-population >= 30)
	(civilian-population < 40)
=>
	(set-strategic-number sn-wood-gatherer-percentage 57)
	(set-strategic-number sn-food-gatherer-percentage 18)
	(set-strategic-number sn-gold-gatherer-percentage 18)
	(set-strategic-number sn-stone-gatherer-percentage 7)
)	

#end-if

;fastcastle gu build order

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 61)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 76)
	(set-strategic-number sn-food-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 64)
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 61)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 58)
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 56)
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-SCENARIO-GAME

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(current-age == feudal-age)
	(civilian-population == 27)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-food-gatherer-percentage 44)
	(set-strategic-number sn-gold-gatherer-percentage 11)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-gu)
	(civilian-population >= 28)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

; (defrule
	; (goal strategy-goal sg-fastcastle-gu)
	; (civilian-population >= 29)
	; (civilian-population < 40)
; =>
	; (set-strategic-number sn-wood-gatherer-percentage 31)
	; (set-strategic-number sn-food-gatherer-percentage 41)
	; (set-strategic-number sn-gold-gatherer-percentage 20)
	; (set-strategic-number sn-stone-gatherer-percentage 8)
; )	
#end-if
#end-if

;fastcastle uu build order
(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 61)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map != 1)
	(civilian-population == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 46)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 76)
	(set-strategic-number sn-food-gatherer-percentage 24)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)


(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 64)
	(set-strategic-number sn-food-gatherer-percentage 36)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 61)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 58)
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(up-compare-goal gl-water-on-map == 1)
	(unit-type-count villager == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 46)
	(set-strategic-number sn-food-gatherer-percentage 38)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)

#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-SCENARIO-GAME

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(current-age == feudal-age)
	(civilian-population == 27)
=>
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(set-strategic-number sn-stone-gatherer-percentage 11)
)

(defrule
	(goal strategy-goal sg-fastcastle-uu)
	(current-age == feudal-age)
	(civilian-population >= 28)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 34)
	(set-strategic-number sn-gold-gatherer-percentage 7)
	(set-strategic-number sn-stone-gatherer-percentage 21)
)

; (defrule
	; (goal strategy-goal sg-fastcastle-uu)
	; (current-age >= castle-age)
	; (civilian-population >= 29)
	; (civilian-population < 40)
; =>
	; (set-strategic-number sn-wood-gatherer-percentage 25)
	; (set-strategic-number sn-food-gatherer-percentage 40)
	; (set-strategic-number sn-gold-gatherer-percentage 25)
	; (set-strategic-number sn-stone-gatherer-percentage 10)
; )	
#end-if
#end-if

;scoutrush Build-Order

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population == 20)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population == 21)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population == 22)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population == 23)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(civilian-population == 24)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(unit-type-count villager == 20)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(unit-type-count villager == 21)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 54)
	(set-strategic-number sn-food-gatherer-percentage 33)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(unit-type-count villager == 22)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 52)
	(set-strategic-number sn-food-gatherer-percentage 35)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(unit-type-count villager == 23)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 50)
	(set-strategic-number sn-food-gatherer-percentage 37)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ YES)
	(current-age == feudal-age)
	(unit-type-count villager == 24)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-food-gatherer-percentage 39)
	(set-strategic-number sn-gold-gatherer-percentage 13)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population == 21)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 48)
	(set-strategic-number sn-food-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population == 22)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population == 23)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(civilian-population == 24)
	(up-compare-goal gl-water-on-map != 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(unit-type-count villager == 21)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 58)
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(unit-type-count villager == 22)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 57)
	(set-strategic-number sn-food-gatherer-percentage 43)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(unit-type-count villager == 23)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 55)
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(goal meso-civ NO)
	(current-age == feudal-age)
	(unit-type-count villager == 24)
	(up-compare-goal gl-water-on-map == 1)
=>
	(set-strategic-number sn-wood-gatherer-percentage 52)
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 25)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 26)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-SCENARIO-GAME

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 27)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 63)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 28)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-food-gatherer-percentage 64)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 29)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 66)
	(set-strategic-number sn-gold-gatherer-percentage 3)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 30)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 3)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 31)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 32)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population == 33)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-food-gatherer-percentage 51)
	(set-strategic-number sn-gold-gatherer-percentage 15)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-scoutrush)
	(civilian-population >= 34)
	(current-age == feudal-age)
=>
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)		

#end-if
#end-if

;Fast-Imp Build-Order

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 15)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 16)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 17)
=>
	(set-strategic-number sn-wood-gatherer-percentage 41)
	(set-strategic-number sn-food-gatherer-percentage 59)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 18)
=>
	(set-strategic-number sn-wood-gatherer-percentage 44)
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 19)
=>
	(set-strategic-number sn-wood-gatherer-percentage 47)
	(set-strategic-number sn-food-gatherer-percentage 53)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 20)
=>
	(set-strategic-number sn-wood-gatherer-percentage 45)
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 43)
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 41)
	(set-strategic-number sn-food-gatherer-percentage 59)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-food-gatherer-percentage 61)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 62)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 25)
=>
	(set-strategic-number sn-wood-gatherer-percentage 36)
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 4)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 26)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 57)
	(set-strategic-number sn-gold-gatherer-percentage 8)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

#load-if-not-defined UP-NOMAD-STYLE
#load-if-not-defined UP-SCENARIO-GAME

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 27)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 56)
	(set-strategic-number sn-gold-gatherer-percentage 11)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 28)
=>
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-food-gatherer-percentage 54)
	(set-strategic-number sn-gold-gatherer-percentage 14)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 29)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 52)
	(set-strategic-number sn-gold-gatherer-percentage 17)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 30)
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 50)
	(set-strategic-number sn-gold-gatherer-percentage 20)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 31)
=>
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-food-gatherer-percentage 48)
	(set-strategic-number sn-gold-gatherer-percentage 23)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 32)
=>
	(set-strategic-number sn-wood-gatherer-percentage 28)
	(set-strategic-number sn-food-gatherer-percentage 47)
	(set-strategic-number sn-gold-gatherer-percentage 25)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 33)
=>
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-food-gatherer-percentage 40)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
	(goal strategy-goal sg-boom-imp)
	(civilian-population == 34)
=>
	(set-strategic-number sn-wood-gatherer-percentage 38)
	(set-strategic-number sn-food-gatherer-percentage 41)
	(set-strategic-number sn-gold-gatherer-percentage 21)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)		

#end-if
#end-if

; general Eco-Balance

; (defrule
	; (current-age == feudal-age)
	; (gold-amount > 500)
	; (wood-amount < 50)
	; (goal gl-gold-saving 0)
	; (up-compare-sn sn-gold-gatherer-percentage c:> 7)
; =>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	; (up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	; (chat-to-player my-player-number "Balancing eco from gold to wood")
; )

(defrule
	(current-age >= castle-age)
	(not (goal strategy-goal sg-fastcastle-uu))
	(not (goal strategy-goal sg-boom-imp))
	(civilian-population g:>= f-villager-goal)
=>
	(set-strategic-number sn-wood-gatherer-percentage 34)
	(set-strategic-number sn-food-gatherer-percentage 45)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 5)
	(chat-to-player my-player-number "Setting up Economy for Castle-Age")
	(disable-self)
)


(defrule
	(timer-triggered t-3-sec)
	(current-age == castle-age)
	;(up-research-status c: imperial-age != research-pending)
	(food-amount > 500)
	(wood-amount < 50)
	(goal gl-food-saving 0)
	(building-type-count town-center < 2)
	(up-compare-sn sn-food-gatherer-percentage c:> 20)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == castle-age)
	;(up-research-status c: imperial-age != research-pending)
	(food-amount > 500)
	(gold-amount < 50)
	(goal gl-food-saving 0)
	(building-type-count town-center < 2)
	(up-compare-sn sn-food-gatherer-percentage c:> 20)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == castle-age)
	;(up-research-status c: imperial-age != research-pending)
	(wood-amount > 500)
	(food-amount < 50)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 20)
=>	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)	
	;(chat-to-player my-player-number "Balancing eco from wood to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == castle-age)
	;(up-research-status c: imperial-age != research-pending)
	(wood-amount > 500)
	(gold-amount < 50)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 20)
=>	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from wood to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == castle-age)
	;(up-research-status c: imperial-age != research-pending)
	(gold-amount > 500)
	(food-amount < 50)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 10)
=>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from gold to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	;(up-research-status c: imperial-age != research-pending)
	(gold-amount > 500)
	(wood-amount < 50)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 10)
=>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from gold to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(stone-amount < 100)
	(building-type-count-total town-center < 2)
	(wood-amount > 275)
	(up-compare-sn sn-stone-gatherer-percentage c:< 10)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-stone-gatherer-percentage c:+ 10)
	;(chat-to-player my-player-number "Balancing eco to stone for TCs")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	(stone-amount < 100)
	(building-type-count-total castle < 1)
	(up-compare-sn sn-stone-gatherer-percentage c:< 6)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 3)
	(up-modify-sn sn-wood-gatherer-percentage c:- 3)
	(up-modify-sn sn-stone-gatherer-percentage c:+ 6)
	;(chat-to-player my-player-number "Balancing eco to stone for a castle")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	(building-type-count-total castle >= 1)
	(building-type-count-total town-center >= 3)
	(up-compare-sn sn-stone-gatherer-percentage c:> 10)
=>	(up-modify-sn sn-food-gatherer-percentage c:+ 3)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 3)
	(up-modify-sn sn-stone-gatherer-percentage c:- 6)
	;(chat-to-player my-player-number "Balancing eco from stone to food and wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(food-amount > 1000)
	(wood-amount < 200)
	(goal gl-food-saving 0)
	(up-compare-sn sn-food-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(food-amount > 1000)
	(gold-amount < 200)
	(goal gl-food-saving 0)
	(up-compare-sn sn-food-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(wood-amount > 1000)
	(food-amount < 200)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)	
	;(chat-to-player my-player-number "Balancing eco from wood to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(wood-amount > 1000)
	(gold-amount < 200)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from wood to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(gold-amount > 1000)
	(food-amount < 200)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 15)
=>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from gold to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(gold-amount > 1000)
	(wood-amount < 200)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 15)
=>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from gold to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(food-amount > 1000)
	(wood-amount < 200)
	(goal gl-food-saving 0)
	(up-compare-sn sn-food-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(food-amount > 1000)
	(gold-amount < 200)
	(goal gl-food-saving 0)
	(up-compare-sn sn-food-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(wood-amount > 1000)
	(food-amount < 200)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)	
	;(chat-to-player my-player-number "Balancing eco from wood to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(wood-amount > 1000)
	(gold-amount < 200)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from wood to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age == imperial-age)
	(gold-amount > 2000)
	(food-amount < 500)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 15)
=>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from gold to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(gold-amount > 2000)
	(wood-amount < 500)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 15)
=>	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from gold to wood")
)


(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(stone-amount > 2000)
	(wood-amount < 500)
	(goal gl-stone-saving 0)
	(up-compare-sn sn-stone-gatherer-percentage c:> 12)
=>	(up-modify-sn sn-stone-gatherer-percentage c:- 5)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from stone to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(stone-amount > 2000)
	(food-amount < 500)
	(goal gl-stone-saving 0)
	(up-compare-sn sn-stone-gatherer-percentage c:> 12)
=>	(up-modify-sn sn-stone-gatherer-percentage c:- 5)
	(up-modify-sn sn-food-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from stone to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(stone-amount > 2000)
	(gold-amount < 500)
	(goal gl-stone-saving 0)
	(up-compare-sn sn-stone-gatherer-percentage c:> 12)
=>	(up-modify-sn sn-stone-gatherer-percentage c:- 5)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from stone to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	(stone-amount > 201)
	(wood-amount < 500)
	(goal gl-stone-saving 0)
	(up-compare-sn sn-stone-gatherer-percentage c:> 5)
=>	(up-modify-sn sn-stone-gatherer-percentage c:- 3)
	(up-modify-sn sn-wood-gatherer-percentage c:+ 3)
	;(chat-to-player my-player-number "Balancing eco from stone to wood")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	(stone-amount > 201)
	(food-amount < 500)
	(goal gl-stone-saving 0)
	(up-compare-sn sn-stone-gatherer-percentage c:> 5)
=>	(up-modify-sn sn-stone-gatherer-percentage c:- 3)
	(up-modify-sn sn-food-gatherer-percentage c:+ 3)
	;(chat-to-player my-player-number "Balancing eco from stone to food")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	(stone-amount > 201)
	(gold-amount < 500)
	(goal gl-stone-saving 0)
	(up-compare-sn sn-stone-gatherer-percentage c:> 5)
=>	(up-modify-sn sn-stone-gatherer-percentage c:- 3)
	(up-modify-sn sn-gold-gatherer-percentage c:+ 3)
	;(chat-to-player my-player-number "Balancing eco from stone to gold")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(stone-amount < 100)
	(gold-amount > 800)
	(goal gl-gold-saving 0)
	(up-compare-sn sn-gold-gatherer-percentage c:> 15)
=>	(up-modify-sn sn-stone-gatherer-percentage c:+ 5)
	(up-modify-sn sn-gold-gatherer-percentage c:- 5)
	;(chat-to-player my-player-number "Balancing eco from gold to stone")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(stone-amount < 100)
	(wood-amount > 800)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 25)
=>	(up-modify-sn sn-stone-gatherer-percentage c:+ 5)
	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	;(chat-to-player my-player-number "Balancing eco from wood to stone")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= imperial-age)
	(stone-amount < 100)
	(food-amount > 800)
	(goal gl-food-saving 0)
	(up-compare-sn sn-food-gatherer-percentage c:> 25)
=>	
	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-stone-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to stone")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= feudal-age)
	(stone-amount < 100)
	(goal gl-stone-saving 7)
	(up-compare-sn sn-food-gatherer-percentage c:> 15)
	(up-compare-sn sn-stone-gatherer-percentage c:== 0)
=>
	(up-modify-sn sn-food-gatherer-percentage c:- 5)
	(up-modify-sn sn-stone-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from food to stone")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= feudal-age)
	(stone-amount < 100)
	(goal gl-stone-saving 7)
	(up-compare-sn sn-wood-gatherer-percentage c:> 15)
	(up-compare-sn sn-stone-gatherer-percentage c:== 0)
=>
	(up-modify-sn sn-wood-gatherer-percentage c:- 5)
	(up-modify-sn sn-stone-gatherer-percentage c:+ 5)
	;(chat-to-player my-player-number "Balancing eco from wood to stone")
)

(defrule
	(timer-triggered t-3-sec)
	(current-age >= castle-age)
	(wood-amount >= 1000)
	(food-amount < 1000)
	(goal gl-wood-saving 0)
	(up-compare-sn sn-wood-gatherer-percentage c:> 20)
=>
	(up-modify-sn sn-wood-gatherer-percentage c:- 10)
	(up-modify-sn sn-food-gatherer-percentage c:+ 10)
)

;endregion

;region Market =====================================================

(defrule
    (current-age > feudal-age)
    (players-population any-ally > 10)
    (civilian-population > 75)
    (unit-type-count trade-cart < 50)
    (civilian-population < 150)
    (not(and(current-age == imperial-age)
    (research-available ri-cavalier)))
    (not(research-available ri-chain-barding))
    (not(research-available ri-bloodlines))
    (game-time > 5)
=>
    (set-strategic-number sn-preferred-trade-distance 9999)
    (set-strategic-number sn-coop-share-information 1)
    (train trade-cart)
)

(defrule
    (current-age > feudal-age)
    (players-population any-ally > 10)
    (civilian-population > 65)
    (not(and(current-age == imperial-age)
    (research-available ri-cavalier)))

    (unit-type-count trade-cart >= 7)
    (game-time > 5)
=>
    (research ri-caravan)
)

 ;TO-DO: Optimale Platzierung von Marktplaetzen
 
 
 ;#load-if-defined UP-ALLY-IN-GAME
 ;#load-if-defined UP-POCKET-POSITION
 
 ;(defrule
	;(game-time > 2400)
;=>
	;(up-modify-goal gl-trade-setup c:+ 1)
	;(up-get-point position-corner temporary-point-x)
	;(up-send-flare temporary-point-x)
	;(chat-to-allies "52")
	;(disable-self)
 ;)
 
; (defrule
	; (goal gl-trade-setup > 0)
	; (up-can-build-line 0 temporary-point-x c: market)
; =>
	; (up-build-line temporary-point-x temporary-point-x c: market)
	; (up-modify-goal gl-trade-setup c:- 1)
; )

 ;#end-if

 
 
 ;(defrule
	;(taunt-detected any-ally 52)
	;(unit-type-count flare > 0)
;=>
	;(acknowledge-taunt this-any-ally 52)
	;(up-find-flare market-point-x)
	;(up-modify-goal gl-trade-setup c:+ 1)
;)	

;#load-if-not-defined UP-POCKET-POSITION
; (defrule
	; (goal gl-trade-setup > 0)
	; (up-can-build-line 0 market-point-x c: market)
; =>
	; (up-build-line market-point-x market-point-x c: market)
	; (up-modify-goal gl-trade-setup c:- 1)
; )
;#end-if
;#end-if

			
(defrule
    (food-amount < 800)
	(gold-amount > 300)
    (current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
    (building-type-count market >= 1)
=>
    (buy-commodity food)
	(chat-to-player my-player-number "Kaufe Nahrung")
)

(defrule
    (food-amount > 900)
    (gold-amount < 200)
    (current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

(defrule
	(wood-amount >= 100)
    (or(and(food-amount > 800)
    (gold-amount < 200))
    (and(food-amount < 800)
    (wood-amount > 300)))
    (current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity wood)
    (chat-to-player my-player-number "Verkaufe Holz")
)

(defrule
	(stone-amount > 1000)
    (current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity stone)
    (chat-to-player my-player-number "Verkaufe Stein")
)

(defrule
	(stone-amount >= 100)
    (current-age == feudal-age)
	(up-research-status c: castle-age != research-pending)
    (building-type-count market >= 1)
	(food-amount > 500)
	(not (goal strategy-goal sg-fastcastle-uu))
	(or (up-compare-goal gl-military-advantage >= 25) ;?
	(up-compare-goal gl-military-advantage <= -16))
=>
    (sell-commodity stone)
    (chat-to-player my-player-number "Verkaufe Stein")
)

(defrule
    (food-amount > 1100)
    (gold-amount < 800)
    (current-age == castle-age)
	(up-research-status c: imperial-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

(defrule
    (food-amount > 1500)
    (gold-amount < 1000)
    (current-age == castle-age)
	(up-research-status c: imperial-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

(defrule
    (stone-amount > 1000)
	(wood-amount < 100)
    (current-age == castle-age)
	(up-research-status c: imperial-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity stone)
    (chat-to-player my-player-number "Verkaufe Stein")
)

(defrule
    (food-amount > 1200)
    (gold-amount > 900)
	(wood-amount < 100)
    (current-age == castle-age)
	(up-research-status c: imperial-age != research-pending)
    (building-type-count market >= 1)
=>
    (sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

(defrule
    (wood-amount > 1000)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (sell-commodity wood)
    (chat-to-player my-player-number "Verkaufe Holz")
)

(defrule
    (wood-amount > 1200)
	(gold-amount < 100)
    (current-age == imperial-age)
    (building-type-count market >= 1)
=>
    (sell-commodity wood)
    (chat-to-player my-player-number "Verkaufe Holz")
)

(defrule
    (food-amount > 1200)
	(gold-amount < 100)
    (current-age == imperial-age)
    (building-type-count market >= 1)
=>
    (sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

(defrule
    (gold-amount > 600)
	(food-amount < 500)
	(up-compare-goal gl-gold-saving == 0)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity food)
    (chat-to-player my-player-number "Kaufe Nahrung")
)

(defrule
    (gold-amount > 500)
	(food-amount < 100)
	(wood-amount < 100)
	(up-compare-goal gl-gold-saving == 0)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity wood)
    (chat-to-player my-player-number "Kaufe Nahrung und Holz")
)

(defrule
    (gold-amount > 400)
	(food-amount < 100)
	(wood-amount >= 100)
	(up-compare-goal gl-gold-saving == 0)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity food)
    (chat-to-player my-player-number "Kaufe Nahrung und Holz")
)

(defrule
    (gold-amount > 1100)
	(food-amount < 1000)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity food)
    (chat-to-player my-player-number "Kaufe Nahrung")
)

(defrule
    (gold-amount > 500)
	(food-amount < 50)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity food)
    (chat-to-player my-player-number "Kaufe Nahrung")
)

(defrule
    (gold-amount > 1000)
	(food-amount < 100)
    (current-age == imperial-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity food)
    (chat-to-player my-player-number "Kaufe Nahrung")
)

(defrule
    (gold-amount > 1000)
	(wood-amount < 100)
    (current-age >= castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
    (buy-commodity wood)
    (chat-to-player my-player-number "Kaufe Holz")
)

(defrule
    (food-amount > 700)
	(wood-amount < 200)
	(gold-amount < 400)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(up-research-status c: imperial-age != research-pending)
=>
	(sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

; (defrule
    ; (food-amount > 1100)
	; (gold-amount > 400)
	; (wood-amount < 200)
    ; (current-age == castle-age)
    ; (building-type-count market >= 1)
	; (up-research-status c: imperial-age != research-pending)
; =>
	; (buy-commodity wood)
    ; (chat-to-player my-player-number "Kaufe Holz")
; )

(defrule
    (stone-amount >= 500)
	(stone-amount < 600)
	(can-buy-commodity stone)
    (current-age == castle-age)
    (building-type-count market >= 1)
	(building-type-count castle < 0)
	(goal strategy-goal sg-fastcastle-uu)
	(up-research-status c: imperial-age != research-pending)
=>
	(buy-commodity stone)
    (chat-to-player my-player-number "Kaufe Stein fuer Burg")
)

(defrule
    (stone-amount < 100)
	(can-buy-commodity stone)
    (current-age >= castle-age)
    (building-type-count market >= 1)
	(building-type-count-total town-center == 0)
=>
	(buy-commodity stone)
    (chat-to-player my-player-number "Kaufe Stein fuer Dorfzentrum")
)

(defrule
    (stone-amount > 2000)
    (building-type-count market >= 1)
=>
	(sell-commodity stone)
    (chat-to-player my-player-number "Verkaufe Stein")
)

(defrule
    (wood-amount > 2500)
	(or (gold-amount < 100)
	(food-amount < 100))
    (building-type-count market >= 1)
=>
	(sell-commodity wood)
    (chat-to-player my-player-number "Verkaufe Holz")
)

(defrule
    (food-amount > 2100)
	(or (gold-amount < 100)
	(wood-amount < 100))
    (building-type-count market >= 1)
=>
	(sell-commodity food)
    (chat-to-player my-player-number "Verkaufe Nahrung")
)

(defrule
	(wood-amount < 100)
	(gold-amount < 400)
	(food-amount > 1200)
    (current-age == imperial-age)
    (building-type-count market >= 1)
=>
	(sell-commodity food)
    (chat-to-player my-player-number "Kaufe Holz")
)

(defrule
	(wood-amount < 100)
	(gold-amount > 400)
    (current-age == imperial-age)
    (building-type-count market >= 1)
=>
	(buy-commodity wood)
    (chat-to-player my-player-number "Kaufe Holz")
)

;endregion

;region AI Names ====================================================

#load-if-not-defined UP-SCENARIO-GAME

#load-if-defined UP-PLAYER-1
(defrule
	(true)
=>	(up-change-name "|Zebba| Calamity")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-2
(defrule
	(true)
=>	(up-change-name "|Zebba| Wrath of the Ruin")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-3
(defrule
	(true)
=>	(up-change-name "|Zebba| TheOneArmedArcher")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-4
(defrule
	(true)
=>	(up-change-name "|Zebba| Knightmare")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-5
(defrule
	(true)
=>	(up-change-name "|Zebba| The Rusher")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-6
(defrule
	(true)
=>	(up-change-name "|Zebba| The Boomer")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-7
(defrule
	(true)
=>	(up-change-name "|Zebba| MessedUpMyBuildOrder")
	(disable-self))
#end-if
#load-if-defined UP-PLAYER-8
(defrule
	(true)
=>	(up-change-name "|Zebba| Fat Tony")
	(disable-self))
#end-if

#end-if

;endregion

;region Resign =====================================================

(defrule
    (game-time > 1200)
    (unit-type-count-total villager < 10)
    (military-population < 4)
            ;(building-type-count castle == 0)
    (players-military-population any-enemy > 25 )
    (players-civilian-population any-enemy > 25 )
    (players-military-population every-ally < 20 )
    (players-civilian-population every-ally < 20 )
=>
    (enable-timer resign-timer 5)
    (chat-to-all "gg wp")
	(disable-self)
)

        (defrule
        (game-time > 1500)
            (unit-type-count-total villager < 15)
            (military-population < 10)
            ;(building-type-count castle == 0)
            (players-military-population any-enemy > 25 )
            (players-civilian-population any-enemy > 30 )
            (players-military-population every-ally < 20 )
            (players-civilian-population every-ally < 20 )
        =>
                (enable-timer resign-timer 5)
                (chat-to-all "gg wp")
                (disable-self)
        )

        (defrule
        (game-time > 1500)
            (unit-type-count-total villager < 25)
            (military-population < 10)
            ;(building-type-count castle == 0)
            (players-military-population any-enemy > 35 )
            (players-civilian-population any-enemy > 35 )
            (players-military-population every-ally < 20 )
            (players-civilian-population every-ally < 20 )
        =>
                (enable-timer resign-timer 5)
                (chat-to-all "gg wp")
                (disable-self)
        )

        (defrule
        (game-time > 1800)
            (unit-type-count-total villager < 25)
            (military-population < 10)
            ;(building-type-count castle == 0)
            (players-military-population any-enemy > 25 )
                (players-civilian-population any-enemy > 35 )
            (players-military-population every-ally < 25 )
            (players-civilian-population every-ally < 25 )
        =>
                (enable-timer resign-timer 5)
                (chat-to-all "gg wp")
                (disable-self)
        )

        (defrule
        (game-time > 1800)
            (unit-type-count-total villager < 45)
            (military-population < 10)
            ;(building-type-count castle == 0)
            (players-military-population any-enemy > 45 )
                (players-civilian-population any-enemy > 45)
            (players-military-population every-ally < 25 )
            (players-civilian-population every-ally < 25 )
        =>
                (enable-timer resign-timer 5)
                (chat-to-all "gg wp")
                (disable-self)
        )
	
(defrule
	(building-type-count-total town-center == 0)
	(unit-type-count-total villager == 0)
	(unit-type-count-total monk == 0)
	(building-type-count-total monastery == 0)
	(military-population == 0)
=>
    (enable-timer resign-timer 5)
    (chat-to-all "gg wp")
    (disable-self)
)
	
(defrule
    (timer-triggered resign-timer)
    =>
    (resign)
)

;endregion

(defrule	
	(timer-triggered t-3-sec)	
=>	
	(disable-timer t-3-sec)	
	;(chat-to-player my-player-number "Test")
	(enable-timer t-3-sec 3)	
)
